import{_ as a,c as e,o as t,a2 as o}from"./chunks/framework.DLPB9-dE.js";const x=JSON.parse('{"title":"Vuex","description":"","frontmatter":{},"headers":[],"relativePath":"前端/库与框架/Vuex.md","filePath":"前端/库与框架/Vuex.md","lastUpdated":1620234346000}'),i={name:"前端/库与框架/Vuex.md"},r=o('<h1 id="vuex" tabindex="-1">Vuex <a class="header-anchor" href="#vuex" aria-label="Permalink to &quot;Vuex&quot;">​</a></h1><p><a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noreferrer">vuex</a>是一个专为vue.js应用程序开发的状态管理模式（它采用集中式存贮管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化）</p><h2 id="为什么要用vuex" tabindex="-1">为什么要用vuex？ <a class="header-anchor" href="#为什么要用vuex" aria-label="Permalink to &quot;为什么要用vuex？&quot;">​</a></h2><p>在应用中会遇见<strong>多个组件共享状态</strong>的情况</p><ul><li>多个视图共享一个状态</li><li>来自不同的视图行为需要修改同一个状态</li></ul><p>通过定义和隔离状态管理中的各种概念并通过强制规则维持视图和状态间的独立性，我们的代码将会变得更结构化且易维护</p><h2 id="vuex的核心概念" tabindex="-1">vuex的核心概念； <a class="header-anchor" href="#vuex的核心概念" aria-label="Permalink to &quot;vuex的核心概念；&quot;">​</a></h2><p>需要掌握核心的五个API</p><ul><li>state：存储数据，存储状态；在根实例中注册了store 后，用 this.$store.state 来访问；对应vue里面的data；存放数据方式为响应式，vue组件从store中读取数据，如数据发生变化，组件也会对应的更新。</li><li>getter：可以认为是 store 的计算属性，它的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。</li><li>mutation：更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。</li><li>action：包含任意异步操作，通过提交 mutation 间接更变状态。</li><li>module：将 store 分割成模块，每个模块都具有state、mutation、action、getter、甚至是嵌套子模块。</li></ul><p>数据传递流程，可以参考官网的这张图片</p><p><img src="http://ww2.sinaimg.cn/large/006tNc79gy1g5r9hyf12wj30jh0fb0sz.jpg" alt=""></p><p>当组件进行数据修改的时候我们需要调用dispatch来触发actions里面的方法。actions里面的每个方法中都会有一个commit方法，当方法执行的时候会通过commit来触发mutations里面的方法进行数据的修改。mutations里面的每个函数都会有一个state参数，这样就可以在mutations里面进行state的数据修改，当数据修改完毕后，会传导给页面。页面的数据也会发生改变。</p><h2 id="一些使用技巧" tabindex="-1">一些使用技巧 <a class="header-anchor" href="#一些使用技巧" aria-label="Permalink to &quot;一些使用技巧&quot;">​</a></h2><p>mapState</p><p>mapMutations</p><p>mapGetters</p><p>mapActions</p><h2 id="状态持久化" tabindex="-1">状态持久化 <a class="header-anchor" href="#状态持久化" aria-label="Permalink to &quot;状态持久化&quot;">​</a></h2><h2 id="源码分析" tabindex="-1">源码分析 <a class="header-anchor" href="#源码分析" aria-label="Permalink to &quot;源码分析&quot;">​</a></h2>',19),s=[r];function l(n,u,h,c,p,d){return t(),e("div",null,s)}const _=a(i,[["render",l]]);export{x as __pageData,_ as default};
