import{_ as n,c as s,o as a,b as p}from"./app.2f94c7c4.js";const f='{"title":"\u5B9E\u73B0\u8282\u6D41\u548C\u53BB\u6296\u51FD\u6570","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5B9E\u73B0\u8282\u6D41\u548C\u53BB\u6296\u51FD\u6570","slug":"\u5B9E\u73B0\u8282\u6D41\u548C\u53BB\u6296\u51FD\u6570"},{"level":2,"title":"\u5B9E\u73B0\u4E00\u4E2APromise","slug":"\u5B9E\u73B0\u4E00\u4E2Apromise"},{"level":2,"title":"\u5B9E\u73B0\u4E00\u4E2Abind\u51FD\u6570","slug":"\u5B9E\u73B0\u4E00\u4E2Abind\u51FD\u6570"},{"level":2,"title":"\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u51FD\u6570","slug":"\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u51FD\u6570"},{"level":2,"title":"\u5B9E\u73B0flattenDeep\uFF0C\u5C06\u6570\u7EC4\u5C55\u5E73","slug":"\u5B9E\u73B0flattendeep\uFF0C\u5C06\u6570\u7EC4\u5C55\u5E73"},{"level":2,"title":"\u5B9E\u73B0\u51FD\u6570\u67EF\u91CC\u5316","slug":"\u5B9E\u73B0\u51FD\u6570\u67EF\u91CC\u5316"},{"level":2,"title":"\u5B9E\u73B0compose","slug":"\u5B9E\u73B0compose"},{"level":2,"title":"JavaScript\u4EE3\u7801\u5B9E\u73B0","slug":"javascript\u4EE3\u7801\u5B9E\u73B0"}],"relativePath":"\u9762\u8BD5/\u9762\u8BD5\u9898/\u4EE3\u7801\u5B9E\u73B0.md"}',t={},o=p(`<h2 id="\u5B9E\u73B0\u8282\u6D41\u548C\u53BB\u6296\u51FD\u6570" tabindex="-1">\u5B9E\u73B0\u8282\u6D41\u548C\u53BB\u6296\u51FD\u6570 <a class="header-anchor" href="#\u5B9E\u73B0\u8282\u6D41\u548C\u53BB\u6296\u51FD\u6570" aria-hidden="true">#</a></h2><p>\u9996\u5148\u9700\u8981\u4E86\u89E3\u4E24\u4E2A\u51FD\u6570\u7684\u6982\u5FF5\u548C\u4F7F\u7528\u573A\u666F</p><p><a href="https://github.com/tangxiangmin/JSMagic/tree/master/Throttle%20%26%20Debounce" target="_blank" rel="noopener noreferrer">\u4EE3\u7801\u5B9E\u73B0</a></p><h2 id="\u5B9E\u73B0\u4E00\u4E2Apromise" tabindex="-1">\u5B9E\u73B0\u4E00\u4E2APromise <a class="header-anchor" href="#\u5B9E\u73B0\u4E00\u4E2Apromise" aria-hidden="true">#</a></h2><p><a href="https://github.com/tangxiangmin/JSMagic/blob/master/Promise/Promise.js" target="_blank" rel="noopener noreferrer">\u4EE3\u7801\u5B9E\u73B0</a>\uFF0C\u5B9E\u73B0\u4E86\u6784\u9020\u51FD\u6570\u548C\u94FE\u5F0F\u8C03\u7528\u7684then\u65B9\u6CD5</p><h2 id="\u5B9E\u73B0\u4E00\u4E2Abind\u51FD\u6570" tabindex="-1">\u5B9E\u73B0\u4E00\u4E2Abind\u51FD\u6570 <a class="header-anchor" href="#\u5B9E\u73B0\u4E00\u4E2Abind\u51FD\u6570" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">my_bind</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment">// \u4FDD\u5B58\u539F\u51FD\u6570</span>
    <span class="token keyword">var</span> <span class="token punctuation">[</span>context<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">]</span> <span class="token operator">=</span> arguments <span class="token comment">// \u7ED1\u5B9A\u65F6\u9884\u5148\u51FA\u5165\u7684\u53C2\u6570</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528\u65F6\u4F20\u5165\u7684\u53C2\u6570</span>
        <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570</span>
        <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span><span class="token function">my_bind</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// xxx 1, 2, 3</span>
</code></pre></div><h2 id="\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u51FD\u6570" tabindex="-1">\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u51FD\u6570 <a class="header-anchor" href="#\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u51FD\u6570" aria-hidden="true">#</a></h2><p>\u53C2\u8003\uFF1A<a href="https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1" target="_blank" rel="noopener noreferrer">\u5982\u4F55\u5199\u51FA\u4E00\u4E2A\u60CA\u8273\u9762\u8BD5\u5B98\u7684\u6DF1\u62F7\u8D1D?</a></p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u6BD4\u8F83\u539F\u59CB\u7684\u7248\u672C\uFF0C\u9700\u8981\u8003\u8651\u591A\u4E2A\u7EC6\u8282</p><ul><li>\u57FA\u7840\u9012\u5F52</li><li>\u62F7\u8D1D\u6570\u7EC4</li><li>\u5F15\u7528\u8D4B\u503C\uFF0C\u4F7F\u7528weakMap\uFF0C\u907F\u514D\u989D\u5916\u7684\u5185\u5B58\u7A7A\u95F4\u672A\u53CA\u65F6\u91CA\u653E</li><li>\u51FD\u6570\u7684\u62F7\u8D1D</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u4F55\u62F7\u8D1D\u4E00\u4E2A\u51FD\u6570\u5462</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">cloneFn</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> fn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> res
    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;res = &#39;</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B9E\u73B0flattendeep\uFF0C\u5C06\u6570\u7EC4\u5C55\u5E73" tabindex="-1">\u5B9E\u73B0flattenDeep\uFF0C\u5C06\u6570\u7EC4\u5C55\u5E73 <a class="header-anchor" href="#\u5B9E\u73B0flattendeep\uFF0C\u5C06\u6570\u7EC4\u5C55\u5E73" aria-hidden="true">#</a></h2><p>\u5C06\u8F93\u5165[1,[2,[3,4]],5]\u8F6C\u6362\u6210\u4E00\u7EF4\u6570\u7EC4[1,2,3,4,5]</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">flattenDeep</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            res <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flattenDeep</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B9E\u73B0\u51FD\u6570\u67EF\u91CC\u5316" tabindex="-1">\u5B9E\u73B0\u51FD\u6570\u67EF\u91CC\u5316 <a class="header-anchor" href="#\u5B9E\u73B0\u51FD\u6570\u67EF\u91CC\u5316" aria-hidden="true">#</a></h2><p>\u5C06\u591A\u53C2\u6570\u8F6C\u6362\u4E3A\u5355\u53C2\u6570\u7684\u5F62\u5F0F\uFF0C\u4E3B\u8981\u5229\u7528\u7684\u51FD\u6570\u7684<code>length</code>\u5C5E\u6027\u83B7\u53D6\u5B9A\u4E49\u65F6\u7684\u53C2\u6570\u4E2A\u6570</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">curry</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fn<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> args<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg2s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">curry</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>arg2s<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="\u5B9E\u73B0compose" tabindex="-1">\u5B9E\u73B0compose <a class="header-anchor" href="#\u5B9E\u73B0compose" aria-hidden="true">#</a></h2><p>\u53C2\u8003redux\u91CC\u9762\u7684\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>funcs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>funcs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token parameter">arg</span> <span class="token operator">=&gt;</span> arg
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>funcs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> funcs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> funcs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="javascript\u4EE3\u7801\u5B9E\u73B0" tabindex="-1">JavaScript\u4EE3\u7801\u5B9E\u73B0 <a class="header-anchor" href="#javascript\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a></h2><blockquote><p>\u5B9E\u73B0finDocList\u65B9\u6CD5\u6EE1\u8DB3\u4E0B\u9762\u4EE3\u7801\u8F93\u51FA</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;kids&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">words</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">finDocList</span><span class="token punctuation">(</span>docs<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1,2,3</span>
<span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">finDocList</span><span class="token punctuation">(</span>docs<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre></div><p>\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">finDocList</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">docs<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token operator">=</span> docs<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> words <span class="token operator">=</span> item<span class="token punctuation">.</span>words<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> idx <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">~</span>idx<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u7ED9\u5B9A\u4E00\u6BB5\u6587\u672C\u5185\u5BB9\u548C\u654F\u611F\u8BCD\uFF0C\u5B9E\u73B0\u654F\u611F\u8BCD\u6807\u8BB0</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">&quot;XX\u963F\u65AF\u987F\u6492\u65E6\u6492\u65E6\u548C\u8F7B\u5FAEoo\u9965\u997F\u548C\u6B66as\u5668\u5C31\u53EF\u601C\u89C1\u770B\u5B8C\u4F60\u53BB\u4E86\u54C7&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> res <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(XX|oo|as)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;span&gt;$1&lt;/span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u5B9E\u73B0\u5B57\u7B26\u4E32\u53CD\u8F6C</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>\u4E0D\u4F7F\u7528\u904D\u5386\u53D6\u51FA\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u503C</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> res <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u7F16\u5199\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u62FC\u63A5\u952E\u540D\u8DEF\u5F84</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> tarrgetObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">e</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u767E\u5EA6&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token literal-property property">l</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u674E\u9E4F--&gt; QQ:3206064928&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token string">&quot;90&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">e</span><span class="token operator">:</span><span class="token string">&quot;90&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">l</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">version</span><span class="token operator">:</span><span class="token string">&quot;1.0.0.1&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u674E\u9E4F--&gt; QQ:3206064928&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">f</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u674E\u9E4F--&gt; QQ:3206064928&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">update</span><span class="token operator">:</span><span class="token string">&quot;2017\u5E7403\u670820\u65E5&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63A5\u6536tarrgetObj\uFF0C \u7136\u540E\u8F93\u51FA</span>
<span class="token comment">/* [ { path: &#39;a-&gt;b-&gt;c-&gt;d-&gt;e-&gt;l-&gt;name&#39;, val: &#39;\u674E\u9E4F--&gt; QQ:3206064928&#39; },
  { path: &#39;l-&gt;a-&gt;b-&gt;c-&gt;name&#39;, val: &#39;\u674E\u9E4F--&gt; QQ:3206064928&#39; },
  { path: &#39;f-&gt;name&#39;, val: &#39;\u674E\u9E4F--&gt; QQ:3206064928&#39; } ] */</span>
</code></pre></div><p>\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            path <span class="token operator">+=</span> key <span class="token operator">+</span> <span class="token string">&quot;-&gt;&quot;</span><span class="token punctuation">;</span>
            <span class="token function">foo</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">~</span>val<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;\u674E\u9E4F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            path <span class="token operator">+=</span> key<span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                path<span class="token punctuation">,</span>
                val
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            path <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span>tarrgetObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u5B9E\u73B0 lazyman\uFF0C\u53EF\u4EE5\u6309\u7167\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528</p></blockquote><div class="language-js"><pre><code><span class="token function">LazyMan</span><span class="token punctuation">(</span>\u201CHank\u201D<span class="token punctuation">)</span>\u8F93\u51FA<span class="token operator">:</span>
Hi<span class="token operator">!</span> This is Hank<span class="token operator">!</span>

<span class="token function">LazyMan</span><span class="token punctuation">(</span>\u201CHank\u201D<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>\u201Cdinner\u201D<span class="token punctuation">)</span>\u8F93\u51FA
Hi<span class="token operator">!</span> This is Hank<span class="token operator">!</span>
<span class="token comment">//\u7B49\u5F8510\u79D2..</span>
Wake up after <span class="token number">10</span>
Eat dinner<span class="token operator">~</span>

<span class="token function">LazyMan</span><span class="token punctuation">(</span>\u201CHank\u201D<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>\u201Cdinner\u201D<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>\u201Csupper\u201D<span class="token punctuation">)</span>\u8F93\u51FA
Hi This is Hank<span class="token operator">!</span>
Eat dinner<span class="token operator">~</span>
Eat supper<span class="token operator">~</span>

<span class="token function">LazyMan</span><span class="token punctuation">(</span>\u201CHank\u201D<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleepFirst</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>\u201Csupper\u201D<span class="token punctuation">)</span>\u8F93\u51FA
<span class="token comment">//\u7B49\u5F855\u79D2</span>
Wake up after <span class="token number">5</span>
Hi This is Hank<span class="token operator">!</span>
Eat supper
</code></pre></div><p>\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u4EFB\u52A1\u961F\u5217</p><blockquote><p>\u5B9E\u73B0\u53EF\u8FDE\u7EED\u8C03\u7528\u7684\u52A0\u6CD5</p></blockquote><p>\u51FD\u6570 add \u53EF\u4EE5\u5B9E\u73B0\u8FDE\u7EED\u7684\u52A0\u6CD5\u8FD0\u7B97\uFF0C \u8BED\u6CD5\u5982\u4E0B</p><div class="language-js"><pre><code><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 20</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 80</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 180 //\u6CE8\u610F\u53EF\u4EE5\u53EF\u65E0\u9650\u8C03\u7528</span>

<span class="token keyword">var</span> add30 <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
<span class="token keyword">var</span> add100 <span class="token operator">=</span> <span class="token function">add30</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100</span>
<span class="token keyword">var</span> add31 <span class="token operator">=</span> <span class="token function">add30</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 31</span>
<span class="token keyword">var</span> add40 <span class="token operator">=</span> <span class="token function">add31</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 40</span>
</code></pre></div><p>\u601D\u8DEF\uFF0C\u6BCF\u6B21\u8C03\u7528\u90FD\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u5219\u53EF\u4EE5\u5B9E\u73B0\u65E0\u9650\u8C03\u7528</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        a <span class="token operator">+=</span> b<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5728\u6253\u5370\u6570\u636E\u65F6\u4F1A\u8C03\u7528\u5BF9\u8C61\u7684toString\u65B9\u6CD5\uFF0C\u8FD9\u662F\u4E00\u79CD\u5F88\u53D6\u5DE7\u7684\u65B9\u5F0F</span>
    x<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    x<span class="token punctuation">.</span><span class="token function-variable function">valueOf</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>\u5B9E\u73B0groupBy\u65B9\u6CD5\uFF0C\u5176\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C</p></blockquote><p>key\u662Fcollection\u7ECF\u8FC7cb\u8FED\u4EE3\u5F97\u5230\u7684\u7ED3\u679C\uFF0Cvalue\u662Fcollection\u7684\u4E00\u4E2A\u5143\u7D20</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token parameter">collection<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hash <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    collection<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">cb</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hash<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            hash<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>item<span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            hash<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> hash
<span class="token punctuation">}</span>

<span class="token comment">// \u76F4\u63A5\u4F7F\u7528reduce\u4E5F\u53EF\u4EE5</span>
<span class="token keyword">function</span> <span class="token function">otherGroupBy</span><span class="token punctuation">(</span><span class="token parameter">collection<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> collection<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">hash<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">cb</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hash<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            hash<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            hash<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> hash
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> collection <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6.1</span><span class="token punctuation">,</span> <span class="token number">4.2</span><span class="token punctuation">,</span> <span class="token number">6.3</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">groupBy</span><span class="token punctuation">(</span>collection<span class="token punctuation">,</span> Math<span class="token punctuation">.</span>floor<span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre></div><blockquote><p>\u683C\u5F0F\u5316\u5343\u5206\u4F4D\u6570\u5B57\uFF0C\u4E09\u4E2A\u4E00\u7EC4\uFF0C\u9017\u53F7\u5206\u9694</p></blockquote><p>\u53EF\u4EE5\u4F7F\u7528\u96F6\u5BBD\u6B63\u5219\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">toThousands</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>num <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)(?=(?:\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5176\u5B9E\u8FD8\u6709\u66F4\u7B80\u5355\u7684\u65B9\u6CD5</p><div class="language-js"><pre><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token number">1234556</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><blockquote><p>\u5B9E\u73B0\u4E00\u4E2A\u4EFB\u52A1\u961F\u5217\uFF0C\u6EE1\u8DB3\u4E0B\u9762\u4EE3\u7801\u7684\u8F93\u51FA</p></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">machine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
<span class="token function">machine</span><span class="token punctuation">(</span><span class="token string">&#39;ygy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token comment">// start ygy</span>
<span class="token function">machine</span><span class="token punctuation">(</span><span class="token string">&#39;ygy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">do</span><span class="token punctuation">(</span><span class="token string">&#39;eat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// start ygy</span>
<span class="token comment">// ygy eat</span>
<span class="token function">machine</span><span class="token punctuation">(</span><span class="token string">&#39;ygy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">do</span><span class="token punctuation">(</span><span class="token string">&#39;eat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// start ygy</span>
<span class="token comment">// wait 5s\uFF08\u8FD9\u91CC\u7B49\u5F85\u4E865s\uFF09</span>
<span class="token comment">// ygy eat</span>
<span class="token function">machine</span><span class="token punctuation">(</span><span class="token string">&#39;ygy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitFirst</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">do</span><span class="token punctuation">(</span><span class="token string">&#39;eat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// wait 5s</span>
<span class="token comment">// start ygy</span>
<span class="token comment">// ygy eat</span>

</code></pre></div><p>\u4E3B\u8981\u8003\u5BDF\u4E86\u5229\u7528\u4E86async\u3001\u6808\u3001\u961F\u5217\u76F8\u5173\u77E5\u8BC6\u70B9</p><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">timeout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">machine</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   
    <span class="token keyword">function</span> <span class="token function">doTask</span><span class="token punctuation">(</span><span class="token parameter">act</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token function-variable function">task</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>act<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        tasks<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> task</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> promise<span class="token punctuation">;</span>
            <span class="token keyword">await</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">waitFirst</span><span class="token punctuation">(</span><span class="token parameter">sec</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">task</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">wait </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sec<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> <span class="token function">timeout</span><span class="token punctuation">(</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        tasks<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token parameter">sec</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">task</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">wait </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sec<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> <span class="token function">timeout</span><span class="token punctuation">(</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
   
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        execute<span class="token punctuation">,</span>
        <span class="token keyword">do</span><span class="token operator">:</span> doTask<span class="token punctuation">,</span>
        <span class="token literal-property property">wait</span><span class="token operator">:</span> wait<span class="token punctuation">,</span>
        waitFirst
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,58),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{f as __pageData,g as default};
