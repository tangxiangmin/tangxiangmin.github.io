import{_ as a,c as e,o as r,a2 as t}from"./chunks/framework.DLPB9-dE.js";const u=JSON.parse('{"title":"Java","description":"","frontmatter":{},"headers":[],"relativePath":"后端/Java.md","filePath":"后端/Java.md","lastUpdated":1683863238000}'),o={name:"后端/Java.md"},l=t('<h1 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;Java&quot;">​</a></h1><h2 id="java项目结构与分层" tabindex="-1">Java项目结构与分层 <a class="header-anchor" href="#java项目结构与分层" aria-label="Permalink to &quot;Java项目结构与分层&quot;">​</a></h2><p>参考</p><ul><li><a href="https://blog.csdn.net/zdwzzu2006/article/details/6053006" target="_blank" rel="noreferrer">DAO层，Service层，Controller层、View层</a>，2010年的文章，貌似仍不过时</li></ul><h3 id="bean" tabindex="-1">Bean <a class="header-anchor" href="#bean" aria-label="Permalink to &quot;Bean&quot;">​</a></h3><p>JavaBean可以理解为某段JSON的Java类，主要包括字段定义、</p><h3 id="dao层" tabindex="-1">DAO层 <a class="header-anchor" href="#dao层" aria-label="Permalink to &quot;DAO层&quot;">​</a></h3><p>DAO层主要是做数据持久层的工作，数据库设计的表与DAO层之间一一对应，DAO类需要实现增删查改等库的通用方法</p><h3 id="service层" tabindex="-1">Service层 <a class="header-anchor" href="#service层" aria-label="Permalink to &quot;Service层&quot;">​</a></h3><p>Service层主要负责业务模块的逻辑设计，需要操作已定义的单个或多个DAO类来封装业务逻辑</p><p>比如生成订单，需要在Service提供的接口中检查库存、检查用户、插入订单记录等逻辑</p><h3 id="controller层" tabindex="-1">Controller层 <a class="header-anchor" href="#controller层" aria-label="Permalink to &quot;Controller层&quot;">​</a></h3><p>Controller层负责业务模块流程，对外主要表现为暴露页面URL或HTTP接口，其中调用Service层来处理特定URL的业务逻辑，然后返回JSON数据或View视图</p>',13),i=[l];function n(c,s,d,h,_,p){return r(),e("div",null,i)}const b=a(o,[["render",n]]);export{u as __pageData,b as default};
