import{_ as e,c as a,o as t,a2 as r}from"./chunks/framework.DLPB9-dE.js";const u=JSON.parse('{"title":"动态规划","description":"","frontmatter":{},"headers":[],"relativePath":"数据结构和算法/动态规划.md","filePath":"数据结构和算法/动态规划.md","lastUpdated":1709648798000}'),o={name:"数据结构和算法/动态规划.md"},n=r('<h1 id="动态规划" tabindex="-1">动态规划 <a class="header-anchor" href="#动态规划" aria-label="Permalink to &quot;动态规划&quot;">​</a></h1><p>动态规划往往是最能有效考察算法和设计能力的题目类型，面对这类题目最重要的是抓住问题的阶段，了解每个阶段的状态，从而分析阶段之间的关系转化。</p><p>适用于动态规划的问题，需要满足最优子结构和无后效性，动态规划的求解过程，在于找到状态转移方程，进行自底向上的求解。</p><p>将问题抽象成动态方程。</p><ul><li><a href="https://leetcode-cn.com/problems/unique-paths/solution/dong-tai-gui-hua-by-powcai-2/" target="_blank" rel="noreferrer">不同路径</a></li><li><a href="https://leetcode-cn.com/problems/minimum-path-sum/solution/zui-xiao-lu-jing-he-by-leetcode/" target="_blank" rel="noreferrer">最下路径</a></li></ul><p><a href="https://mp.weixin.qq.com/s/IiuCPA9HuTZcTGXoa6UNjA" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/IiuCPA9HuTZcTGXoa6UNjA</a></p><p><a href="https://suanfa8.com/old/dynamic-programming/01/" target="_blank" rel="noreferrer">https://suanfa8.com/old/dynamic-programming/01/</a></p>',7),i=[n];function s(l,c,p,_,m,d){return t(),a("div",null,i)}const f=e(o,[["render",s]]);export{u as __pageData,f as default};
