import{_ as n,c as s,o as a,b as t}from"./app.4b5e9613.js";const w='{"title":"Application\u7C7B","description":"","frontmatter":{},"headers":[{"level":2,"title":"Application\u7C7B","slug":"application\u7C7B"},{"level":2,"title":"\u4E2D\u95F4\u4EF6","slug":"\u4E2D\u95F4\u4EF6"},{"level":2,"title":"koa-router","slug":"koa-router"}],"relativePath":"\u6E90\u7801\u5206\u6790/koa\u6E90\u7801\u5206\u6790.md"}',p={},o=t(`<h1 id="koa\u6E90\u7801\u5206\u6790" tabindex="-1">koa\u6E90\u7801\u5206\u6790 <a class="header-anchor" href="#koa\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a></h1><p>koa\u5BF9\u5916\u66B4\u9732\u7684API\u5F88\u5C11\uFF0C\u4E5F\u5F88\u4FBF\u4E8E\u6211\u4EEC\u7406\u89E3</p><div class="language-js"><pre><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">ctx</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="application\u7C7B" tabindex="-1">Application\u7C7B <a class="header-anchor" href="#application\u7C7B" aria-hidden="true">#</a></h2><p>\u4ECE<code>package.json</code>\u7684<code>main</code>\u5B57\u6BB5\u5F00\u59CB\uFF0C\u627E\u5230\u6574\u4E2A\u5E93\u7684\u5165\u53E3\u6587\u4EF6<code>lib/application.js</code></p><div class="language-js"><pre><code><span class="token comment">// lib/application.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token keyword">extends</span> <span class="token class-name">Emitter</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// ...\u521D\u59CB\u5316\u76F8\u5173\u53C2\u6570</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>middleware <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// request\u5305\u542Bheader\u3001url\u3001method\u7B49\u591A\u4E2A\u63A5\u53E3</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>response <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// response\u5305\u542Bstatus\u3001headers\u7B49\u63A5\u53E3</span>
    <span class="token punctuation">}</span>
    <span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u68C0\u6D4Bfn\u662F\u4E0D\u662F\u5408\u683C\u7684\u4E2D\u95F4\u4EF6</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>middleware<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u901A\u8FC7createServer\u542F\u52A8\u4E00\u4E2Anode\u670D\u52A1</span>
    <span class="token function">listen</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   
<span class="token punctuation">}</span>
</code></pre></div><p>\u5FFD\u7565\u5927\u90E8\u5206\u4EE3\u7801\u4E4B\u540E\uFF0C\u53EF\u4EE5\u770B\u89C1\u6574\u4E2Akoa\u6E90\u7801\u662F\u975E\u5E38\u7CBE\u7B80\u7684\uFF0C\u4E3B\u8981\u5C31\u63D0\u4F9B\u4E86\u4E00\u4E2A<code>Application</code>\u7C7B\uFF0C\u6BCF\u4E2Aapp\u5B9E\u4F8B\u5BF9\u8C61\u66B4\u9732\u4E86<code>use</code>\u548C<code>listen</code>\u4E24\u4E2A\u65B9\u6CD5\u3002\u6B64\u5916\u7531\u4E8E\u7EE7\u627F\u4E86<code>Emitter</code>\u7C7B\uFF0Capp\u5B9E\u4F8B\u4E5F\u53EF\u4EE5\u4F7F\u7528\u8BF8\u5982<code>on</code>\u3001<code>emit</code>\u7B49\u4E8B\u4EF6\u901A\u4FE1\u65B9\u6CD5\u3002</p><p>\u63A5\u4E0B\u6765\u770B\u770B\u4F20\u5165<code>http.createServer</code>\u4E2D<code>this.callback</code>\u7684\u903B\u8F91</p><h2 id="\u4E2D\u95F4\u4EF6" tabindex="-1">\u4E2D\u95F4\u4EF6 <a class="header-anchor" href="#\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token keyword">extends</span> <span class="token class-name">Emitter</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7EC4\u5408\u4E2D\u95F4\u4EF6</span>
        <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>middleware<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">listenerCount</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onerror<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token function-variable function">handleRequest</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \`createContext\`\u5C01\u88C5\u4E86\`http.createServer\`\u4E2D\u7684\`request\`\u548C\`response\`\u5BF9\u8C61\uFF0C\u5E76\u5C06\u5176\u6302\u8F7D\u5230\u4E86context\u4E0A\uFF0C</span>
            <span class="token comment">// \u8FD9\u4E5F\u662F\u6211\u4EEC\u4E3A\u4EC0\u4E48\u80FD\u62FF\u5230\`ctx.request\`\u548C\`ctx.response\`\u7684\u539F\u56E0</span>
            <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> handleRequest<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8F85\u52A9\u51FD\u6570</span>
    <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> fnMiddleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> ctx<span class="token punctuation">.</span>res<span class="token punctuation">;</span>
        res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">onerror</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// respond\u5B9E\u9645\u4E0A\u662F\u5C01\u88C5\u4E86\u7684\u54CD\u5E94\u5904\u7406\u51FD\u6570\uFF0C\u5728\u5185\u90E8\u8C03\u7528ctx.resoponse.end(ctx.body)\u7684\u65B9\u5F0F\u5C06\u6570\u636E\u8FD4\u56DE\u7ED9\u6D4F\u89C8\u5668</span>
        <span class="token keyword">const</span> <span class="token function-variable function">handleResponse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">respond</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">onFinished</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> onerror<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5F00\u59CB\u6267\u884C\u7EC4\u5408\u540E\u7684\u4E2D\u95F4\u4EF6\u51FD\u6570</span>
        <span class="token keyword">return</span> <span class="token function">fnMiddleware</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>handleResponse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onerror<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u89C1\uFF0C\u6574\u4E2A\u6D41\u7A0B\u5927\u81F4\u4E3A</p><ul><li>\u901A\u8FC7<code>compose(this.middleware)</code>\u7EC4\u5408\u4E86\u6574\u4E2A\u4E2D\u95F4\u4EF6\u94FE\uFF0C\u8FD4\u56DE<code>fnMiddleware</code></li><li>\u63A5\u6536\u5230\u8BF7\u6C42\u65F6\uFF0C\u4F1A\u8C03\u7528<code>handleRequest</code>\uFF0C <ul><li>\u9996\u5148\u8C03\u7528<code>createContext</code>\u5C01\u88C5\u672C\u6B21\u8BF7\u6C42context\uFF0C</li><li>\u7136\u540E\u8C03\u7528<code>this.handleRequest(ctx, fnMiddleware)</code>\u5904\u7406\u672C\u6B21\u8BF7\u6C42</li></ul></li><li>\u5904\u7406\u672C\u6B21\u8BF7\u6C42\u7684\u5177\u4F53\u903B\u8F91\u5728 <code>fnMiddleware(ctx).then(handleResponse).catch(onerror)</code>\u4E2D</li></ul><p>\u56E0\u6B64\u6211\u4EEC\u76EE\u524D\u53EA\u9700\u8981\u5F04\u660E\u767D<code>compose</code>\u4E2D\u7EC4\u5408\u4E2D\u95F4\u4EF6\u7684\u65B9\u5F0F\uFF0C\u5C31\u80FD\u5927\u81F4\u4E86\u89E3\u6574\u4E2Akoa\u7684\u5DE5\u4F5C\u65B9\u5F0F\u4E86\u3002</p><p>compse\u662F\u5F15\u5165\u7684<a href="https://github.com/koajs/compose/blob/master/index.js" target="_blank" rel="noopener noreferrer"><code>koa-compose</code></a>\uFF0C\u5176\u5B9E\u73B0\u5927\u81F4\u5982\u4E0B</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...\u68C0\u67E5\u4E2D\u95F4\u4EF6\u7684\u7C7B\u578B\uFF1Amiddleware\u5217\u8868\u5FC5\u987B\u4E3A\u6570\u7EC4\uFF0C\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u5FC5\u987B\u4E3A\u51FD\u6570</span>
    
    <span class="token comment">// \u8FD4\u56DE\u7684\u5C31\u662F\u4E0A\u9762\u7684fnMiddleware\uFF0C\u6267\u884CfnMiddleware\u540E\u8FD4\u56DE\u7684\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2Apromise\u5BF9\u8C61</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            index <span class="token operator">=</span> i
            <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token comment">// \u5982\u679Cmiddleware\u5217\u8868\u5DF2\u7ECF\u8C03\u7528\u5B8C\u6BD5\uFF0C\u5982\u679C\u4F20\u5165\u4E86\u989D\u5916\u7684next\uFF0C\u5219\u4E0B\u4E00\u6B21\u4F1A\u8C03\u7528next\u65B9\u6CD5\uFF0C</span>
            <span class="token comment">// \u53EF\u4EE5\u770B\u89C1\u5728\u4E0A\u9762\u7684fnMiddleware\u4E2D\u6B64\u5904\u5E76\u6CA1\u6709\u4F20\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next
            <span class="token comment">// \u5982\u679C\u65E0fn\u4E86\uFF0C\u5219\u8868\u793A\u4E2D\u95F4\u4EF6\u5DF2\u7ECF\u4ECE\u7B2C\u4E00\u4E2A\u4F9D\u6B21\u6267\u884C\u5230\u6700\u540E\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u4E86</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u628Actx\u548Cnext\u4F20\u5165\u5230\u4E2D\u95F4\u4EF6\u4E2D\uFF0C\u53EF\u4EE5\u770B\u89C1\u6211\u4EEC\u5728\u4E2D\u95F4\u4EF6\u4E2D\u8C03\u7528\u7684next\u5B9E\u9645\u4E0A\u5C31\u662Fdispatch.bind(null, i + 1))</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u89C1\uFF0C\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u7684\u683C\u5F0F\u4E3A</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">mid</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// next\u88AB\u5305\u88C5\u6210dispatch.bind(null, i + 1))\u7684\u6027\u80FD</span>
</code></pre></div><p>\u5728\u4E2D\u95F4\u4EF6\u903B\u8F91\u4E2D\uFF0C\u9700\u8981\u624B\u52A8\u8C03\u7528<code>next</code>\u624D\u4F1A\u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6\uFF1B\u6B64\u5916\u6BCF\u4E2Adispatch\u8FD4\u56DE\u7684\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2Apromise\uFF0C\u56E0\u6B64\u5982\u679C\u5E0C\u671B\u5B9E\u73B0<strong>\u6D0B\u8471\u6A21\u578B</strong>\u7684\u4E2D\u95F4\u4EF6\u8C03\u7528\u987A\u5E8F\uFF0C\u5C31\u5FC5\u987B\u7B49\u5F85dispatch\u6267\u884C\u5B8C\u6BD5\u624D\u884C</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">mid</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5FC5\u987B\u5728\u6B64\u5904\u6682\u505C\u7B49\u5F85\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u6267\u884C\u5B8C\u6BD5\uFF0C\u5426\u5219\u4E2D\u95F4\u4EF6\u6267\u884C\u987A\u5E8F\u5C31\u4F1A\u53D1\u751F\u9519\u4E71</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="koa-router" tabindex="-1">koa-router <a class="header-anchor" href="#koa-router" aria-hidden="true">#</a></h2><p>\u7B80\u5355\u5B9E\u7528</p><div class="language-js"><pre><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u6211\u4EEC\u4ECE<code>package.json</code>\u4E2D<code>main</code>\u5B57\u6BB5\u627E\u5230\u5165\u53E3\u6587\u4EF6</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Router</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>methods <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>methods <span class="token operator">||</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;HEAD&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;OPTIONS&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PATCH&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;DELETE&#39;</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// methods\u5305\u542B[&#39;get&#39;\u3001&#39;post&#39;]\u7B49\u591A\u79CDhttp\u8BF7\u6C42\u65B9\u6CD5\uFF0C\u5728\u6B64\u5904\u5B9E\u73B0\u5FEB\u901F\u6CE8\u518C</span>
methods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> path<span class="token punctuation">,</span> middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> middleware<span class="token punctuation">;</span>
    <span class="token comment">// \u6536\u96C6\u8BE5\u8DEF\u7531\u7684\u4E2D\u95F4\u4EF6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> path <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> path <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      middleware <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      middleware <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      path <span class="token operator">=</span> name<span class="token punctuation">;</span>
      name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>   
    <span class="token comment">// \u7EDF\u4E00\u8C03\u7528\`register\`\u65B9\u6CD5</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">,</span> middleware<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> name
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7136\u540E\u770B\u770B<code>this.register</code>\u65B9\u6CD5\u7684\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">register</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> methods<span class="token punctuation">,</span> middleware<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> router <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> stack <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">;</span>
  <span class="token comment">// ...\u652F\u6301\u6570\u7EC4\u7C7B\u578B\u7684path</span>

  <span class="token comment">// \u751F\u6210\u4E00\u4E2ARoute\u5BF9\u8C61\uFF0Croute\u5305\u542B\u4E00\u4E9B\u7279\u5B9A\u7684\u65B9\u6CD5\uFF0C\u65B9\u4FBF\u901A\u8FC7req.url\u5339\u914D\u5230\u5B9E\u9645\u7684Route\u5BF9\u8C61</span>
  <span class="token keyword">var</span> route <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Layer</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> methods<span class="token punctuation">,</span> middleware<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">end</span><span class="token operator">:</span> opts<span class="token punctuation">.</span>end <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">?</span> opts<span class="token punctuation">.</span>end <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> opts<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token literal-property property">sensitive</span><span class="token operator">:</span> opts<span class="token punctuation">.</span>sensitive <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>sensitive <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">strict</span><span class="token operator">:</span> opts<span class="token punctuation">.</span>strict <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>strict <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">prefix</span><span class="token operator">:</span> opts<span class="token punctuation">.</span>prefix <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>prefix <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ignoreCaptures</span><span class="token operator">:</span> opts<span class="token punctuation">.</span>ignoreCaptures
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>prefix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    route<span class="token punctuation">.</span><span class="token function">setPrefix</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>prefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// add parameter middleware</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    route<span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>params<span class="token punctuation">[</span>param<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5C06route\u5BF9\u8C61\u4FDD\u5B58\u8D77\u6765</span>
  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> route<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre></div><p><code>Router.prototype.routes</code></p><div class="language-js"><pre><code><span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>routes <span class="token operator">=</span> <span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">middleware</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> router <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> <span class="token function-variable function">dispatch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u901A\u8FC7\u95ED\u5305\u7EF4\u6301\u5BF9\u4E8Erouter\u7684\u5F15\u7528</span>
    <span class="token keyword">var</span> path <span class="token operator">=</span> router<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>routerPath <span class="token operator">||</span> ctx<span class="token punctuation">.</span>routerPath <span class="token operator">||</span> ctx<span class="token punctuation">.</span>path<span class="token punctuation">;</span>
    <span class="token keyword">var</span> matched <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u627E\u5230\u5339\u914D\u7684route\u5BF9\u8C61</span>
    <span class="token keyword">var</span> layerChain<span class="token punctuation">,</span> layer<span class="token punctuation">,</span> i<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>matched<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>matched<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>matched<span class="token punctuation">,</span> matched<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>matched <span class="token operator">=</span> matched<span class="token punctuation">.</span>path<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ctx<span class="token punctuation">.</span>router <span class="token operator">=</span> router<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>matched<span class="token punctuation">.</span>route<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> matchedLayers <span class="token operator">=</span> matched<span class="token punctuation">.</span>pathAndMethod
    <span class="token keyword">var</span> mostSpecificLayer <span class="token operator">=</span> matchedLayers<span class="token punctuation">[</span>matchedLayers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    ctx<span class="token punctuation">.</span>_matchedRoute <span class="token operator">=</span> mostSpecificLayer<span class="token punctuation">.</span>path<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mostSpecificLayer<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>_matchedRouteName <span class="token operator">=</span> mostSpecificLayer<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u63D2\u5165\u4E00\u4E9B\u7CFB\u5217\u4E2D\u95F4\u4EF6</span>
    layerChain <span class="token operator">=</span> matchedLayers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">memo<span class="token punctuation">,</span> layer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      memo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>captures <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">captures</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>captures<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>params <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">params</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>captures<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>routerName <span class="token operator">=</span> layer<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> memo<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u91CC\u540C\u6837\u8C03\u7528\u4E86koa-compose</span>
    <span class="token keyword">return</span> <span class="token function">compose</span><span class="token punctuation">(</span>layerChain<span class="token punctuation">)</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  dispatch<span class="token punctuation">.</span>router <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token comment">// \u7136\u540E\u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">return</span> dispatch<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre></div><p><code>Router.prototype.allowedMethods</code></p><div class="language-js"><pre><code><span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">allowedMethods</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> implemented <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>methods<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> allowed <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ctx<span class="token punctuation">.</span>status <span class="token operator">||</span> ctx<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>matched<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          route<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            allowed<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> method<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> allowedArr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>allowed<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">~</span>implemented<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>throw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> notImplementedThrowable<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options<span class="token punctuation">.</span>notImplemented <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              notImplementedThrowable <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">notImplemented</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// set whatever the user returns from their function</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              notImplementedThrowable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpError<span class="token punctuation">.</span>NotImplemented</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">throw</span> notImplementedThrowable<span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">501</span><span class="token punctuation">;</span>
            ctx<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Allow&#39;</span><span class="token punctuation">,</span> allowedArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>allowedArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&#39;OPTIONS&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
            ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
            ctx<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Allow&#39;</span><span class="token punctuation">,</span> allowedArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allowed<span class="token punctuation">[</span>ctx<span class="token punctuation">.</span>method<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>throw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">var</span> notAllowedThrowable<span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options<span class="token punctuation">.</span>methodNotAllowed <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                notAllowedThrowable <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">methodNotAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// set whatever the user returns from their function</span>
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                notAllowedThrowable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpError<span class="token punctuation">.</span>MethodNotAllowed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">throw</span> notAllowedThrowable<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">405</span><span class="token punctuation">;</span>
              ctx<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Allow&#39;</span><span class="token punctuation">,</span> allowedArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,30),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var y=n(p,[["render",e]]);export{w as __pageData,y as default};
