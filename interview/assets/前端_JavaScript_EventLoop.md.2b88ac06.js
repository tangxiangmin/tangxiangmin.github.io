import{_ as n,c as s,o as a,b as t}from"./app.2f94c7c4.js";const f='{"title":"\u4E3A\u4EC0\u4E48\u8981\u533A\u5206\u5B8F\u4EFB\u52A1\u5FAE\u4EFB\u52A1\uFF1F","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4E3A\u4EC0\u4E48\u8981\u533A\u5206\u5B8F\u4EFB\u52A1\u5FAE\u4EFB\u52A1\uFF1F","slug":"\u4E3A\u4EC0\u4E48\u8981\u533A\u5206\u5B8F\u4EFB\u52A1\u5FAE\u4EFB\u52A1\uFF1F"},{"level":2,"title":"Promise","slug":"promise"},{"level":2,"title":"Generator \u548Cyield","slug":"generator-\u548Cyield"},{"level":2,"title":"async/await","slug":"async-await"}],"relativePath":"\u524D\u7AEF/JavaScript/EventLoop.md"}',p={},o=t(`<h1 id="eventloop" tabindex="-1">EventLoop <a class="header-anchor" href="#eventloop" aria-hidden="true">#</a></h1><p>\u4E4B\u524D\u6574\u7406\u4E86\u4E00\u90E8\u5206\uFF1A<a href="https://www.shymean.com/article/%E7%90%86%E8%A7%A3EventLoop" target="_blank" rel="noopener noreferrer">\u7406\u89E3EventLoop</a></p><h2 id="\u4E3A\u4EC0\u4E48\u8981\u533A\u5206\u5B8F\u4EFB\u52A1\u5FAE\u4EFB\u52A1\uFF1F" tabindex="-1">\u4E3A\u4EC0\u4E48\u8981\u533A\u5206\u5B8F\u4EFB\u52A1\u5FAE\u4EFB\u52A1\uFF1F <a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u8981\u533A\u5206\u5B8F\u4EFB\u52A1\u5FAE\u4EFB\u52A1\uFF1F" aria-hidden="true">#</a></h2><p>\u4ECE\u6D4F\u89C8\u5668\u89D2\u5EA6\u770B\uFF0C\u5B8F\u4EFB\u52A1\u662F\u4E00\u4E2A\u4E2A\u79BB\u6563\u7684\uFF0C\u72EC\u7ACB\u7684\u5DE5\u4F5C\u5355\u5143\u3002</p><p>\u5FAE\u4EFB\u52A1\u662F\u66F4\u5C0F\u7684\u4EFB\u52A1\uFF0C\u5FAE\u4EFB\u52A1\u66F4\u65B0\u5E94\u7528\u7A0B\u5E8F\u7684\u72B6\u6001\uFF0C\u4F46\u662F\u5FC5\u987B\u5728\u6D4F\u89C8\u5668\u4EFB\u52A1\u7EE7\u7EED\u6267\u884C\u5176\u4ED6\u4EFB\u52A1\u4E4B\u524D\u6267\u884C\uFF0C\u6D4F\u89C8\u5668\u4EFB\u52A1\u5305\u62EC\u91CD\u65B0\u6E32\u67D3\u9875\u9762\u7684UI\uFF0C\u56E0\u6B64\u5FAE\u4EFB\u52A1\u9700\u8981\u5C3D\u53EF\u80FD\u5FEB\u5730\u3001\u901A\u8FC7\u5F02\u6B65\u65B9\u5F0F\u6267\u884C</p><p>\u57FA\u4E8E\u4E0A\u8FF0\u539F\u56E0\uFF0C\u5C06\u5F02\u6B65\u4EFB\u52A1\u5212\u5206\u4E3A\u4E86\u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1\u3002</p><h2 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h2><p>\u53C2\u8003</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises" target="_blank" rel="noopener noreferrer">\u4F7F\u7528 Promise MDN</a></li></ul><blockquote><p>Promise.race\u548CPromise.all\u7684\u533A\u522B\u548C\u5E94\u7528\u573A\u666F\uFF1F</p></blockquote><ul><li><code>Promise.all</code>\u4F1A\u5728\u6240\u6709\u4EFB\u52A1\u90FD\u7ED3\u675F\u540E\u624D\u8FDB\u884Creslove\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06\u591A\u4E2A\u5F02\u6B65\u7ED3\u679C\u5408\u5E76\u5230\u4E00\u8D77</li><li><code>Promise.race</code>\u53EA\u8981\u5F53\u4EFB\u4F55\u4EFB\u52A1\u5B8C\u6210\u540E\u5C31\u8FDB\u884Creslove\uFF0C\u5E38\u89C1\u7684\u7528\u6CD5\u662F\uFF1A\u5C06\u5B9A\u65F6\u5668\u548C\u7F51\u7EDC\u8BF7\u6C42\u653E\u5728race\u4E2D\uFF0C\u7528\u6765\u7F51\u7EDC\u8BF7\u6C42\u662F\u5426\u8D85\u65F6</li></ul><p>\u4F7F\u7528\u6CE8\u610F\u4E8B\u9879</p><ul><li>\u4E3A\u4E86\u907F\u514D\u610F\u5916\uFF0Cthen\u4E2D\u7684\u56DE\u8C03\u90FD\u662F\u5F02\u6B65\u6267\u884C\u7684\uFF08\u653E\u5728\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\uFF09</li></ul><p>\u9519\u8BEF\u5904\u7406\uFF0C</p><div class="language-"><pre><code>// catch\u5B9E\u9645\u4E0A\u662F\u4E0B\u9762\u4EE3\u7801\u7684\u7B80\u5199
then(null, (e)=&gt;{
    console.log(&#39;brefore catch&#39;)
})
</code></pre></div><p>\u5F53promise\u94FE\u4E2D\u629B\u51FA\u67D0\u4E2Aerror\u65F6\uFF0C\u5C06\u8DF3\u8FC7\u540E\u9762\u7684then\u5E76\u627E\u5230\u7B2C\u4E00\u4E2Acatch\u8FDB\u884C\u5904\u7406</p><h2 id="generator-\u548Cyield" tabindex="-1">Generator \u548Cyield <a class="header-anchor" href="#generator-\u548Cyield" aria-hidden="true">#</a></h2><p>next\u53EF\u4EE5\u4F20\u9012\u53C2\u6570\uFF0C\u4F1A\u5C06\u53C2\u6570\u4F5C\u4E3A\u4E0A\u4E00\u6761yield\u8BED\u53E5\u7684\u8FD4\u56DE\u503C\uFF0C\u5728\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u89C1\u901A\u8FC7next\u6539\u53D8generator\u51FD\u6570\u4E2Dyield\u7684\u8FD4\u56DE\u503C</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> first <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> second <span class="token operator">=</span> <span class="token keyword">yield</span> first <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 4 + 2 </span>
                                  <span class="token comment">// first =4 \u662Fnext(4)\u5C06\u53C2\u6570\u8D4B\u7ED9\u4E0A\u4E00\u6761\u7684</span>
	<span class="token keyword">yield</span> second <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>             <span class="token comment">// 5 + 3</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">)</span> <span class="token comment">// 4, 5</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> iterator <span class="token operator">=</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// &quot;{ value: 1, done: false }&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// &quot;{ value: 6, done: false }&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// &quot;{ value: 8, done: false }&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// &quot;{ value: undefined, done: true }&quot;</span>
</code></pre></div><p>\u4E0B\u9762\u4EE3\u7801\u5C55\u793A\u4E86\u4F7F\u7528generator\u51FD\u6570\u5C01\u88C5\u5F02\u6B65\u4EFB\u52A1\u7684\u65B9\u6CD5</p><div class="language-js"><pre><code><span class="token comment">// 1. \u9996\u5148\u5199\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1,\u5728\u4E00\u79D2\u540E\u8FD4\u56DE\u7279\u5B9A\u5B57\u7B26\u4E32</span>
<span class="token keyword">function</span> <span class="token function">asyncTask</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Leo&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2. \u63A5\u4E0B\u6765\u5199\u51FA\u671F\u671B\u6267\u884C\u7684\u987A\u5E8F</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">runTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token keyword">yield</span> asyncTask
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment">// \u6211\u4EEC\u671F\u671B\u8FD9\u91CC\u6B63\u5E38\u8F93\u51FAHello Leo</span>
<span class="token punctuation">}</span>
<span class="token comment">// 3. \u6309\u7167\u671F\u671B\u503C\u6267\u884C\u51FD\u6570</span>
<span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">runTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// \u6B64\u65F6\u6267\u884C\u6743\u5DF2\u7ECF\u4EA4\u51FA</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u6267\u884CasyncTask\u5E76\u4F20\u5165callback \uFF0C\u5173\u952E\u70B9\u5728\u4E8E\u5728callback\u91CC\u8C03\u7528next\u4EA4\u8FD8\u6267\u884C\u6743</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;next.value&#39;</span><span class="token punctuation">)</span>
    gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment">// \u5C06\u7ED3\u679C\u8D4B\u503C\u7ED9\u4E0A\u4E00\u6761yield\u8BED\u53E5\`yield asyncTask\`\u7684\u5DE6\u4FA7</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u4E0D\u80FD\u76F4\u63A5\u8C03\u7528\u540E\u7EED\u7684next\uFF0C\u5426\u5219\u4F1A\u5BFC\u81F4\u4E0A\u9762\u6CE8\u518C\u56DE\u8C03\u4E2D\u7684gen.next\u65E0\u6CD5\u6B63\u5E38\u83B7\u53D6\u53C2\u6570</span>
<span class="token comment">// gen.next()</span>
</code></pre></div><p>\u9664\u4E86\u7F16\u5199generator\u51FD\u6570\u4E4B\u5916\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u624B\u52A8\u8C03\u7528next\u65B9\u6CD5\uFF0C\u56E0\u6B64\u5728\u4E00\u4E2A\u4F7F\u7528generator\u5C01\u88C5\u7684\u4EFB\u52A1\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u5C06\u624B\u52A8\u8C03\u7528next\u7684\u903B\u8F91\u5C01\u88C5\u5230\u4E00\u4E2A\u8FD0\u884C\u5668\u91CC\u9762\uFF0C</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;[object Function]&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">autoExecute</span><span class="token punctuation">(</span><span class="token parameter">task</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> isRuningAsync <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u7531\u4E8E\u52A0\u5165\u4E86\u5F02\u6B65\u5904\u7406\uFF0C\u6240\u4EE5\u8981\u589E\u52A0\u4E00\u4E2A\u6807\u5FD7\u4F4D\u907F\u514D\u91CD\u590D\u8FDB\u5165\u5FAA\u73AF\u4F53</span>
    <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRuningAsync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    
            <span class="token comment">/* start \u8865\u5145\u7684\u5904\u7406\u51FD\u6570 */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                isRuningAsync <span class="token operator">=</span> <span class="token boolean">true</span>
                <span class="token keyword">const</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token comment">// \u6838\u5FC3\u4EE3\u7801</span>
                    isRuningAsync <span class="token operator">=</span> <span class="token boolean">false</span>
                    <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                result<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
                <span class="token comment">/* end \u8865\u5145\u7684\u5904\u7406\u51FD\u6570 */</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
   
<span class="token punctuation">}</span>
<span class="token function">autoExecute</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token comment">// \u8BD5\u7740\u7528\u8FD9\u4E2A\u81EA\u52A8\u6267\u884C\u5668\u6267\u884C\u4E4B\u524D\u7684\u5F02\u6B65\u4EFB\u52A1</span>

</code></pre></div><h2 id="async-await" tabindex="-1">async/await <a class="header-anchor" href="#async-await" aria-hidden="true">#</a></h2><blockquote><p>\u9605\u8BFB\u8FC7async/await\u4EE3\u7801\u901A\u8FC7webpack\u6253\u5305\u540E\u7684\u4EE3\u7801\u5417</p></blockquote><p>\u6E90\u4EE3\u7801</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token number">1</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>webpack\u6253\u5305\u540E\u7684\u4EE3\u7801</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result<span class="token punctuation">;</span>
    <span class="token keyword">return</span> regeneratorRuntime<span class="token punctuation">.</span><span class="token function">async</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">test$</span><span class="token punctuation">(</span><span class="token parameter">_context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>_context<span class="token punctuation">.</span>prev <span class="token operator">=</span> _context<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
                _context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> regeneratorRuntime<span class="token punctuation">.</span><span class="token function">awrap</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
                result <span class="token operator">=</span> _context<span class="token punctuation">.</span>sent<span class="token punctuation">;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
                <span class="token keyword">case</span> <span class="token string">&quot;end&quot;</span><span class="token operator">:</span>
                <span class="token keyword">return</span> _context<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,29),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{f as __pageData,y as default};
