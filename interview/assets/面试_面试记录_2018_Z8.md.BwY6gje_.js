import{_ as i,c as s,o as a,a2 as l}from"./chunks/framework.DLPB9-dE.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"面试/面试记录/2018_Z8.md","filePath":"面试/面试记录/2018_Z8.md","lastUpdated":1582719420000}'),n={name:"面试/面试记录/2018_Z8.md"},h=l(`<p>这场面试进行了3个小时，流程比较规范。</p><h2 id="沟通" tabindex="-1">沟通 <a class="header-anchor" href="#沟通" aria-label="Permalink to &quot;沟通&quot;">​</a></h2><p>HR电话沟通的时候，当天的面试已经排了四场了，因此约到了下午5点面试，万万没想到...</p><h2 id="笔试" tabindex="-1">笔试 <a class="header-anchor" href="#笔试" aria-label="Permalink to &quot;笔试&quot;">​</a></h2><p>填了张面试记录表、一套笔试题、一套智力测试题</p><ul><li>JS中七种数据类型，基本类型有哪些，这里漏掉了一个Symbol类型</li><li>使用<code>position:absolute</code>实现水平垂直居中；如果是使用flex布局呢</li><li>下面代码输出，考察一下闭包</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">j</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(j) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0-9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })(i), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">j</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(j) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0-9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }(i)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>下面代码输出，考察变量提升和作用域</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 30</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 报错</span></span></code></pre></div><ul><li>下面代码执行，考察this</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hui800&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zhe800&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obj.name </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;zhe800&#39;</span></span></code></pre></div><ul><li>什么是ajax，同步和异步的区别，前端如何处理跨域，JSONP的原理是啥</li><li>列举常见的HTTP状态码，这里后面问了一个401，没答上来</li><li>给定一个数组和一个k值，找到数组元素中满足元素之和为k的组合</li></ul><p>那个智力测试题基本都是找数列规律，图形规律啥的，这里不列举了，题目也记不住</p><h2 id="面试" tabindex="-1">面试 <a class="header-anchor" href="#面试" aria-label="Permalink to &quot;面试&quot;">​</a></h2><p>真的问了好长一段时间~</p><ul><li>先是拿着面试题询问解题思路，对部分问题进行了扩展</li><li>介绍一下vue-cli开发的后台管理系统，相关工作，里面写到使用了Mocha，为什么会采用mocha进行单元测试</li><li>看你项目都是Vue比较多，除了管理系统还在其他地方使用过Vue吗</li><li>了解webpack的配置吗？webpack的loader和plugins有什么区别？vue-cli打包出来有哪些文件？CommonChunks的作用是啥</li><li>你是怎么去了解webpack的，是因为脚手架集成然后直接使用吗？还是其他因素去使用</li><li>你们的网站重构大体内容是什么，你是怎么搭开发环境的</li><li>你们网站的后台也是你负责写吗？整体结构是什么样子的？ <ul><li>回答通过PHP中转请求到api服务器，再问为什么不使用Node当中间层呢</li><li>PHP你很熟悉吗？后台你了解多少</li></ul></li><li>你一般用Node作什么？为什么博客要采用Koa搭建呢？了解CO库吗</li><li>ES6的特性在开发中有用到吗？比如哪些？解构赋值在vuex中怎么使用的</li><li>React和Vue你为什么选择使用Vue，他们有什么优缺点</li><li>服务端渲染和单页面应用渲染有什么区别？SEO啊</li><li>单页面应用你们是怎么保存用户身份信息的</li><li>http-request这个项目中，拦截器是什么概念，通常使用拦截器做什么</li><li>CommonJS和AMD有啥区别？AMD和CMD有啥区别呢</li><li>可以看一下你们之前的APP吗？哪些功能是Webview做的，了解混合开发吗</li><li>Android和iOS了解多少，JSBridge呢</li><li>平常习惯的是什么开发环境？看见我背了个包，还问里面装的是MBP吗哈哈~</li><li>charles和fiddler你更喜欢用哪个~哈哈</li><li>CSS3动画写的多吗 <ul><li>你们项目中一般做什么动画</li><li>如何实现一个环形的倒计时进度条</li></ul></li><li>你这些题答的这么顺畅，是因为你之前面试过很多次，还是自己刷了很多题，还是在项目中自己接触过</li><li>我再问你一个问题，你如果之前遇见过就直接说你见过了我就不问了：ul里面有10个li....然后我直接就问是考事件委托吗~哈哈猜中了，然后问了下如何用代码实现，考察了一下tagName</li><li>会翻墙吗？回答我自己的服务器主要就是搭SS翻墙的</li><li>作为一个转行的程序员，你为什么对写代码这么感兴趣呢</li><li>git恢复仓库版本用啥命令？回答<code>git rest</code>，然后问命令行用的多还是<code>source tree</code>用的比较熟悉，这边基本都用命令行...</li><li>还有什么要问的问题？询问工作内容和团队规模，然后给我详细展示了一下APP和小程序的业务工作，感觉跟我之前的工作经验比较符合</li></ul><p>大概谈了近两个小时...然后跟我说技术面OK了，去通知负责人面试</p><h2 id="二面" tabindex="-1">二面 <a class="header-anchor" href="#二面" aria-label="Permalink to &quot;二面&quot;">​</a></h2><p>负责人看起来也挺和气的</p><ul><li>你们之前的团队规模，你主要负责啥</li><li>刚才技术官跟我说你的基础OK的，你觉得自己还有哪方面欠缺</li><li>平常是怎么学习的呢</li><li>你在简历上写道寻找一个有挑战的前端工作，那么你认为的“有挑战”是什么呢？</li><li>你第一份工作在外包公司，你觉得外包公司给你带来了什么</li><li>在第二份工作中你学到了什么东西</li></ul><h2 id="hr面试" tabindex="-1">HR面试 <a class="header-anchor" href="#hr面试" aria-label="Permalink to &quot;HR面试&quot;">​</a></h2><p>感觉跟HR谈话也很轻松</p><ul><li>啥时候回成都的，然后扯了点家常哈哈哈</li><li>现在住哪里呢？我说住成华朋友那里，然后HR说来这边我给你安排住宿~霸气....好像是公司跟政府签订的青年公寓</li><li>看你换了两份工作，为啥离职呢</li><li>你的薪资期望是多少~万万没想到成都和深圳差的不少</li><li>上家公司的待遇和福利情况</li><li>手上现在有几份offer呢，方便透露一下吗</li><li>然后我问了下具体的公司福利，包括工作时间、绩效、年终奖啥的</li></ul><p>面试结束的时间也很晚了，然后回去等通知~</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>Symbol不太熟悉</li><li>CSS3动画貌似忘记了</li></ul><p>团队氛围很好，最后接受了这份offer~</p>`,27),p=[h];function k(t,e,E,r,d,g){return a(),s("div",null,p)}const c=i(n,[["render",k]]);export{o as __pageData,c as default};
