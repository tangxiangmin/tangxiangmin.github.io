import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.DLPB9-dE.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"App/Android/UI.md","filePath":"App/Android/UI.md","lastUpdated":1683863238000}'),n={name:"App/Android/UI.md"},l=t(`<h2 id="xml布局" tabindex="-1">XML布局 <a class="header-anchor" href="#xml布局" aria-label="Permalink to &quot;XML布局&quot;">​</a></h2><p>XML布局文件用于定义应用程序的用户界面，布局文件使用 .xml 作为后缀名，例如 activity_main.xml、fragment_login.xml。</p><p>下面列举了XML布局中的一些核心知识点，可以使用这些知识来创建和设计Android应用程序的用户界面。掌握XML布局的概念和用法，能够更好地理解和调整应用程序的界面布局。</p><h3 id="根元素" tabindex="-1">根元素 <a class="header-anchor" href="#根元素" aria-label="Permalink to &quot;根元素&quot;">​</a></h3><p>XML布局文件的根元素通常是一个布局容器，用于包含其他视图元素。常见的根元素包括LinearLayout、RelativeLayout、ConstraintLayout等。您可以选择适合您界面需求的布局容器。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.coordinatorlayout.widget.CoordinatorLayout</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns:android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://schemas.android.com/apk/res/android&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xmlns:app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xmlns:tools</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://schemas.android.com/tools&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:layout_width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;match_parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:layout_height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;match_parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tools:context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.MainActivity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.coordinatorlayout.widget.CoordinatorLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="视图元素" tabindex="-1">视图元素 <a class="header-anchor" href="#视图元素" aria-label="Permalink to &quot;视图元素&quot;">​</a></h3><p>视图元素代表应用程序界面的各个组件，Android布局文件都由视图元素组成，如按钮、文本框、图像视图等。您可以在布局文件中添加和配置这些视图元素，并定义它们的属性和样式。</p><p>下面展示了一个<code>TextView</code>和<code>Button</code>两个视图元素</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.constraintlayout.widget.ConstraintLayout</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns:android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://schemas.android.com/apk/res/android&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xmlns:app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xmlns:tools</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://schemas.android.com/tools&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:layout_width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;match_parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:layout_height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;match_parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tools:context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.FirstFragment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">TextView</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@+id/textview_first&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:layout_width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wrap_content&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:layout_height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wrap_content&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/hello_first_fragment&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintBottom_toTopOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@id/button_first&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintEnd_toEndOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintStart_toStartOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintTop_toTopOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@+id/button_first&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:layout_width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wrap_content&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:layout_height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wrap_content&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        android:text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/next&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintBottom_toBottomOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintEnd_toEndOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintStart_toStartOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        app:layout_constraintTop_toBottomOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@id/textview_first&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.constraintlayout.widget.ConstraintLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="布局属性" tabindex="-1">布局属性 <a class="header-anchor" href="#布局属性" aria-label="Permalink to &quot;布局属性&quot;">​</a></h3><p>布局属性用于控制视图元素在布局容器中的样式，如宽度、高度、背景颜色、位置、字体大小等。常见的布局属性包括layout_width、layout_height、layout_margin、layout_gravity、top、bottom、left、right、center_vertical、center_horizontal等。</p><p>可以使用这些属性来指定视图元素的尺寸、边距和对齐方式等。</p><h3 id="引用资源" tabindex="-1">引用资源 <a class="header-anchor" href="#引用资源" aria-label="Permalink to &quot;引用资源&quot;">​</a></h3><p>在布局文件中，您可以使用@符号引用资源，如字符串、颜色、尺寸等。这使得您可以在布局中使用资源值，并在需要时进行更改和维护。例如，@string/my_string引用字符串资源。</p><p>也可以 使用 XML 声明来引用其他布局文件或资源文件，例如在 activity_main.xml 中使用 image 标签引用了 image.png。</p><h3 id="复杂布局" tabindex="-1">复杂布局 <a class="header-anchor" href="#复杂布局" aria-label="Permalink to &quot;复杂布局&quot;">​</a></h3><ul><li>布局嵌套：可以在布局文件中嵌套其他布局容器，以实现复杂的布局结构。通过嵌套布局，您可以创建层次化的界面，并更好地组织和管理视图元素。</li><li>动态布局：可以使用 ViewPager、RecyclerView 等控件实现动态布局。</li><li>自定义视图：可以自定义视图元素，继承 View 类并重写 onMeasure()、onDraw() 方法来实现自己的布局效果。</li></ul><h3 id="id和引用" tabindex="-1">ID和引用 <a class="header-anchor" href="#id和引用" aria-label="Permalink to &quot;ID和引用&quot;">​</a></h3><p>每个视图元素可以分配一个唯一的ID，以便在代码中引用和操作它们。您可以使用android:id属性为视图元素指定一个ID值，并在代码中使用findViewById()方法来获取对应的视图对象。</p><h3 id="样式和主题" tabindex="-1">样式和主题 <a class="header-anchor" href="#样式和主题" aria-label="Permalink to &quot;样式和主题&quot;">​</a></h3><p>样式和主题用于定义和应用视图元素的外观和样式。您可以使用style属性为视图元素指定样式，或使用theme属性为整个应用程序或活动指定主题。</p><h2 id="布局编辑器" tabindex="-1">布局编辑器 <a class="header-anchor" href="#布局编辑器" aria-label="Permalink to &quot;布局编辑器&quot;">​</a></h2><p>Android Studio 提供了一个可视化的 XML 布局编辑器，可以方便地创建和编辑 Android 应用程序中的布局文件。</p><p>以下是使用 Android Studio 的 XML 布局编辑器的步骤：</p><ul><li>打开 Android Studio,并创建一个新的 Android 项目。</li><li>在项目结构中选择“app/layout”文件夹，然后在里面创建一个新的布局文件。例如，可以创建一个名为“activity_main.xml”的布局文件。</li><li>在 Android Studio 中打开该布局文件，可以看到一个可视化的界面，其中包含了各种视图元素和属性。</li><li>在布局文件中添加视图元素，例如文本框、按钮、图片等。可以使用拖拽的方式将视图元素从工具箱中拖到画布上，也可以手动输入视图元素的 ID、名称、类型等属性。</li><li>设置视图元素的位置和大小，可以使用约束条件来控制视图元素的位置和大小。例如，可以使用“top”和“bottom”属性来设置视图元素的位置关系，使用“width”和“height”属性来设置视图元素的大小。</li><li>保存布局文件并运行应用程序，可以在 Android Studio 中预览应用程序的布局效果。</li><li>如果需要自定义布局文件，可以在布局文件中添加自定义视图元素或修改现有视图元素的属性。</li><li>在 Android Studio 中生成 R 文件并将其编译为本地代码，以便在应用程序中使用布局文件。</li></ul><p>可以找一些官方教学视频配置使用，效率更高</p>`,27),h=[l];function p(k,e,o,r,d,E){return a(),i("div",null,h)}const F=s(n,[["render",p]]);export{y as __pageData,F as default};
