import{_ as n,c as a,o as s,b as p}from"./app.946f11db.js";const m='{"title":"\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6","slug":"\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6"},{"level":2,"title":"\u6392\u5E8F\u7B97\u6CD5","slug":"\u6392\u5E8F\u7B97\u6CD5"},{"level":2,"title":"n\u7EA7\u9636\u68AF\uFF0C\u6BCF\u6B21\u8D70\u4E00\u6B65\u6216\u4E24\u6B65\uFF0C\u95EE\u6700\u591A\u6709\u591A\u5C11\u79CD\u8D70\u6CD5","slug":"n\u7EA7\u9636\u68AF\uFF0C\u6BCF\u6B21\u8D70\u4E00\u6B65\u6216\u4E24\u6B65\uFF0C\u95EE\u6700\u591A\u6709\u591A\u5C11\u79CD\u8D70\u6CD5"},{"level":2,"title":"A,B,C,D,E\u4E94\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\u987A\u5E8F\u8FDB\u6808\uFF0C\u8FDB\u6808\u662F\u53EF\u4EE5\u51FA\u6808\uFF0C\u95EE\u6709\u51E0\u79CD\u51FA\u6808\u65B9\u5F0F","slug":"a-b-c-d-e\u4E94\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\u987A\u5E8F\u8FDB\u6808\uFF0C\u8FDB\u6808\u662F\u53EF\u4EE5\u51FA\u6808\uFF0C\u95EE\u6709\u51E0\u79CD\u51FA\u6808\u65B9\u5F0F"},{"level":2,"title":"\u5B9E\u73B0\u6570\u7EC4\u968F\u673A\u6392\u5E8F","slug":"\u5B9E\u73B0\u6570\u7EC4\u968F\u673A\u6392\u5E8F"}],"relativePath":"\u9762\u8BD5/\u9762\u8BD5\u9898/\u7B97\u6CD5\u5B9E\u73B0.md"}',t={},o=p(`<h2 id="\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6" tabindex="-1">\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6 <a class="header-anchor" href="#\u5E38\u89C1\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a></h2><p><img src="http://ww2.sinaimg.cn/large/006y8mN6gy1g6b4ac675cj30iz078758.jpg" alt=""></p><h2 id="\u6392\u5E8F\u7B97\u6CD5" tabindex="-1">\u6392\u5E8F\u7B97\u6CD5 <a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a></h2><blockquote><p>\u5B9E\u73B0\u5FEB\u6392</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">quickSort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left  <span class="token operator">&gt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> key <span class="token operator">=</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span>
        i <span class="token operator">=</span> left<span class="token punctuation">,</span>
        j <span class="token operator">=</span> right<span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">!=</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> key <span class="token operator">&amp;&amp;</span> i <span class="token operator">!=</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> key <span class="token operator">&amp;&amp;</span> i <span class="token operator">!=</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>

    <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">quickSort</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">quickSort</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u5192\u6CE1\u7B97\u6CD5</p></blockquote><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">bubbleSort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="n\u7EA7\u9636\u68AF\uFF0C\u6BCF\u6B21\u8D70\u4E00\u6B65\u6216\u4E24\u6B65\uFF0C\u95EE\u6700\u591A\u6709\u591A\u5C11\u79CD\u8D70\u6CD5" tabindex="-1">n\u7EA7\u9636\u68AF\uFF0C\u6BCF\u6B21\u8D70\u4E00\u6B65\u6216\u4E24\u6B65\uFF0C\u95EE\u6700\u591A\u6709\u591A\u5C11\u79CD\u8D70\u6CD5 <a class="header-anchor" href="#n\u7EA7\u9636\u68AF\uFF0C\u6BCF\u6B21\u8D70\u4E00\u6B65\u6216\u4E24\u6B65\uFF0C\u95EE\u6700\u591A\u6709\u591A\u5C11\u79CD\u8D70\u6CD5" aria-hidden="true">#</a></h2><p>\u9012\u5F52\u5B9E\u73B0\uFF0C\u5F53n\u5F88\u5927\u65F6\u53EF\u80FD\u4F1A\u6808\u6EA2\u51FA\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2Amap\u4FDD\u5B58\u4E4B\u524D\u8BA1\u7B97\u8FC7\u7684n\u503C\uFF0C\u8282\u7701\u6570\u636E</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">step</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">step</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="a-b-c-d-e\u4E94\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\u987A\u5E8F\u8FDB\u6808\uFF0C\u8FDB\u6808\u662F\u53EF\u4EE5\u51FA\u6808\uFF0C\u95EE\u6709\u51E0\u79CD\u51FA\u6808\u65B9\u5F0F" tabindex="-1">A,B,C,D,E\u4E94\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\u987A\u5E8F\u8FDB\u6808\uFF0C\u8FDB\u6808\u662F\u53EF\u4EE5\u51FA\u6808\uFF0C\u95EE\u6709\u51E0\u79CD\u51FA\u6808\u65B9\u5F0F <a class="header-anchor" href="#a-b-c-d-e\u4E94\u4E2A\u5143\u7D20\uFF0C\u6309\u7167\u987A\u5E8F\u8FDB\u6808\uFF0C\u8FDB\u6808\u662F\u53EF\u4EE5\u51FA\u6808\uFF0C\u95EE\u6709\u51E0\u79CD\u51FA\u6808\u65B9\u5F0F" aria-hidden="true">#</a></h2><p>\u53C2\u8003\uFF1A<a href="https://blog.csdn.net/sususuyesylvia/article/details/78836597" target="_blank" rel="noopener noreferrer">n\u4E2A\u5143\u7D20\u8FDB\u6808\uFF0C\u5171\u6709\u591A\u5C11\u79CD\u51FA\u6808\u987A\u5E8F\uFF1F</a></p><h2 id="\u5B9E\u73B0\u6570\u7EC4\u968F\u673A\u6392\u5E8F" tabindex="-1">\u5B9E\u73B0\u6570\u7EC4\u968F\u673A\u6392\u5E8F <a class="header-anchor" href="#\u5B9E\u73B0\u6570\u7EC4\u968F\u673A\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>arr<span class="token punctuation">.</span><span class="token function">srot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  	<span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD8\u53EF\u4EE5\u4F7F\u7528<a href="https://github.com/ccforward/cc/issues/44" target="_blank" rel="noopener noreferrer"><code>Fisher-Yates</code>\u6D17\u724C\u7B97\u6CD5</a></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        temp<span class="token punctuation">,</span>
        random<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!=</span> length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> length<span class="token punctuation">)</span>
        length<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token comment">// swap</span>
        temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>random<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,16),e=[o];function c(u,l,k,r,i,d){return s(),a("div",null,e)}var f=n(t,[["render",c]]);export{m as __pageData,f as default};
