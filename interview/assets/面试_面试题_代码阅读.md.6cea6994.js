import{_ as n,c as s,o as a,b as p}from"./app.946f11db.js";const f='{"title":"\u4EE3\u7801\u8F93\u51FA","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4EE3\u7801\u8F93\u51FA","slug":"\u4EE3\u7801\u8F93\u51FA"},{"level":2,"title":"\u53D8\u91CF\u4F5C\u7528\u57DF","slug":"\u53D8\u91CF\u4F5C\u7528\u57DF"},{"level":2,"title":"this","slug":"this"},{"level":2,"title":"EventLoop","slug":"eventloop"},{"level":2,"title":"\u539F\u578B","slug":"\u539F\u578B"}],"relativePath":"\u9762\u8BD5/\u9762\u8BD5\u9898/\u4EE3\u7801\u9605\u8BFB.md"}',t={},o=p(`<h2 id="\u4EE3\u7801\u8F93\u51FA" tabindex="-1">\u4EE3\u7801\u8F93\u51FA <a class="header-anchor" href="#\u4EE3\u7801\u8F93\u51FA" aria-hidden="true">#</a></h2><blockquote><p>==\u7C7B\u578B\u8F6C\u6362</p></blockquote><div class="language-js"><pre><code><span class="token comment">// \u9996\u5148\u8C03\u7528ToPrimitive([])\uFF0C\u6839\u636E\u6D41\u7A0B[].valueOf()\u4E3A[]\uFF0C</span>
<span class="token comment">// \u7EE7\u7EED\u8C03\u7528[].torString()\u4E3A&#39;&#39;\uFF0C\u7136\u540E\u8FDB\u884C\u5B57\u7B26\u4E32&#39;&#39;\u4E0E\u5E03\u5C14\u503Cfalse\u7684\u6BD4\u8F83\uFF0C</span>
<span class="token comment">// \u5E03\u5C14\u503Cfalse\u4F1A\u88AB\u8F6C\u6362\u6210\u6570\u5B570\uFF0C\u7136\u540E\u8FDB\u884C\u5B57\u7B26\u4E32&#39;&#39;\u4E0E\u6570\u5B570\u6BD4\u8F83\uFF0C</span>
<span class="token comment">// \u6700\u540E\uFF0C\u5C06\u5B57\u7B26\u4E32&#39;&#39;\u8F6C\u6362\u6210\u6570\u5B570\u53C2\u4E0E\u6BD4\u8F83\uFF0C\u6700\u540E\u8FD4\u56DEtrue</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 

<span class="token comment">// \u9996\u5148\u8C03\u7528ToPrimitive({})\uFF0C\u6839\u636E\u6D41\u7A0B{}.valueOf()\u4E3A{}\uFF0C</span>
<span class="token comment">// \u7EE7\u7EED\u8C03\u7528{}.torString()\u4E3A&#39;[object Object]&#39;\uFF0C\u7136\u540E\u8FDB\u884C\u5B57\u7B26\u4E32&#39;[object Object]&#39;\u4E0E\u5E03\u5C14\u503Cfalse\u7684\u6BD4\u8F83\uFF0C</span>
<span class="token comment">// \u540E\u7EED\u540C\u4E0A\uFF0C\u7531\u4E8EtoNumber(&#39;[object Object]&#39;) \u4E3ANaN\uFF0C\u4E0D\u4E3A0\uFF0C\u8FD4\u56DEfalse</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Boolean([])\u4E3Atrue</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span>

<span class="token comment">// \u5BF9\u8C61\u4E4B\u95F4\u7684\u6BD4\u8F83\u662F\u5730\u5740\u6BD4\u8F83\uFF0C\u4E0D\u540C\u5BF9\u8C61\u8FD4\u56DEfalse</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre></div><blockquote><p>\u8FDE\u7EED\u8D4B\u503C</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>
foo<span class="token punctuation">.</span>x <span class="token operator">=</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">n</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span>x<span class="token punctuation">;</span> <span class="token comment">// undefined</span>
bar<span class="token punctuation">.</span>x<span class="token punctuation">;</span> <span class="token comment">//  {n:2}</span>
</code></pre></div><p>\u4E3B\u8981\u8003\u70B9\u5728\u4E8E\u8FDE\u7EED\u8D4B\u503C\u65F6\u53D8\u91CF\u7684\u5F15\u7528\uFF0C\u867D\u7136\u8D4B\u503C\u8FD0\u7B97\u7B26\u5177\u6709\u53F3\u7ED3\u5408\u6027\uFF0C\u7136\u800C\u5B83\u9996\u5148\u505A\u7684\u662F\u5F97\u5230\u8868\u8FBE\u5F0Ffoo.x\u7684\u503C\uFF0C\u56E0\u6B64\u540E\u6267\u884Cfoo = {n:2}\u5BFC\u81F4foo\u88AB\u91CD\u5199\uFF0C\u6253\u5370bar.x\u53EF\u4EE5\u5F97\u5230\u9884\u671F\u7ED3\u679C</p><div class="language-"><pre><code>a.x = a = { n: 2 };

// \u7B2C\u4E00\u6B65
a.x = (a={n:2}) // \u6B64\u65F6\u53F3\u8FB9\u62EC\u53F7\u5185\u8FD8\u672A\u6267\u884C\uFF0Ca.x === b.x \u4E14 \u5747\u4E3A undefined
// \u7B2C\u4E8C\u6B65
a={n:2} // \u6B64\u65F6\u6267\u884C\u62EC\u53F7\u5185\u7684\u4EE3\u7801\uFF0C\u5C06a\u91CD\u65B0\u6307\u5411{n:2}\uFF0Cb\u4ECD\u65E7\u6307\u5411{n:1,x:undefined}\uFF0C\u6539\u4EE3\u7801\u6267\u884C\u5B8C\u6BD5\u540E\u8FD4\u56DE{n:2}
// \u7B2C\u4E09\u6B65
\u5C06\u4E0A\u4E00\u6B65\u8FD4\u56DE\u7684{n:2}\u8D4B\u503C\u7ED9b.x\uFF0C\u6240\u4EE5\u6700\u7EC8\u7ED3\u679C\u4E3A
        a.x  =  a  = {n:2}
        \u2502      \u2502
{n:1}&lt;\u2500\u2500\u2518      \u2514\u2500&gt;{n:2}
</code></pre></div><p>\u4E0A\u8FF0\u89E3\u91CA\u53C2\u8003\uFF1A<a href="https://yanhaijing.com/javascript/2012/04/05/javascript-continuous-assignment-operator/" target="_blank" rel="noopener noreferrer">\u5199\u4E8610\u5E74Javascript\u672A\u5FC5\u5168\u4E86\u89E3\u7684\u8FDE\u7EED\u8D4B\u503C\u8FD0\u7B97</a></p><blockquote><p>\u5FAA\u73AF</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> k <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> n <span class="token operator">?</span> <span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">a</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span> n<span class="token punctuation">;</span>
    k<span class="token operator">++</span><span class="token punctuation">;</span>
    c<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">return</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> c<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5, 5, 0 \u8FD9\u4E2A\u9898\u7B80\u76F4\u592A\u6E23\u4E86</span>
</code></pre></div><h2 id="\u53D8\u91CF\u4F5C\u7528\u57DF" tabindex="-1">\u53D8\u91CF\u4F5C\u7528\u57DF <a class="header-anchor" href="#\u53D8\u91CF\u4F5C\u7528\u57DF" aria-hidden="true">#</a></h2><blockquote><p>\u4E0B\u9762\u4EE3\u7801\u8F93\u51FA</p></blockquote><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function</span>
<span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
<span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>   
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
a<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">;</span>
<span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
</code></pre></div><blockquote><p>\u53D8\u91CF\u63D0\u5347</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined, 200</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100</span>
<span class="token keyword">var</span> a<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 300</span>
</code></pre></div><h2 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-hidden="true">#</a></h2><blockquote><p>this\u6307\u5411</p></blockquote><div class="language-js"><pre><code>window<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token function-variable function">db</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

json<span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> db <span class="token operator">=</span> json<span class="token punctuation">.</span>db<span class="token punctuation">;</span>
<span class="token function">db</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
json<span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">alert</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>a <span class="token operator">+</span> json<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 24</span>
</code></pre></div><p>\u7B80\u5355\u8003\u5BDF\u4E86\u4E00\u4E0Bthis\u7684\u6307\u5411</p><blockquote><p>this\u6307\u5411</p></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>

    <span class="token function-variable function">nAdd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> func2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">res</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 99</span>
<span class="token function">nAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NAN</span>
<span class="token function">res</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 99</span>
</code></pre></div><blockquote><p>this</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;obj&quot;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">dose</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;dose&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">dose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6CE8\u610F\u662F&quot;&quot;\u800C\u4E0D\u662Fundefined\uFF0C\u8FD9\u662F\u56E0\u4E3Awindow\u5BF9\u8C61\u672C\u8EAB\u5C31\u6709\u4E00\u4E2Aname\u5C5E\u6027...</span>
</code></pre></div><blockquote><p>\u51FD\u6570this\u7ED1\u5B9A\u4FEE\u6539</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;obj1&quot;</span><span class="token punctuation">,</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;obj2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj3 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;obj3&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// obj1</span>
<span class="token keyword">var</span> newFn <span class="token operator">=</span> obj1<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
<span class="token function">newFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;&quot; \u6CE8\u610F\u8FD9\u91CC\u4E0D\u662Fundefined</span>
<span class="token function">newFn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// obj2</span>
obj3<span class="token punctuation">.</span>fn <span class="token operator">=</span> newFn<span class="token punctuation">;</span>
obj3<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// obj3</span>

<span class="token keyword">var</span> newFn <span class="token operator">=</span> obj1<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">newFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// obj1</span>
<span class="token function">newFn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// obj1\uFF0C\u6CE8\u610F\u8FD9\u4E2A\u5730\u65B9\u662F\u5F3A\u7ED1\u5B9A\uFF0C\u6240\u4EE5\u4E00\u76F4\u4E3Aobj1</span>
obj3<span class="token punctuation">.</span>fn <span class="token operator">=</span> newFn<span class="token punctuation">;</span>
obj3<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// obj1 \uFF0C\u540C\u4E0A</span>
</code></pre></div><blockquote><p>Array.prototype.push</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;3&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">splice</span><span class="token operator">:</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>splice<span class="token punctuation">,</span>
    <span class="token literal-property property">push</span><span class="token operator">:</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// {2:1,3:2 length: 4, splice, push}</span>
</code></pre></div><p>\u53C2\u8003\uFF1A<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/push" target="_blank" rel="noopener noreferrer">MDN\u6587\u6863</a></p><p>push \u65B9\u6CD5\u6839\u636E length \u5C5E\u6027\u6765\u51B3\u5B9A\u4ECE\u54EA\u91CC\u5F00\u59CB\u63D2\u5165\u7ED9\u5B9A\u7684\u503C\u3002\u5982\u679C length \u4E0D\u80FD\u88AB\u8F6C\u6210\u4E00\u4E2A\u6570\u503C\uFF0C\u5219\u63D2\u5165\u7684\u5143\u7D20\u7D22\u5F15\u4E3A 0\uFF0C\u5305\u62EC length \u4E0D\u5B58\u5728\u65F6\u3002\u5F53 length \u4E0D\u5B58\u5728\u65F6\uFF0C\u5C06\u4F1A\u521B\u5EFA\u5B83\u3002</p><p>\u56E0\u6B64\u5728\u4E0A\u9762\u95EE\u9898\u4E2D\uFF0C\u521D\u59CBlength\u4E3A2\uFF0C\u5219\u4ECE\u7D22\u5F15\u503C2\u5F00\u59CBpush\uFF0C\u5E76\u66F4\u65B0length\u7684\u503C\u3002</p><blockquote><p>\u4E0B\u9762\u4EE3\u7801\u8F93\u51FA</p></blockquote><p>\u8003\u5BDF\u4E86\u53D8\u91CF\u4F5C\u7528\u57DF\uFF0C\u58F0\u660E\u63D0\u524D\uFF0C\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7\u7B49\u95EE\u9898\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
Foo<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u8BF7\u5199\u51FA\u4EE5\u4E0B\u8F93\u51FA\u7ED3\u679C\uFF1A</span>
Foo<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">new</span> <span class="token punctuation">(</span>Foo<span class="token punctuation">.</span>getName<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getName<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre></div><h2 id="eventloop" tabindex="-1">EventLoop <a class="header-anchor" href="#eventloop" aria-hidden="true">#</a></h2><blockquote><p>\u4E0B\u9762\u4EE3\u7801\u8F93\u51FA\u987A\u5E8F</p></blockquote><div class="language-js"><pre><code><span class="token function">setImmediate</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u4E0B\u9762\u4EE3\u7801\u8F93\u51FA\u987A\u5E8F</p></blockquote><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">a1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;a1 start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">a2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;a1 end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">a2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;a2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;script start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;setTimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">a1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;promise2.then&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;script end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6D4F\u89C8\u5668\u548Cnode v11\u7248\u672C\u4E4B\u540E</span>
<span class="token comment">// \u540C\u6B65\u9636\u6BB5\uFF1Ascript start\u3001a1 start\u3001a2\u3001promise2\u3001script end</span>
<span class="token comment">// \u5FAE\u4EFB\u52A1\uFF1Apromise1\u3001a1 end\u3001promise2.then\u3001promise3</span>
<span class="token comment">// \u5B8F\u4EFB\u52A1\uFF1AsetTimeout</span>

<span class="token comment">// node v11\u7248\u672C\u4E4B\u524D</span>
<span class="token comment">// script start\u3001a1 start\u3001a2\u3001promise2\u3001script end</span>
<span class="token comment">// promise1\u3001promise2.then\u3001promise2.then\u3001promise3\u3001a1 end // \u533A\u522B\u5728\u4E8Ea1 end\u7684\u89E6\u53D1\u65F6\u673A</span>
<span class="token comment">// setTimeout</span>
</code></pre></div><h2 id="\u539F\u578B" tabindex="-1">\u539F\u578B <a class="header-anchor" href="#\u539F\u578B" aria-hidden="true">#</a></h2><blockquote><p>\u5148\u6765\u4E2A\u4E0B\u996D\u7684\u9898</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// true, A\u662Fnew Function\u751F\u6210</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// true\uFF0C\u539F\u578B\u5BF9\u8C61\u7531new Object\u751F\u6210</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// true\uFF0C Object\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7531 new Function\u751F\u6210</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// Function\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u8FD9\u91CC\u662F\u4E0D\u662F\u6709\u79CD\u9E21\u751F\u86CB\u86CB\u751F\u9E21\u7684\u611F\u89C9</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true, \u540C\u7B2C\u4E09\u6761</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null\uFF0C\u4E07\u7269\u8D77\u6E90</span>
</code></pre></div><p>\u6700\u4FDD\u9669\u7684\u8BF4\u6CD5\u53EF\u80FD\u662F\uFF0C\u201C\u51FD\u6570\u201D\u548C\u201D\u65B9\u6CD5\u201C\u5728JavaScript\u4E2D\u662F\u53EF\u4EE5\u4E92\u6362\u7684\u3002</p><blockquote><p>\u518D\u6765\u4E00\u4E2A\u4E0B\u996D\u7684\u9898</p></blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/instanceof" target="_blank" rel="noopener noreferrer">instanceof</a>\u8FD0\u7B97\u7B26\u7528\u4E8E\u6D4B\u8BD5\u6784\u9020\u51FD\u6570\u7684prototype\u5C5E\u6027\u662F\u5426\u51FA\u73B0\u5728\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E2D\u7684\u4EFB\u4F55\u4F4D\u7F6E</p><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Function <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><p>OK\uFF0C\u73B0\u5728\u4F60\u5E94\u8BE5\u4F1A\u539F\u578B\u76F8\u5173\u7684\u9898\u4E86</p><blockquote><p>Function.prototype\u4E0EObject.prototype</p></blockquote><div class="language-js"><pre><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">F</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&#39;value a&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token string">&#39;value b&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token comment">// value a</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>b<span class="token punctuation">)</span> <span class="token comment">//  undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">F</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token comment">// value a , Function.prototype.__proto__ === Object.prototype</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">F</span><span class="token punctuation">.</span>b<span class="token punctuation">)</span> <span class="token comment">// value b</span>
</code></pre></div>`,48),c=[o];function e(u,l,k,i,r,m){return a(),s("div",null,c)}var b=n(t,[["render",e]]);export{f as __pageData,b as default};
