import{_ as n,c as s,o as a,b as t}from"./app.062798f6.js";const h='{"title":"\u5FEB\u901F\u6D4F\u89C8react API","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5FEB\u901F\u6D4F\u89C8react API","slug":"\u5FEB\u901F\u6D4F\u89C8react-api"},{"level":2,"title":"\u7C7B\u7EC4\u4EF6\u751F\u547D\u5468\u671F","slug":"\u7C7B\u7EC4\u4EF6\u751F\u547D\u5468\u671F"},{"level":3,"title":"beginWork\u9636\u6BB5","slug":"beginwork\u9636\u6BB5"},{"level":3,"title":"commit\u9636\u6BB5","slug":"commit\u9636\u6BB5"},{"level":2,"title":"setState\u6279\u91CF\u66F4\u65B0","slug":"setstate\u6279\u91CF\u66F4\u65B0"},{"level":3,"title":"\u5C0F\u7ED3","slug":"\u5C0F\u7ED3"},{"level":2,"title":"React\u4E2D\u7684\u4E8B\u4EF6","slug":"react\u4E2D\u7684\u4E8B\u4EF6"},{"level":3,"title":"\u4E8B\u4EF6\u6CE8\u518C","slug":"\u4E8B\u4EF6\u6CE8\u518C"},{"level":3,"title":"\u4E8B\u4EF6\u5206\u53D1","slug":"\u4E8B\u4EF6\u5206\u53D1"},{"level":2,"title":"React\u6027\u80FD\u4F18\u5316","slug":"react\u6027\u80FD\u4F18\u5316"},{"level":3,"title":"\u4EE3\u7801\u5206\u5272","slug":"\u4EE3\u7801\u5206\u5272"},{"level":3,"title":"\u5408\u5E76\u6E32\u67D3","slug":"\u5408\u5E76\u6E32\u67D3"},{"level":3,"title":"\u51CF\u5C11\u6E32\u67D3\u6B21\u6570","slug":"\u51CF\u5C11\u6E32\u67D3\u6B21\u6570"},{"level":2,"title":"Hooks\u5B9E\u73B0\u539F\u7406","slug":"hooks\u5B9E\u73B0\u539F\u7406"},{"level":2,"title":"\u5168\u5C40Context","slug":"\u5168\u5C40context"}],"relativePath":"\u6E90\u7801\u5206\u6790/React\u6E90\u7801\u5206\u6790.md"}',o={},e=t(`<h1 id="react\u4E2D\u7684\u4E00\u4E9B\u6838\u5FC3\u5B9E\u73B0" tabindex="-1">React\u4E2D\u7684\u4E00\u4E9B\u6838\u5FC3\u5B9E\u73B0 <a class="header-anchor" href="#react\u4E2D\u7684\u4E00\u4E9B\u6838\u5FC3\u5B9E\u73B0" aria-hidden="true">#</a></h1><p>\u672C\u6587\u5E76\u975E\u6309\u7167\u4EE3\u7801\u8FD0\u884C\u6D41\u7A0B\u89E3\u6790\u76F8\u5173\u6E90\u7801\uFF0C\u800C\u662F\u6309\u7167\u5E38\u7528\u7684API\u53BB\u4E86\u89E3\u6E90\u7801\u4E2D\u7684\u5B9E\u73B0\uFF0C\u56E0\u6B64\u7AE0\u8282\u9605\u8BFB\u987A\u5E8F\u53EF\u4EE5\u968F\u610F\u5207\u6362\u3002</p><h2 id="\u5FEB\u901F\u6D4F\u89C8react-api" tabindex="-1">\u5FEB\u901F\u6D4F\u89C8react API <a class="header-anchor" href="#\u5FEB\u901F\u6D4F\u89C8react-api" aria-hidden="true">#</a></h2><p>\u53C2\u8003\uFF1A<a href="https://zh-hans.reactjs.org/docs/react-api.html" target="_blank" rel="noopener noreferrer">React\u9876\u5C42API</a></p><p>\u4E3A\u4E86\u4FBF\u4E8E\u7406\u89E3\u6E90\u7801\uFF0C\u6211\u4EEC\u9700\u8981\u5927\u81F4\u4E86\u89E3\u4E0B\u9762API\u53CA\u5176\u4F7F\u7528</p><p><a href="https://zh-hans.reactjs.org/docs/refs-and-the-dom.html" target="_blank" rel="noopener noreferrer">ref</a>\u63D0\u4F9B\u4E86\u8BBF\u95EEDOM\u8282\u70B9\u6216\u7EC4\u4EF6\u5B9E\u4F8B\u7684\u65B9\u5F0F</p><ul><li>\u53EF\u4EE5\u7528\u4E8E\u96C6\u6210\u7B2C\u4E09\u65B9\u5E93\u3001\u7ED5\u5F00<code>props</code>\u4E0E\u5B50\u8282\u70B9\u901A\u4FE1\u7B49</li><li>\u4F7F\u7528\u65B9\u5F0F\uFF1A\u901A\u8FC7<code>React.createRef</code>\u521B\u5EFARefs\uFF0C\u5C06\u5176\u8D4B\u7ED9\u5B50\u8282\u70B9\u7684ref\u5C5E\u6027\uFF0C\u5728\u6302\u8F7D\u4E4B\u540E\u53EF\u4EE5\u901A\u8FC7<code>ref.current</code>\u8BBF\u95EE</li><li>\u5982\u679C\u9700\u8981\u628A\u5B50\u7EC4\u4EF6\u7684ref\u66B4\u9732\u7ED9\u7236\u7EC4\u4EF6\uFF0C\u53EF\u4EE5\u901A\u8FC7<code>React.forwardRef</code>\u4F7F\u7528<a href="https://zh-hans.reactjs.org/docs/forwarding-refs.html" target="_blank" rel="noopener noreferrer">refs\u8F6C\u53D1</a></li></ul><p><a href="https://zh-hans.reactjs.org/docs/fragments.html" target="_blank" rel="noopener noreferrer">Fragments</a>\u5141\u8BB8\u5728render\u51FD\u6570\u6216\u51FD\u6570\u7EC4\u4EF6\u4E2D\u8FD4\u56DE\u5B50\u7EC4\u4EF6\u5217\u8868\uFF0C\u800C\u975E\u5355\u4E2A\u5B50\u7EC4\u4EF6</p><ul><li>\u65E0\u9700\u5411DOM\u4E2D\u6DFB\u52A0\u989D\u5916\u7684\u5B50\u8282\u70B9</li><li>\u4F7F\u7528\u65B9\u5F0F\uFF1A<code>&lt;React.Fragment&gt;&lt;/React.Fragment&gt;</code> \u6216\u66F4\u7B80\u5355\u7684<code>&lt;&gt;&lt;/&gt;</code>\u5305\u88F9\u5B50\u7EC4\u4EF6\u5217\u8868</li></ul><p><a href="https://zh-hans.reactjs.org/docs/portals.html" target="_blank" rel="noopener noreferrer">Portal</a>\uFF0C\u63D0\u4F9B\u4E86\u4E00\u79CD\u5C06\u5B50\u8282\u70B9\u6E32\u67D3\u5230\u5B58\u5728\u4E8E\u7236\u7EC4\u4EF6\u4EE5\u5916\u7684 DOM \u8282\u70B9\u7684\u65B9\u6848\uFF0C</p><ul><li>\u53EF\u4EE5\u7528\u6765\u5B9E\u73B0\u5168\u5C40\u5F39\u7A97\u7EC4\u4EF6\u7B49\u9700\u6C42</li><li>\u4F7F\u7528\u65B9\u5F0F\uFF1A\u5728render\u65B9\u6CD5\u4E2D\u8FD4\u56DE<code>ReactDOM.createPortal(child, container)</code></li></ul><p><a href="https://zh-hans.reactjs.org/docs/hooks-intro.html" target="_blank" rel="noopener noreferrer">Hooks</a>\u53EF\u4EE5\u8BA9\u5F00\u53D1\u8005\u5728\u4E0D\u7F16\u5199 class \u7684\u60C5\u51B5\u4E0B\u4F7F\u7528 state \u4EE5\u53CA\u5176\u4ED6\u7684 React \u7279\u6027</p><ul><li>\u7EE7<strong>\u9AD8\u9636\u7EC4\u4EF6</strong>\u3001<strong>render props</strong>\u4E4B\u540E\uFF0C\u4E00\u79CD\u66F4\u65B9\u4FBF\u7684\u5728\u7EC4\u4EF6\u4E4B\u95F4\u91CD\u7528\u72B6\u6001\u903B\u8F91\u7684\u65B9\u6848</li><li>\u4F7F\u7528\u65B9\u5F0F\uFF1A\u4F7F\u7528<code>useState</code>\u3001<code>useEffect</code>\u7B49\u5185\u7F6EHook\uFF0C\u652F\u6301\u81EA\u5B9A\u4E49Hook</li></ul><p><a href="https://zh-hans.reactjs.org/docs/context.html" target="_blank" rel="noopener noreferrer">Context</a>\u63D0\u4F9B\u4E86\u4E00\u79CD\u65E0\u987B\u901A\u8FC7props\u76F4\u63A5\u5728\u7EC4\u4EF6\u6811\u4E4B\u95F4\u8FDB\u884C\u6570\u636E\u4F20\u9012\u7684\u65B9\u5F0F</p><ul><li>\u53EF\u4EE5\u5728\u591A\u4E2A\u7EC4\u4EF6\u4E4B\u95F4\u4F7F\u7528\u5168\u5C40\u6570\u636E\uFF0C\u5982\u4E3B\u9898\u3001\u504F\u597D\u8BBE\u7F6E\u7B49</li><li>\u4F7F\u7528\u65B9\u5F0F\uFF1A\u901A\u8FC7<code>React.createContext</code>\u521B\u5EFA\u4E0A\u4E0B\u6587<code>context</code>\uFF0C\u7136\u540E\u4F7F\u7528<code>&lt;context.Provider&gt;</code>\u7EC4\u4EF6\u63D0\u4F9B\u6570\u636E\uFF0C\u5728\u5B50\u7EC4\u4EF6\u4E2D\u901A\u8FC7\u6307\u5B9A<code>static contextType</code>\u5C5E\u6027\u6216\u8005<code>&lt;context.Consumer&gt;</code>\u7EC4\u4EF6\uFF0C\u8BBF\u95EE\u5230\u4E0A\u4E0B\u6587\u6570\u636E</li></ul><h2 id="\u7C7B\u7EC4\u4EF6\u751F\u547D\u5468\u671F" tabindex="-1">\u7C7B\u7EC4\u4EF6\u751F\u547D\u5468\u671F <a class="header-anchor" href="#\u7C7B\u7EC4\u4EF6\u751F\u547D\u5468\u671F" aria-hidden="true">#</a></h2><p>\u53C2\u8003\uFF1A</p><ul><li><a href="https://zh-hans.reactjs.org/docs/react-component.html#the-component-lifecycle" target="_blank" rel="noopener noreferrer">\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F</a></li><li><a href="http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/" target="_blank" rel="noopener noreferrer">React\u751F\u547D\u5468\u671F\u56FE\u8C31</a></li></ul><h3 id="beginwork\u9636\u6BB5" tabindex="-1">beginWork\u9636\u6BB5 <a class="header-anchor" href="#beginwork\u9636\u6BB5" aria-hidden="true">#</a></h3><p>\u5728\u4E4B\u524D\u7684\u6E90\u7801\u5206\u6790\u4E2D\u6211\u4EEC\u4E86\u89E3\u5230, \u5728<code>beginWork</code>\u65B9\u6CD5\u4E2D\u4F1A\u6839\u636E<code>fiber.tag</code>\u5224\u65AD\u5BF9\u5E94\u5B50\u8282\u70B9\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u662F<code>ClassComponent</code>\uFF0C\u5219\u8C03\u7528<code>updateClassComponent</code></p><div class="language-js"><pre><code><span class="token comment">// \u4E3A\u4E86\u65B9\u4FBF\u7406\u89E3\uFF0C\u4E0B\u9762\u65B9\u6CD5\u79FB\u9664\u4E86\u5927\u91CF\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">updateClassComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u59CB\u5316</span>
    <span class="token function">constructClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">mountClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53unitOfWork.alternate\u4E3Anull</span>
    shouldUpdate <span class="token operator">=</span> <span class="token function">resumeMountClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u76F4\u63A5\u66F4\u65B0</span>
    shouldUpdate <span class="token operator">=</span> <span class="token function">updateClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
	<span class="token comment">// \u5982\u679CshouldUpdate\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u91CD\u65B0\u6E32\u67D3</span>
  <span class="token keyword">return</span> <span class="token function">finishClassComponent</span><span class="token punctuation">(</span>shouldUpdate<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u63A5\u4E0B\u6765\u770B\u770B\u521D\u59CB\u5316\u65F6\u7684\u751F\u547D\u5468\u671F\u51FD\u6570\u8C03\u7528\u987A\u5E8F\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">constructClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ctor</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">adoptClassInstance</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06instance\u6302\u8F7D\u5230workInProgress.stateNode</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">mountClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
  instance<span class="token punctuation">.</span>props <span class="token operator">=</span> newProps<span class="token punctuation">;</span>
  instance<span class="token punctuation">.</span>state <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
  instance<span class="token punctuation">.</span>refs <span class="token operator">=</span> emptyRefsObject<span class="token punctuation">;</span>

  workInProgress<span class="token punctuation">.</span>updateQueue <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">processUpdateQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// \u8C03\u7528static getDerivedStateFromProps \u751F\u547D\u5468\u671F\u51FD\u6570</span>
  <span class="token keyword">const</span> getDerivedStateFromProps <span class="token operator">=</span> ctor<span class="token punctuation">.</span>getDerivedStateFromProps<span class="token punctuation">;</span>
  getDerivedStateFromProps <span class="token operator">&amp;&amp;</span> <span class="token function">applyDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5F53\u672A\u4F7F\u7528\u65B0\u7684\u751F\u547D\u5468\u671F\u51FD\u6570\u65F6\uFF0C\u4F5C\u4E3A\u8865\u4E01\uFF0C\u5219\u4F1A\u8C03\u7528\u65E7\u7684\u751F\u547D\u5468\u671F\u51FD\u6570componentWillMount</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token keyword">typeof</span> ctor<span class="token punctuation">.</span>getDerivedStateFromProps <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span>
    <span class="token keyword">typeof</span> instance<span class="token punctuation">.</span>getSnapshotBeforeUpdate <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token keyword">typeof</span> instance<span class="token punctuation">.</span>UNSAFE_componentWillMount <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span>
      <span class="token keyword">typeof</span> instance<span class="token punctuation">.</span>componentWillMount <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token function">callComponentWillMount</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
     workInProgress<span class="token punctuation">.</span>updateQueue <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">processUpdateQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5F00\u59CB\u8C03\u7528render\u65B9\u6CD5\u83B7\u53D6\u5B50\u8282\u70B9\uFF0C\u7136\u540E\u6784\u5EFA\u65B0\u7684fiber\u6811</span>
<span class="token keyword">function</span> <span class="token function">finishClassComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
  <span class="token keyword">let</span> nextChildren <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reconcileChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> workInProgress<span class="token punctuation">.</span>child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getderivedstatefromprops" tabindex="-1">getDerivedStateFromProps <a class="header-anchor" href="#getderivedstatefromprops" aria-hidden="true">#</a></h4><p>\u4ECE\u6E90\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u5728<code>getDerivedStateFromProps</code>\u63A5\u6536nextProps\u548C\u5F53\u524D\u7684state\uFF0C\u5E76\u8FD4\u56DE\u65B0\u7684state</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">applyDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> partialState <span class="token operator">=</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">,</span> prevState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> memoizedState <span class="token operator">=</span>
    partialState <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> partialState <span class="token operator">===</span> <span class="token keyword">undefined</span>
      <span class="token operator">?</span> prevState
      <span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> prevState<span class="token punctuation">,</span> partialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  workInProgress<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> memoizedState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u89C1\u8BE5\u65B9\u6CD5\u7684\u4F5C\u7528\u662F:\u8BA9\u7EC4\u4EF6\u5728 props \u53D8\u5316\u65F6\u66F4\u65B0 state\u3002</p><p>\u53C2\u8003\u5B98\u65B9\u63D0\u4F9B\u7684\u8FD9\u7BC7\u6587\u6863:<a href="https://zh-hans.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#when-to-use-derived-state" target="_blank" rel="noopener noreferrer">\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u6D3E\u751F state</a></p><p>\u6CE8\u610F\u8BE5\u94A9\u5B50\u4E3A\u9759\u6001\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E0D\u80FD\u5728\u5176\u4E2D\u901A\u8FC7this\u83B7\u5F97\u7EC4\u4EF6\u5B9E\u4F8B\u3002</p><h4 id="componentwillmount-\u5C06\u5E9F\u5F03" tabindex="-1">componentWillMount(\u5C06\u5E9F\u5F03) <a class="header-anchor" href="#componentwillmount-\u5C06\u5E9F\u5F03" aria-hidden="true">#</a></h4><p>\u6CE8\u610F\u53EA\u6709\u5F53\u672A\u8C03\u7528\u65B0\u7684\u751F\u547D\u5468\u671F\u51FD\u6570\u65F6\uFF0C\u624D\u4F1A\u8C03\u7528componentWillMount</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">callComponentWillMount</span><span class="token punctuation">(</span><span class="token parameter">workInProgress<span class="token punctuation">,</span> instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> oldState <span class="token operator">=</span> instance<span class="token punctuation">.</span>state<span class="token punctuation">;</span>
  instance<span class="token punctuation">.</span>componentWillMount <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span><span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528componentWillMount</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldState <span class="token operator">!==</span> instance<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    classComponentUpdater<span class="token punctuation">.</span><span class="token function">enqueueReplaceState</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> instance<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u89C1\u8BE5\u65B9\u6CD5\u4E3B\u8981\u662F\u6267\u884C\u4E86componentWillMount\u94A9\u5B50\u51FD\u6570\uFF0C\u5982\u679C\u5728\u5176\u4E2D\u663E\u5F0F\u4FEE\u6539\u4E86<code>this.state</code>\u7684\u6307\u5411\uFF0C\u5219\u76F8\u5F53\u4E8E\u8C03\u7528\u4E86<code>this.setState</code>\u65B9\u6CD5</p><h4 id="componentwillreceiveprops-\u5C06\u5E9F\u5F03" tabindex="-1">componentWillReceiveProps(\u5C06\u5E9F\u5F03) <a class="header-anchor" href="#componentwillreceiveprops-\u5C06\u5E9F\u5F03" aria-hidden="true">#</a></h4><p>\u56DE\u5230\u524D\u9762\u7684<code>updateClassComponent</code>\u4E2D\uFF0C\u5982\u679C\u4E0D\u662F\u521D\u59CB\u5316</p><blockquote><p>\u5F53\u8282\u70B9\u672A\u6302\u8F7D\u65F6\uFF0C\u5219\u8C03\u7528<code>resumeMountClassInstance</code></p></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">resumeMountClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">const</span> instance <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
  <span class="token comment">// \u53EA\u6709\u672A\u4F7F\u7528\u65B0\u7684\u751F\u547D\u5468\u671F\u51FD\u6570\u65F6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasNewLifecycles <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>componentWillReceiveProps<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token comment">// \u65B0\u65E7props\u4E0D\u76F8\u540C</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>oldProps <span class="token operator">!==</span> newProps <span class="token operator">||</span> oldContext <span class="token operator">!==</span> nextContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u8C03\u7528\u7EC4\u4EF6\u7684componentWillReceiveProps\u65B9\u6CD5</span>
      <span class="token function">callComponentWillReceiveProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
   <span class="token comment">// \u8C03\u7528applyDerivedStateFromProps\u65B9\u6CD5</span>
  ctor<span class="token punctuation">.</span>getDerivedStateFromProps <span class="token operator">&amp;&amp;</span> <span class="token function">applyDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">const</span> shouldUpdate <span class="token operator">=</span> 
        <span class="token function">checkHasForceUpdateAfterProcessing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>  <span class="token comment">// \u5224\u65AD\u662F\u5426\u662FforceUpdate</span>
        <span class="token function">checkShouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528\u7EC4\u4EF6\u7684 instance.shouldComponentUpdate</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>shouldUpdate<span class="token punctuation">)</span><span class="token punctuation">{</span>
    	<span class="token comment">// \u8C03\u7528componentWillMount</span>
     <span class="token operator">!</span>hasNewLifecycles <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span><span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9996\u5148\u8C03\u7528\u4E86<code>componentWillReceiveProps</code>\uFF0C\u7136\u540E\u5728\u975E\u5F3A\u5236\u66F4\u65B0\u7684\u60C5\u51B5\u4E0B\u8C03\u7528<code>checkShouldComponentUpdate</code>\u68C0\u6D4B\u662F\u5426\u9700\u8981\u66F4\u65B0\uFF0C\u5982\u679C\u9700\u8981\uFF0C\u518D\u8C03\u7528<code>componentWillMount</code></p><blockquote><p>\u5F53\u8282\u70B9\u53EA\u9700\u8981\u66F4\u65B0\u65F6\uFF0C\u8C03\u7528<code>updateClassInstance</code></p></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">updateClassInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">const</span> instance <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasNewLifecycles <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>componentWillReceiveProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>oldProps <span class="token operator">!==</span> newProps <span class="token operator">||</span> oldContext <span class="token operator">!==</span> nextContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callComponentWillReceiveProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8C03\u7528applyDerivedStateFromProps\u65B9\u6CD5</span>
  ctor<span class="token punctuation">.</span>getDerivedStateFromProps <span class="token operator">&amp;&amp;</span> <span class="token function">applyDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">const</span> shouldUpdate <span class="token operator">=</span> 
        <span class="token function">checkHasForceUpdateAfterProcessing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>  <span class="token comment">// \u5224\u65AD\u662F\u5426\u662FforceUpdate</span>
        <span class="token function">checkShouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528\u7EC4\u4EF6\u7684 instance.shouldComponentUpdate</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>shouldUpdate<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528componentWillUpdate</span>
    <span class="token operator">!</span>hasNewLifecycles <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span><span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u89C1\u4E0E\u4E0A\u9762\u7684<code>resumeMountClassInstance</code>\u76F8\u6BD4\uFF0C\u9664\u4E86<code>shouldUpdate</code>\u4E3Atrue\u65F6\u8C03\u7528\u7684\u662F<code>componentWillUpdate</code>\u4E4B\u5916\uFF0C\u5176\u4F59\u6D41\u7A0B\u57FA\u672C\u7C7B\u4F3C\u3002</p><h4 id="shouldcomponentupdate" tabindex="-1">shouldComponentUpdate <a class="header-anchor" href="#shouldcomponentupdate" aria-hidden="true">#</a></h4><p>\u5728\u975E\u5F3A\u5236\u66F4\u65B0\u65F6\uFF0C\u4E0A\u9762\u4E24\u4E2A\u65B9\u6CD5\u90FD\u8C03\u7528\u4E86<code>shouldComponentUpdate</code></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">checkShouldComponentUpdate</span><span class="token punctuation">(</span>
	<span class="token keyword">const</span> instance <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>shouldComponentUpdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> shouldUpdate <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span>
      newProps<span class="token punctuation">,</span>
      newState<span class="token punctuation">,</span>
      nextContext<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> shouldUpdate<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>	
	<span class="token keyword">if</span> <span class="token punctuation">(</span>ctor<span class="token punctuation">.</span>prototype <span class="token operator">&amp;&amp;</span> ctor<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>isPureReactComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">!</span><span class="token function">shallowEqual</span><span class="token punctuation">(</span>oldProps<span class="token punctuation">,</span> newProps<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">shallowEqual</span><span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> newState<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u89C1\u5176\u5185\u90E8\uFF0C\u4F18\u5148\u8C03\u7528\u7EC4\u4EF6<code>shouldComponentUpdate</code>\u65B9\u6CD5\uFF0C\u5982\u679C\u662F<code>PureReactComponent</code>\uFF0C\u5219\u8FDB\u884C\u6D45\u6BD4\u8F83\uFF0C\u6700\u7EC8\u8FD4\u56DE<code>shouldUpdate</code>\u3002\u5728\u540E\u7EED\u7684<code>finishClassComponent</code>\u65B9\u6CD5\u4E2D\uFF0C\u5982\u679C\u4F20\u5165\u7684<code>shouldUpdate</code>\u4E3Afalse\uFF0C\u5219\u4E0D\u4F1A\u91CD\u65B0\u6E32\u67D3\u7EC4\u4EF6\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">finishClassComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldUpdate <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>didCaptureError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">bailoutOnAlreadyFinishedWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u6CE8\u610F\u4E8B\u9879" tabindex="-1">\u6CE8\u610F\u4E8B\u9879 <a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a></h4><p>\u5F15\u5165\u4E86Fiber\u4E4B\u540E\uFF0C\u5982\u679C<code>renderRoot</code>\u65B9\u6CD5\u662F\u4F20\u5165\u4E86\u5F02\u6B65\u8C03\u7528\u53C2\u6570\uFF0C\u5219\u5728\u4E0A\u9762\u63D0\u5230\u7684\u3001\u5728<code>commit</code>\u4E4B\u524D\u7684\u6240\u6709\u751F\u547D\u5468\u671F\u51FD\u6570\u90FD\u53EF\u80FD\u4F1A\u88AB\u8C03\u7528\u591A\u6B21\uFF0C\u7A0B\u5E8F\u5C31\u53EF\u80FD\u4E0D\u4F1A\u6309\u7167\u5F00\u53D1\u8005\u9884\u671F\u7684\u6D41\u7A0B\u8FD0\u884C\u3002</p><h3 id="commit\u9636\u6BB5" tabindex="-1">commit\u9636\u6BB5 <a class="header-anchor" href="#commit\u9636\u6BB5" aria-hidden="true">#</a></h3><p>\u5F53fiber\u6811\u6784\u5EFA\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u4F1A\u8FDB\u5165<code>commit</code>\u9636\u6BB5\uFF0C\u4E4B\u524D\u5206\u6790\u8FC7<code>commitRoot</code>\u7684\u5927\u81F4\u6D41\u7A0B</p><p>\u5728<code>commitRootImpl</code>\u65B9\u6CD5\u4E2D\u63D0\u4EA4\u66F4\u65B0\u4EFB\u52A1\uFF0C\u53EF\u4EE5\u5206\u4E3A\u5982\u4E0B\u4E09\u4E2A\u9636\u6BB5</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">commitRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token function">runWithPriority</span><span class="token punctuation">(</span>ImmediatePriority<span class="token punctuation">,</span> <span class="token function">commitRootImpl</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">commitRootImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> firstEffect <span class="token operator">=</span> finishedWork <span class="token comment">// \u83B7\u53D6\u9700\u8981\u63D0\u4EA4\u7684\u5217\u8868</span>
  
  <span class="token comment">// before mutation \u9636\u6BB5</span>
  nextEffect <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span> <span class="token comment">// nextEffect\u662F\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF</span>
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token function">commitBeforeMutationEffects</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>nextEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// mutation\u9636\u6BB5</span>
  nextEffect <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token function">commitMutationEffects</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>nextEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// layout\u9636\u6BB5</span>
  nextEffect <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token function">commitLayoutEffects</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>nextEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  nextEffect <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">requestPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u544A\u8BC9\u8C03\u5EA6\u5668\u53EF\u4EE5\u5F00\u59CB\u7ED8\u5236\u4E0B\u4E00\u5E27</span>

  <span class="token function">onCommitRoot</span><span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>stateNode<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">flushSyncCallbackQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getsnapshotbeforeupdate" tabindex="-1">getSnapshotBeforeUpdate <a class="header-anchor" href="#getsnapshotbeforeupdate" aria-hidden="true">#</a></h4><p>\u5728<code>commitBeforeMutationEffects</code>\u9636\u6BB5\uFF0C\u4F1A\u6839\u636E<code>nextEffect.effectTag</code>\u6765\u5224\u65AD\uFF0C\u5982\u679C<code>(nextEffect.effectTag &amp; Snapshot) !== NoEffect</code>\uFF0C\u5219\u8C03\u7528<code>commitBeforeMutationEffectOnFiber</code></p><div class="language-js"><pre><code><span class="token comment">// commitBeforeMutationEffectOnFiber\uFF0C\u6839\u636E\`finishedWork.tag\`\u8C03\u7528\u5BF9\u5E94\u8282\u70B9\u7684\u65B9\u6CD5\uFF0C\u5982\u679C\u662F\`ClassComponent\`</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>effectTag <span class="token operator">&amp;</span> Snapshot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u66F4\u65B0\u65F6\u8C03\u7528getSnapshotBeforeUpdate</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> snapshot <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">getSnapshotBeforeUpdate</span><span class="token punctuation">(</span>
      finishedWork<span class="token punctuation">.</span>elementType <span class="token operator">===</span> finishedWork<span class="token punctuation">.</span>type
        <span class="token operator">?</span> prevProps
        <span class="token operator">:</span> <span class="token function">resolveDefaultProps</span><span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>type<span class="token punctuation">,</span> prevProps<span class="token punctuation">)</span><span class="token punctuation">,</span>
      prevState<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    instance<span class="token punctuation">.</span>__reactInternalSnapshotBeforeUpdate <span class="token operator">=</span> snapshot<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u89C1<code>getSnapshotBeforeUpdate</code>\u5728commit\u7684<code>before mutation</code>\u9636\u6BB5\u8C03\u7528\uFF0C\u5B83\u4F7F\u5F97\u7EC4\u4EF6\u80FD\u5728\u53D1\u751F\u66F4\u6539\u4E4B\u524D\u4ECE DOM \u4E2D\u6355\u83B7\u4E00\u4E9B\u4FE1\u606F\u3002</p><h4 id="componentditmounted\u3001componentdidupdate" tabindex="-1">componentDitMounted\u3001componentDidUpdate <a class="header-anchor" href="#componentditmounted\u3001componentdidupdate" aria-hidden="true">#</a></h4><p>\u5728<code>commitLayoutEffects</code>\u9636\u6BB5\uFF0C\u4F1A\u6839\u636E<code>nextEffect.effectTag</code>\u6765\u5224\u65AD\uFF0C\u5982\u679C\u662F</p><ul><li><code>effectTag &amp; (Update | Callback)</code>\uFF0C\u5219\u8C03\u7528<code>commitLayoutEffectOnFiber</code>\uFF0C\u5373<code>commitLifeCycles</code></li><li><code>effectTag &amp; Ref</code>\uFF0C\u5219\u8C03\u7528<code>commitAttachRef</code></li></ul><div class="language-js"><pre><code><span class="token comment">// commitLifeCycles\uFF0C\u6839\u636E\`finishedWork.tag\`\u8C03\u7528\u4E0D\u540C\u7C7B\u578B\u8282\u70B9\u7684\u65B9\u6CD5\uFF0C\u5F53\u5176\u4E3A\`ClassComponent\`\u65F6</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> finishedWork<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
<span class="token comment">// \u5982\u679C\u6709\u66F4\u65B0</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>effectTag <span class="token operator">&amp;</span> Update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316\u65F6\u8C03\u7528componentDidMount</span>
        instance<span class="token punctuation">.</span><span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> prevState <span class="token operator">=</span> current<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
        <span class="token comment">// \u66F4\u65B0\u65F6\u8C03\u7528componentDidUpdate</span>
        instance<span class="token punctuation">.</span><span class="token function">componentDidUpdate</span><span class="token punctuation">(</span>
            prevProps<span class="token punctuation">,</span>
            prevState<span class="token punctuation">,</span>
          	<span class="token comment">// \u8BE5\u5B57\u6BB5\u662F\u4E0A\u9762getSnapshotBeforeUpdate\u94A9\u5B50\u7684\u8FD4\u56DE\u503C</span>
            instance<span class="token punctuation">.</span>__reactInternalSnapshotBeforeUpdate
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> updateQueue <span class="token operator">=</span> finishedWork<span class="token punctuation">.</span>updateQueue<span class="token punctuation">;</span>
<span class="token function">commitUpdateQueue</span><span class="token punctuation">(</span>updateQueue<span class="token punctuation">)</span>
</code></pre></div><p>\u53EF\u89C1\u521D\u59CB\u5316\u65F6\u8C03\u7528\u7684\u662F<code>componentDidMount</code>\u94A9\u5B50\uFF0C\u540E\u7EED\u66F4\u65B0\u65F6\u8C03\u7528\u7684\u662F<code>componentDidUpdate</code>\u3002</p><p>\u78B0\u5DE7\u770B\u89C1\u4E86<code>commitAttachRef</code>\uFF0C\u6211\u4EEC\u987A\u9053\u770B\u770Bref\u662F\u5982\u4F55\u6302\u8F7D\u7684</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">commitAttachRef</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">finishedWork</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> finishedWork<span class="token punctuation">.</span>ref<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ref <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u8282\u70B9\u7684\u5B9E\u4F8B\uFF0CDOM\u8282\u70B9\u4E3A\u5B9E\u9645\u5143\u7D20\uFF0C\u7C7B\u7EC4\u4EF6\u4E3A\u7EC4\u4EF6\u5B9E\u4F8B</span>
    <span class="token keyword">const</span> instance <span class="token operator">=</span> finishedWork<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
    <span class="token keyword">let</span> instanceToUse <span class="token operator">=</span> instance<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> ref <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ref={(el)=&gt;{this.xxx = el}}\u5F62\u5F0F\u7684ref</span>
      <span class="token function">ref</span><span class="token punctuation">(</span>instanceToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// React.createRef\u5F62\u5F0F\u7684ref</span>
      ref<span class="token punctuation">.</span>current <span class="token operator">=</span> instanceToUse<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u521D\u59CB\u5316\u65F6\u53EF\u4EE5\u901A\u8FC7ref\u83B7\u53D6\u5B50\u8282\u70B9\u7684\u5F15\u7528\uFF0C\u5728\u540E\u7EED\u7684\u58F0\u660E\u5468\u671F\u5982<code>getSnapshotBeforeUpdate</code>\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7ref\u83B7\u53D6DOM\u8282\u70B9\uFF0C\u5E76\u83B7\u53D6\u8BE5\u8282\u70B9\u5728\u53D1\u751F\u53D8\u5316\u4E4B\u524D\u7684\u4FE1\u606F\uFF08\u5982\u6EDA\u52A8\u4F4D\u7F6E\u7B49\uFF09</p><h4 id="componentwillunmount" tabindex="-1">componentWillUnmount <a class="header-anchor" href="#componentwillunmount" aria-hidden="true">#</a></h4><p>\u5728Commit\u8FC7\u7A0B\u7684<code>mutation</code>\u9636\u6BB5\uFF0C\u8C03\u7528<code>commitMutationEffects</code>\uFF0C\u6839\u636E<code>effectTag</code>\u5224\u65AD\u5B9E\u9645\u7684\u6539\u52A8</p><ul><li><code>Placement</code>\uFF0C\u8C03\u7528<code>commitPlacement</code>\u63D2\u5165\u8282\u70B9</li><li><code>PlacementAndUpdate</code>\uFF0C\u8C03\u7528<code>commitPlacement</code>\u548C<code>commitWork</code></li><li><code>Update</code>\uFF0C\u8C03\u7528<code>commitWork</code>\u66F4\u65B0\u5BB9\u5668</li><li><code>Deletion</code>\uFF0C\u8C03\u7528<code>commitDeletion</code>\u5220\u9664\u8282\u70B9\uFF0C\u6B64\u5904\u4F1A\u8C03\u7528\u5378\u8F7D<code>Unmount</code>\u51FD\u6570</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">commitDeletion</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9E\u9645\u4E0AReactDOM\u4E2D\u8C03\u7528\u7684\u662FunmountHostComponents\uFF0C\u5C06DOM\u4ECE\u7236\u8282\u70B9\u79FB\u9664\uFF0C</span>
  <span class="token comment">// \u5176\u5185\u90E8\u8C03\u7528commitNestedUnmounts</span>
  <span class="token function">commitNestedUnmounts</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6E05\u7A7Afiber\u7684\u76F8\u5173\u5F15\u7528\uFF0C\u51C6\u5907\u91CA\u653E</span>
  <span class="token function">detachFiber</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">commitNestedUnmounts</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">node</span><span class="token operator">:</span> Fiber <span class="token operator">=</span> root<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F9D\u6B21\u8C03\u7528commitUnmount</span>
    <span class="token function">commitUnmount</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// node\u904D\u5386\u987A\u5E8F root-&gt;\u5B50\u8282\u70B9-&gt;\u5144\u5F1F\u8282\u70B9-&gt;\u7236\u8282\u70B9</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">commitUnmount</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>tag <span class="token operator">===</span> ClassComponent<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u6E05\u9664ref</span>
    <span class="token function">safelyDetachRef</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> instance <span class="token operator">=</span> current<span class="token punctuation">.</span>stateNode<span class="token punctuation">;</span>
    <span class="token comment">// \u8C03\u7528componentWillUnmount\u65B9\u6CD5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> instance<span class="token punctuation">.</span>componentWillUnmount <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">safelyCallComponentWillUnmount</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>instance.componentWillUnmount</code>\u4F1A\u5728\u7EC4\u4EF6\u5378\u8F7D\u53CA\u9500\u6BC1\u4E4B\u524D\u76F4\u63A5\u8C03\u7528\uFF0C\u8BE5\u94A9\u5B50\u51FD\u6570\u4E3B\u8981\u7528\u4E8E\u6267\u884C\u4E00\u4E9B\u6E05\u9664\u64CD\u4F5C\uFF0C\u5982\u8BA1\u6570\u5668\u3001\u7F51\u7EDC\u8BF7\u6C42\u3001\u4E8B\u4EF6\u8BA2\u9605\u7B49\u3002</p><h2 id="setstate\u6279\u91CF\u66F4\u65B0" tabindex="-1">setState\u6279\u91CF\u66F4\u65B0 <a class="header-anchor" href="#setstate\u6279\u91CF\u66F4\u65B0" aria-hidden="true">#</a></h2><p>\u53C2\u8003\uFF1A</p><ul><li><a href="https://juejin.im/post/5b45c57c51882519790c7441" target="_blank" rel="noopener noreferrer">\u4F60\u771F\u7684\u4E86\u89E3setState\u5417</a></li></ul><p>\u6BCF\u6B21<code>setState</code>\u90FD\u4F1A\u91CD\u65B0\u6E32\u67D3\u5B50\u6811\u3002\u5982\u679C\u4F60\u60F3\u63D0\u9AD8\u6027\u80FD\uFF0C\u5C31\u5C3D\u91CF\u5728\u4F4E\u5C42\u6B21\u7ED3\u6784\u4E2D\u8C03\u7528<code>setState</code>\u6216\u8005\u4F7F\u7528<code>shouldComponentUpdate</code>\u53BB\u963B\u6B62\u6E32\u67D3\u5F88\u5927\u7684\u5B50\u6811\u3002</p><p>\u4E4B\u524D\u5728\u6574\u7406<code>ReactDOM.render</code>\u65B9\u6CD5\u65F6\u4E86\u89E3\u5230\uFF0C\u5728\u521D\u59CB\u5316\u65F6<code>legacyRenderSubtreeIntoContainer</code>\u65B9\u6CD5\u5185\u90E8\u8C03\u7528\u7684\u662F</p><div class="language-js"><pre><code><span class="token function">unbatchedUpdates</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> fiberRoot<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u91CC\u6211\u4EEC\u6765\u770B\u770B<code>unbatchedUpdates</code>\u65B9\u6CD5\u7684\u4F5C\u7528\uFF0C\u53EF\u89C1\u5176\u5185\u90E8\u53EA\u662F\u5C06\u5168\u5C40\u53D8\u91CF<code>executionContext</code>\u8BBE\u7F6E\u4E3A\u4E86</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> unbatchedUpdates<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">R</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prevExecutionContext <span class="token operator">=</span> executionContext<span class="token punctuation">;</span>
  executionContext <span class="token operator">&amp;=</span> <span class="token operator">~</span>BatchedContext<span class="token punctuation">;</span>
  executionContext <span class="token operator">|=</span> LegacyUnbatchedContext<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    executionContext <span class="token operator">=</span> prevExecutionContext<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>executionContext <span class="token operator">===</span> NoContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Flush the immediate callbacks that were scheduled during this batch</span>
      <span class="token function">flushSyncCallbackQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6211\u4EEC\u53EF\u4EE5\u56DE\u987E\u4E00\u4E0B<code>setState</code>\u7684\u6267\u884C\u6D41\u7A0B</p><div class="language-"><pre><code>this.setState() 
this.updater.enqueueSetState

this.updater = classComponentUpdater
</code></pre></div><p>\u641C\u7D22<code>executionContext</code>\uFF0C\u627E\u5230\u8D4B\u503C\u4E3A<code>BatchedContext</code>\u7684\u5730\u65B9</p><h3 id="\u5C0F\u7ED3" tabindex="-1">\u5C0F\u7ED3 <a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a></h3><p>\u5728\u5408\u6210\u4E8B\u4EF6\u548C\u94A9\u5B50\u51FD\u6570\u4E2D\uFF0CReact\u4F1A\u901A\u8FC7\u4E00\u4E2A</p><ul><li><code>setState</code> \u53EA\u5728\u5408\u6210\u4E8B\u4EF6\u548C\u94A9\u5B50\u51FD\u6570\u4E2D\u662F\u201C\u5F02\u6B65\u201D\u7684\uFF0C\u5728\u539F\u751F\u4E8B\u4EF6\u548C <code>setTimeout</code> \u7B49\u5F02\u6B65\u961F\u5217\u4E2D\u4E2D\u90FD\u662F\u540C\u6B65\u7684\u3002</li></ul><h2 id="react\u4E2D\u7684\u4E8B\u4EF6" tabindex="-1">React\u4E2D\u7684\u4E8B\u4EF6 <a class="header-anchor" href="#react\u4E2D\u7684\u4E8B\u4EF6" aria-hidden="true">#</a></h2><p>\u53C2\u8003\uFF1A</p><ul><li><a href="https://zh-hans.reactjs.org/docs/events.html" target="_blank" rel="noopener noreferrer">\u5408\u6210\u4E8B\u4EF6-React\u5B98\u65B9\u6587\u6863</a></li><li><a href="https://www.jianshu.com/p/c01756e520c7" target="_blank" rel="noopener noreferrer">React\u4E8B\u4EF6\u673A\u5236</a></li></ul><h3 id="\u4E8B\u4EF6\u6CE8\u518C" tabindex="-1">\u4E8B\u4EF6\u6CE8\u518C <a class="header-anchor" href="#\u4E8B\u4EF6\u6CE8\u518C" aria-hidden="true">#</a></h3><p>\u5728\u524D\u9762\u7684\u6574\u7406\u4E2D\u6211\u4EEC\u77E5\u9053\u4E86DOM\u8282\u70B9\u7684\u521D\u59CB\u5316\u6D41\u7A0B\uFF0C\u4E3B\u8981\u7ECF\u8FC7\u4E0B\u9762\u6B65\u9AA4</p><ul><li>\u8C03\u7528<code>renderRoot</code>\u65B9\u6CD5\u6E32\u67D3\u6839\u8282\u70B9\uFF0C\u5185\u90E8\u8C03\u7528<code>performUnitOfWork</code>-&gt;<code>completeUnitOfWork</code>-&gt;<code>completeWork</code></li><li>\u5728<code>completeWork</code>\u4E2D\uFF0C\u6839\u636E\u5F53\u524D\u6B63\u5728\u8FD0\u884C\u7684<code>workInProgress.tag</code>\u6765\u9009\u62E9\u5BF9\u5E94\u7684\u8FD0\u884C\u903B\u8F91\uFF0C\u5982\u679C\u662F<code>HostComponent</code><ul><li>\u8C03\u7528<code>createInstance</code>\u6765\u521B\u5EFADOM\u5BF9\u8C61\uFF0C\u63A5\u7740\u5728<code>finalizeInitialChildren</code>\u65B9\u6CD5\u4E2D\u8C03\u7528<code>setInitialProperties</code>\u6765\u83B7\u53D6\u9700\u8981\u521D\u59CB\u5316\u7684\u5C5E\u6027<code>nextProps</code>\uFF0C\u5B9E\u9645\u4E0A\u5373\u4E3AJSX\u5728\u6807\u7B7E\u4E0A\u89E3\u6790\u7684\u76F8\u5173\u5C5E\u6027</li><li>\u7136\u540E\u8C03\u7528\u5728<code>setInitialDOMProperties</code>\uFF0C\u5E76\u904D\u5386<code>nextProps</code>\u4E0A\u7684\u5B57\u6BB5\uFF0C\u6839\u636E\u4E0D\u540C\u7684\u5B57\u6BB5\u7C7B\u578B\u505A\u5BF9\u5E94\u5904\u7406\uFF0C\u5982<code>dangerouslySetInnerHTML</code>\u3001<code>children</code>\u548C\u4E8B\u4EF6\u540D\u7B49\uFF0C\u8FD9\u91CC\u6211\u4EEC\u6682\u65F6\u53EA\u9700\u8981\u5173\u6CE8\u4E8B\u4EF6\u5C5E\u6027\u7684\u5904\u7406</li><li>\u5982\u679C\u8282\u70B9\u4E0A\u5305\u542B\u4E8B\u4EF6\u5C5E\u6027\uFF0C\u5219\u8C03\u7528<code>ensureListeningTo(rootContainerElement, propKey)</code><ul><li>\u901A\u8FC7<code>listeningSet</code>\u96C6\u5408\uFF0C\u4FDD\u8BC1\u591A\u4E2A\u8282\u70B9\u7684\u76F8\u540C\u4E8B\u4EF6\u540D\u53EA\u4F1A\u5728document\u4E0A\u6CE8\u518C\u4E00\u6B21</li><li>\u4E8B\u4EF6\u7684\u6CE8\u518C\u662F\u5728<code>trapEventForPluginEventSystem</code>\u65B9\u6CD5\u4E2D\u5B8C\u6210\u7684\uFF0C\u5185\u90E8\u4F1A\u6839\u636E\u4E8B\u4EF6\u540D\u786E\u8BA4\u4E8B\u4EF6\u4F18\u5148\u7EA7\uFF0C\u7136\u540E\u5B9E\u73B0\u5BF9\u5E94\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u5982<code> listener = dispatchEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM)</code></li></ul></li></ul></li><li>\u6700\u540E\u5C06\u5BF9\u5E94\u4E8B\u4EF6\u540D\u548C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u6CE8\u518C\u5728\u6839\u8282\u70B9<code>document</code>\u4E0A\uFF0C\u5B8C\u6210\u4E8B\u4EF6\u59D4\u6258</li></ul><h3 id="\u4E8B\u4EF6\u5206\u53D1" tabindex="-1">\u4E8B\u4EF6\u5206\u53D1 <a class="header-anchor" href="#\u4E8B\u4EF6\u5206\u53D1" aria-hidden="true">#</a></h3><p>\u524D\u9762\u6211\u4EEC\u77E5\u9053\u4E86\u6240\u6709\u7684\u4E8B\u4EF6\u7C7B\u578B\u90FD\u88AB\u6CE8\u518C\u5728document\u4E0A\uFF0C\u73B0\u5728\u6765\u6574\u7406\u4E00\u4E0B\u4E8B\u4EF6\u89E6\u53D1\u65F6\u7684\u8FD0\u884C\u6D41\u7A0B\uFF0C\u4EE5<code>click</code>\u4E3A\u4F8B\uFF0C</p><ul><li>\u70B9\u51FB\u6587\u6863\u65F6\uFF0C\u5C06\u89E6\u53D1\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\uFF0C\u6B64\u65F6\u5C06\u83B7\u53D6\u539F\u59CB\u7684\u4E8B\u4EF6\u5BF9\u8C61<code>nativeEvent</code>\u548C\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u6839\u636E<code>nativeEvent.target</code>\u53EF\u4EE5\u83B7\u53D6\u5BF9\u5E94\u7684<code>targetInst</code>\uFF0C\u53CA\u8BE5DOM\u8282\u70B9\u5BF9\u5E94\u7684<code>Fiber Node</code></li><li>\u6839\u636E\u4E8B\u4EF6\u7C7B\u578B\u548C\u539F\u59CB\u4E8B\u4EF6\uFF0C\u8C03\u7528<code>possiblePlugin.extractEvents</code>\u521D\u59CB\u5316\u4E00\u4E2A\u5408\u6210\u4E8B\u4EF6<code>event</code><ul><li>\u8C03\u7528<code>EventConstructor.getPooled</code>\u83B7\u53D6\u4E8B\u4EF6\u5BF9\u8C61 <ul><li>\u5982\u679C\u4E8B\u4EF6\u6C60\u6709\u5269\u4F59\u7684\u4E8B\u4EF6\u5BF9\u8C61\uFF0C\u5219\u53D6\u51FA\u5E76\u6839\u636E\u539F\u59CB\u4E8B\u4EF6\u4FEE\u6539\u5C5E\u6027</li><li>\u5982\u679C\u4E8B\u4EF6\u6C60\u65E0\u53EF\u7528\u7684\u4E8B\u4EF6\u5BF9\u8C61\uFF0C\u5219\u521D\u59CB\u5316\u4E00\u4E2A\u5408\u6210\u4E8B\u4EF6\u5BF9\u8C61</li></ul></li><li>\u8C03\u7528<code>accumulateTwoPhaseDispatchesSingle</code>\u83B7\u53D6\u4E8B\u4EF6\u5904\u7406\u51FD\u6570 <ul><li>\u4ECE<code>targetInst</code>\u5F00\u59CB\uFF0C\u5411\u4E0A\u904D\u5386\u7236\u8282\u70B9\uFF0C\u586B\u5145\u4E8B\u4EF6\u4F20\u9012\u7684path\uFF0C\u8D8A\u9760\u540E\u7684\u8282\u70B9\u8D8A\u9876\u5C42</li><li>\u4ECE\u540E\u5411\u524D\u904D\u5386\u8282\u70B9\uFF0C\u89E6\u53D1<code>captured</code>\uFF0C\u7136\u540E\u83B7\u53D6\u8282\u70B9props\u7684<code>on...Capture</code>\u5C5E\u6027\u4F5C\u4E3A\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u5219\u5C06\u5176\u4FDD\u5B58\u5728<code>event._dispatchListeners</code></li><li>\u4ECE\u524D\u5411\u540E\u904D\u5386\u8282\u70B9\uFF0C\u89E6\u53D1<code>bubbled</code>\uFF0C\u7136\u540E\u83B7\u53D6\u8282\u70B9props\u7684<code>on...</code>\u5C5E\u6027\u4F5C\u4E3A\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u5219\u540C\u6837\u5C06\u5176\u4FDD\u5B58\u5728<code>event._dispatchListeners</code></li><li>\u6CE8\u610F\u5F53\u524D<code>event._dispatchListeners</code>\u53EF\u80FD\u4FDD\u5B58\u4E86\u591A\u4E2A\u8282\u70B9\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</li></ul></li></ul></li><li>\u7136\u540E\u5728<code>executeDispatchesAndRelease</code>\u65B9\u6CD5\u4E2D\u6267\u884C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570 <ul><li>\u4F9D\u6B21\u8C03\u7528\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u5217\u8868\uFF0C\u5148\u6355\u83B7\u540E\u5192\u6CE1\uFF0C\u5E76\u5C06\u5408\u6210\u4E8B\u4EF6<code>event</code>\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</li><li>\u4E8B\u4EF6\u51FD\u6570\u5904\u7406\u5B8C\u6BD5\uFF0C\u5224\u65AD\u5408\u6210\u4E8B\u4EF6\u662F\u5426\u53EF\u56DE\u6536\uFF0C\u5982\u679C\u53EF\u56DE\u6536\uFF0C\u5219\u5C06\u5176\u653E\u56DE\u4E8B\u4EF6\u6C60\uFF0C\u7559\u4F5C\u4E0B\u6B21\u4F7F\u7528</li></ul></li></ul><h2 id="react\u6027\u80FD\u4F18\u5316" tabindex="-1">React\u6027\u80FD\u4F18\u5316 <a class="header-anchor" href="#react\u6027\u80FD\u4F18\u5316" aria-hidden="true">#</a></h2><p>\u4ECE\u6E90\u7801\u4E2D\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\u4E0B\u9762\u51E0\u4E2A\u4F18\u5316\u70B9</p><h3 id="\u4EE3\u7801\u5206\u5272" tabindex="-1">\u4EE3\u7801\u5206\u5272 <a class="header-anchor" href="#\u4EE3\u7801\u5206\u5272" aria-hidden="true">#</a></h3><p><code>React.lazy</code>\u51FD\u6570\u80FD\u8BA9\u4F60\u50CF\u6E32\u67D3\u5E38\u89C4\u7EC4\u4EF6\u4E00\u6837\u5904\u7406\u52A8\u6001\u5F15\u5165\uFF08\u7684\u7EC4\u4EF6\uFF09,<code>Suspense</code>\u53EF\u4EE5\u7528\u4E8E\u7B49\u5F85\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u7684\u5C55\u793A</p><h3 id="\u5408\u5E76\u6E32\u67D3" tabindex="-1">\u5408\u5E76\u6E32\u67D3 <a class="header-anchor" href="#\u5408\u5E76\u6E32\u67D3" aria-hidden="true">#</a></h3><p>\u5728UI\u53D8\u5316\u4E2D\uFF0C\u4E0D\u5FC5\u7ACB\u5373\u89E6\u53D1\u6BCF\u4E2A\u66F4\u65B0\uFF0C\u6BD4\u5982\u5728\u6781\u77ED\u7684\u65F6\u95F4\u5185\u9875\u9762\u72B6\u6001<code>A-&gt;B-&gt;C</code>\uFF0C\u90A3\u66F4\u65B0\u72B6\u6001B\u5C31\u5BFC\u81F4\u6027\u80FD\u6D6A\u8D39\u3002</p><p>\u53EF\u4EE5\u8BF4\uFF0CsetState\u662F\u5BF9\u5355\u4E2A\u7EC4\u4EF6\u7684\u5408\u5E76\u6E32\u67D3\uFF0CbatchedUpdates\u662F\u5BF9\u591A\u4E2A\u7EC4\u4EF6\u7684\u5408\u5E76\u6E32\u67D3\u3002\u5408\u5E76\u6E32\u67D3\u662FReact\u6700\u4E3B\u8981\u7684\u4F18\u5316\u624B\u6BB5\u3002</p><h3 id="\u51CF\u5C11\u6E32\u67D3\u6B21\u6570" tabindex="-1">\u51CF\u5C11\u6E32\u67D3\u6B21\u6570 <a class="header-anchor" href="#\u51CF\u5C11\u6E32\u67D3\u6B21\u6570" aria-hidden="true">#</a></h3><h4 id="react-memo" tabindex="-1">React.memo <a class="header-anchor" href="#react-memo" aria-hidden="true">#</a></h4><p>\u5982\u679C\u51FD\u6570\u7EC4\u4EF6\u5728\u7ED9\u5B9A\u76F8\u540C props \u7684\u60C5\u51B5\u4E0B\u6E32\u67D3\u76F8\u540C\u7684\u7ED3\u679C\uFF0C\u90A3\u4E48\u53EF\u4EE5\u901A\u8FC7\u5C06\u5176\u5305\u88C5\u5728 <a href="https://zh-hans.reactjs.org/docs/react-api.html#reactmemo" target="_blank" rel="noopener noreferrer">React.memo</a> \u4E2D\u8C03\u7528</p><h4 id="shouldcomponentupdate-1" tabindex="-1">shouldComponentUpdate <a class="header-anchor" href="#shouldcomponentupdate-1" aria-hidden="true">#</a></h4><p>\u5728 shouldComponentUpdate() \u4E2D\u6839\u636E\u5F53\u524D state \u6216 props \u5224\u65AD\u662F\u5426\u9700\u8981\u8C03\u7528render\u65B9\u6CD5\u6765\u91CD\u65B0\u6E32\u67D3\u5B50\u8282\u70B9\u3002</p><p><a href="https://zh-hans.reactjs.org/docs/react-component.html#shouldcomponentupdate" target="_blank" rel="noopener noreferrer">https://zh-hans.reactjs.org/docs/react-component.html#shouldcomponentupdate</a></p><h4 id="purecomponent" tabindex="-1">PureComponent <a class="header-anchor" href="#purecomponent" aria-hidden="true">#</a></h4><p>React.Component \u5E76\u672A\u5B9E\u73B0 shouldComponentUpdate()\uFF0C\u800C React.PureComponent \u4E2D\u4EE5\u6D45\u5C42\u5BF9\u6BD4 prop \u548C state \u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u4E86\u8BE5\u51FD\u6570\u3002</p><p><code>PureComponent</code>\u5E76\u672A\u5B9E\u73B0 <code>shouldComponentUpdate</code>\u65B9\u6CD5\uFF0C\u53EA\u662F\u5BF9props\u548Cstate\u8FDB\u884C\u6D45\u6BD4\u8F83\uFF0C\u53EF\u4EE5\u7ED3\u5408\u4F7F\u7528<code>Immutable.js</code>\u6765\u521B\u5EFA\u4E0D\u53EF\u53D8\u5BF9\u8C61\uFF0C\u901A\u8FC7\u5B83\u6765\u7B80\u5316\u5BF9\u8C61\u6BD4\u8F83\uFF0C\u63D0\u9AD8\u6027\u80FD\u3002</p><h2 id="hooks\u5B9E\u73B0\u539F\u7406" tabindex="-1">Hooks\u5B9E\u73B0\u539F\u7406 <a class="header-anchor" href="#hooks\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a></h2><p>\u5728<code>updateFunctionComponent</code>\u4E2D\uFF0C\u8C03\u7528\u7684\u662F<code>renderWithHooks</code>\u8FD4\u56DE\u5B50\u8282\u70B9</p><h2 id="\u5168\u5C40context" tabindex="-1">\u5168\u5C40Context <a class="header-anchor" href="#\u5168\u5C40context" aria-hidden="true">#</a></h2>`,111),p=[e];function c(l,u,i,r,k,d){return a(),s("div",null,p)}var f=n(o,[["render",c]]);export{h as __pageData,f as default};
