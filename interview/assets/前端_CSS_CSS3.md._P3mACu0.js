import{_ as s,c as a,o as i,a2 as e}from"./chunks/framework.DLPB9-dE.js";const u=JSON.parse('{"title":"CSS3","description":"","frontmatter":{},"headers":[],"relativePath":"前端/CSS/CSS3.md","filePath":"前端/CSS/CSS3.md","lastUpdated":1620234346000}'),n={name:"前端/CSS/CSS3.md"},l=e(`<h1 id="css3" tabindex="-1">CSS3 <a class="header-anchor" href="#css3" aria-label="Permalink to &quot;CSS3&quot;">​</a></h1><h2 id="属性前缀" tabindex="-1">属性前缀 <a class="header-anchor" href="#属性前缀" aria-label="Permalink to &quot;属性前缀&quot;">​</a></h2><blockquote><p>浏览器前缀和无浏览器前缀的属性摆放的顺序？</p></blockquote><p>参考<a href="https://css-tricks.com/ordering-css3-properties/" target="_blank" rel="noreferrer">ordering-css3-properties</a> 。</p><p>应该是带前缀的属性在前面，无浏览器前缀的属性在后面。这是因为在对于带前缀的属性而言，每个浏览器实现的效果可能不一致，而对于不带前缀的样式而言，每个浏览器都遵循规范实现</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 对于border-radius带多个值而言，下面两种样式的展示效果是不一样的 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -webkit-border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -webkit-border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="css3动画" tabindex="-1">CSS3动画 <a class="header-anchor" href="#css3动画" aria-label="Permalink to &quot;CSS3动画&quot;">​</a></h2><h3 id="形变" tabindex="-1">形变 <a class="header-anchor" href="#形变" aria-label="Permalink to &quot;形变&quot;">​</a></h3><p><code>transform</code></p><p>该属性是对元素进行变操作的，比如位移，旋转，缩放，变形等，由于是瞬间完成，并不能单独完成动画效果</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>transform:属性值（具体数值量）</span></span></code></pre></div><p>位移:translate（x,y） 注意：</p><ul><li>1.参数单位为px，以原始位置左上角为原点，根据参数偏移量重新定位到指定位置。</li><li>2.可以将X轴和Y轴单独写成translateX和translateY；</li><li>3.只有一个参数的时候默认向X轴偏移，等同于translateX；</li><li>4.translate3d...</li></ul><p>缩放：scale(x); 注意：</p><ul><li>1.参数无单位，以元素的中心为原点向四周进行扩大(x&gt;1)或缩小(x&lt;1)至指定倍数;</li><li>2.可以传入两个参数，第一个参数表示x方向上扩大的倍数，第二个参数表示y方向上扩大的倍数；</li><li>3.若将参数设置为0则元素会缩小至不可见</li><li>4.scale3d</li></ul><p>旋转：rotate(degree)</p><ul><li>1.参数单位为deg，正数表示顺时针旋转，负数表示逆时针旋转；</li><li>2.默认的rotate只能传入一个参数值，以屏幕为基准面，以元素中心为基准点进行旋转；</li><li>3.rotate3d(X?,X?,Z?,degree)，先选择进行旋转的轴，如果是则设置为1，否则设置为0,在设置旋转的角度。</li></ul><p>变形：skew（x,y）</p><ul><li>两个参数值，分别表示相对于X轴和Y轴的倾斜度， X值为正表示将元素左上角原点向左拉扯，Y值为正表示将元素左上角原点向上拉扯，若为负值则相反。</li></ul><h3 id="渐变动画" tabindex="-1">渐变动画 <a class="header-anchor" href="#渐变动画" aria-label="Permalink to &quot;渐变动画&quot;">​</a></h3><p><code>transiton</code></p><h3 id="逐帧动画" tabindex="-1">逐帧动画 <a class="header-anchor" href="#逐帧动画" aria-label="Permalink to &quot;逐帧动画&quot;">​</a></h3><p><code>@keyframes</code>、<code>animation</code></p><ul><li>animation-name 规定需要绑定到选择器的 keyframe 名称。</li><li>animation-duration 规定完成动画所花费的时间，以秒或毫秒计。</li><li>nimation-timing-function 规定动画的速度曲线。</li><li>animation-delay 规定在动画开始之前的延迟。</li><li>animation-iteration-count 规定动画应该播放的次数。</li><li>animation-direction 规定是否应该轮流反向播放动画。</li></ul><h3 id="css-动画和-js-动画有什么区别" tabindex="-1">css 动画和 js 动画有什么区别? <a class="header-anchor" href="#css-动画和-js-动画有什么区别" aria-label="Permalink to &quot;css 动画和 js 动画有什么区别?&quot;">​</a></h3><ul><li>代码复杂度方面，简单动画，css 代码实现会简单一些，js 复杂一些。复杂动画的话，css 代码就会变得冗长，js实现起来更优。</li><li>动画运行时，对动画的控制程度上，js 比较灵活，能控制动画暂停，取消，终止等，css动画不能添加事件，只能设置固定节点进行什么样的过渡动画。</li><li>兼容方面，css 有浏览器兼容问题，js 大多情况下是没有的。</li><li>性能方面，css动画相对于优一些，css 动画通过GUI解析，js 动画需要经过j s 引擎代码解析，然后再进行 GUI 解析渲染。</li></ul><h2 id="css中的事件属性" tabindex="-1">CSS中的事件属性 <a class="header-anchor" href="#css中的事件属性" aria-label="Permalink to &quot;CSS中的事件属性&quot;">​</a></h2><p><strong>user-select</strong></p><p>选中事件，下面代码可以禁止复制</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>* {</span></span>
<span class="line"><span>-webkit-user-select: none;</span></span>
<span class="line"><span>   -moz-user-select: none;</span></span>
<span class="line"><span>    -ms-user-select: none;</span></span>
<span class="line"><span>        user-select: none;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>在IOS下会影响输入框的输入，需要</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>input,textarea {</span></span>
<span class="line"><span>    user-select: auto;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p><strong>pointer-events</strong></p><p>点击事件，可以禁止长按保存图片的功能</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>img { </span></span>
<span class="line"><span>    pointer-events: none; </span></span>
<span class="line"><span>}</span></span></code></pre></div><p><strong>-webkit-tap-highlight-color</strong></p><p>移动端链接等可点击的元素，激活时有默认的背景色，可通过该属性设置。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>a {</span></span>
<span class="line"><span>    -webkit-tap-highlight-color: rgba(0,0,0,0);</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="利用css3实现瀑布流" tabindex="-1">利用css3实现瀑布流 <a class="header-anchor" href="#利用css3实现瀑布流" aria-label="Permalink to &quot;利用css3实现瀑布流&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.waterfall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    column-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    column-gap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.waterfall_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    break-inside</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avoid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="css开启硬件加速" tabindex="-1">CSS开启硬件加速 <a class="header-anchor" href="#css开启硬件加速" aria-label="Permalink to &quot;CSS开启硬件加速&quot;">​</a></h2><ul><li><a href="https://www.cnblogs.com/PeunZhang/p/3510083.html" target="_blank" rel="noreferrer">用CSS开启硬件加速来提高网站性能</a></li><li><a href="https://www.cnblogs.com/chenlogin/p/5834593.html" target="_blank" rel="noreferrer">GPU硬件加速</a></li></ul><p><strong>优点</strong> 现在大多数电脑的显卡都支持硬件加速。鉴于此，我们可以发挥GPU的力量，从而使我们的网站或应用表现的更为流畅</p><p><strong>触发条件</strong></p><ul><li>3D变换会触发, <code>translate3d</code>、<code>rotate3d</code>和<code>scale3d</code></li><li>translateZ(0)</li></ul><p>当使用CSS transforms 或者 animations时可能会有页面闪烁的效果，可以使用<code>transform: translate3d(0, 0, 0)</code>修复</p><p><strong>缺点</strong> 使用GPU可能会导致严重的性能问题，因为它增加了内存的使用，而且它会减少移动端设备的电池寿命。</p><h2 id="一些bug" tabindex="-1">一些BUG <a class="header-anchor" href="#一些bug" aria-label="Permalink to &quot;一些BUG&quot;">​</a></h2><h3 id="css3-transform对普通元素的n多渲染影响" tabindex="-1">CSS3 transform对普通元素的N多渲染影响 <a class="header-anchor" href="#css3-transform对普通元素的n多渲染影响" aria-label="Permalink to &quot;CSS3 transform对普通元素的N多渲染影响&quot;">​</a></h3><p>参考</p><ul><li><a href="https://www.zhangxinxu.com/wordpress/2015/05/css3-transform-affect/" target="_blank" rel="noreferrer">https://www.zhangxinxu.com/wordpress/2015/05/css3-transform-affect/</a></li></ul><h3 id="css动画影响fixed属性" tabindex="-1">CSS动画影响fixed属性 <a class="header-anchor" href="#css动画影响fixed属性" aria-label="Permalink to &quot;CSS动画影响fixed属性&quot;">​</a></h3><p>当为元素设置缓动动画（或其他动画？）时，其子元素如果设置了fixed，则改fixed属性会失效</p><p>问题：</p><ul><li><a href="http://www.cnblogs.com/skyweaver/p/4369276.html" target="_blank" rel="noreferrer">http://www.cnblogs.com/skyweaver/p/4369276.html</a></li><li><a href="http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/" target="_blank" rel="noreferrer">http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/</a></li></ul><p>解答：</p><p>父类元素 含有 transform,或者 will-chanage之类，会单独建立 gpu层，导致 子元素fixed，或者zIndex 之类失效，</p><h3 id="ios-fixed定位抖动" tabindex="-1">iOS fixed定位抖动 <a class="header-anchor" href="#ios-fixed定位抖动" aria-label="Permalink to &quot;iOS fixed定位抖动&quot;">​</a></h3><p>在一个<code>overflow:auto</code>的容器中包含了fixed元素，在滑动时对应的固定定位的元素出现抖动</p><p>解决方案:修改布局，fixed元素移动到外部容器</p><p>参考</p><ul><li><a href="https://blog.csdn.net/sinat_22209293/article/details/80854509" target="_blank" rel="noreferrer">iOS中position:fixed吸底时的滑动出现抖动的解决方案</a>，貌似添加<code>translateZ(0)</code>不生效。</li></ul><h2 id="扩展阅读" tabindex="-1">扩展阅读 <a class="header-anchor" href="#扩展阅读" aria-label="Permalink to &quot;扩展阅读&quot;">​</a></h2><ul><li><a href="https://www.zhangxinxu.com/wordpress/2015/05/css3-transform-affect/" target="_blank" rel="noreferrer">CSS3 transform对普通元素的N多渲染影响</a></li></ul><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><p>Q:css 动画和 js 动画的差异</p><ol><li>代码复杂度，js 动画代码相对复杂一些</li><li>动画运行时，对动画的控制程度上，js 能够让动画，暂停，取消，终止，css动画不能添加事件</li><li>动画性能看，js 动画多了一个js 解析的过程，性能不如 css 动画好</li></ol>`,67),t=[l];function p(r,h,o,d,c,k){return i(),a("div",null,t)}const b=s(n,[["render",p]]);export{u as __pageData,b as default};
