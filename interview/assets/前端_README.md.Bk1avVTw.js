import{_ as l,c as i,o as e,a2 as a}from"./chunks/framework.DLPB9-dE.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/README.md","filePath":"前端/README.md","lastUpdated":1620234346000}'),t={name:"前端/README.md"},o=a('<p>整理一个合格前端需要了解的知识点。</p><h2 id="库与框架" tabindex="-1">库与框架 <a class="header-anchor" href="#库与框架" aria-label="Permalink to &quot;库与框架&quot;">​</a></h2><ul><li>React <ul><li>理解<code>UI = f(data)</code></li><li>三层结构：虚拟DOM层、Fiber Reconciler调和层、reactDOM层</li><li>虚拟DOM的优劣、diff算法原理</li><li>Fiber的意义和实现原理？任务优先级划分规则？setState的同步异步？</li><li>Class组件生命周期?合成事件</li><li>组件通信？父子组件、兄弟组件、祖先后台组件、任意组件？</li><li>封装组件的技巧：ref、Fragments、Portal</li><li>逻辑复用：HOC高阶组件、render Props、 Hooks</li><li>理解状态管理 <ul><li>redux,redux-thunk,redux-saga</li><li>mobx</li></ul></li><li>ReactRouter原理及使用、SSR</li><li>React性能优化：React.memo、shouldComponentUpdate、PureComponent、代码切割</li></ul></li><li>Vue <ul><li>响应式系统：监听数据变化、依赖收集、通知变化</li><li>虚拟DOM，template编译成render函数</li><li>组件通信：props、event、eventBus、vuex</li><li>语法糖：v-model、filter、computed、事件修饰符</li><li>VueRouter原理及使用</li><li>vuex设计理念，如何划分模块</li><li>Vue性能优化：<code>keep-alive</code>、<code>nextTick</code>、代码切割</li></ul></li><li>Axios</li><li>Koa</li><li>微信小程序 <ul><li>基本使用</li><li>跨端框架mpvue、taro原理</li></ul></li></ul><h2 id="nodejs" tabindex="-1">NodeJS <a class="header-anchor" href="#nodejs" aria-label="Permalink to &quot;NodeJS&quot;">​</a></h2><ul><li>NodeJS优缺点及应用场景</li><li>NodeJS的结构</li><li>模块？加载机制、模块缓存、热更新、上下文、包管理</li><li>核心内置库类？EventEmitter、Stream、fs文件系统、网络、child-process</li><li>进程、子进程、集群、进程通信、守护进程</li><li>eventLoop？与浏览器的区别？</li><li>express、koa？中间件及原理？</li><li>MVC、RESTful接口设计、RPC</li><li>编写原生C++模块</li></ul><h2 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h2><ul><li>使用TS的优缺点</li><li>类型定义文件<code>*.d.ts</code>的作用?</li><li>如何理解接口、泛型？</li><li>将TS集成到开发环境？在Vue、React等库中引入TS</li></ul><h2 id="函数式编程" tabindex="-1">函数式编程 <a class="header-anchor" href="#函数式编程" aria-label="Permalink to &quot;函数式编程&quot;">​</a></h2><ul><li>高阶函数</li><li>纯函数</li><li>组合</li><li>柯里化</li></ul><h2 id="网络" tabindex="-1">网络 <a class="header-anchor" href="#网络" aria-label="Permalink to &quot;网络&quot;">​</a></h2><ul><li>从地址栏输入URL到浏览器显示页面整个流程</li><li>网络协议基础 <ul><li>TCP/IP协议？三次握手与四次挥手？TCP如何保证数据是可靠的</li><li>CDN的作用和原理</li></ul></li><li>HTTP <ul><li>报文、常见请求方法区别、常见响应状态码、常见报文字段</li><li>HTTPS、HTTP2</li><li>WebSocket协议？与HTTP的区别</li></ul></li><li>前端 <ul><li>AJAX与fetch？如何二次封装</li><li>跨域？几种解决方案</li><li>缓存控制</li><li>页面加载性能优化</li><li>安全？XSS、CSRF原理及解决方式</li></ul></li><li>Nginx <ul><li>正向代理与反向代理</li><li>location和rewrite</li></ul></li><li>网络调试 <ul><li>抓包</li><li>数据mock</li></ul></li></ul><h2 id="前端工程化" tabindex="-1">前端工程化 <a class="header-anchor" href="#前端工程化" aria-label="Permalink to &quot;前端工程化&quot;">​</a></h2><ul><li>gulp <ul><li>gulp基础概念</li><li>配置gulp任务</li><li>编写一个gulp插件</li></ul></li><li>fis3 <ul><li>为什么选择使用fis3？有什么优点</li><li>基于fis3的静态资源标记，如何实现静态资源精准的按需加载？</li></ul></li><li>webpack <ul><li>设计理念？工作机制？</li><li>常见配置项，常用loader和plugin</li><li><code>webpack-dev-server</code>和热更新原理</li><li>loader和plugin的区别？如何编写一个loader？如何编写一个plugin？</li></ul></li><li>babel <ul><li>工作原理，核心库 <code>babel-core</code></li><li>presets和plugins的选择</li><li>编译配置，打包优化</li></ul></li><li>脚手架cli <ul><li>vue-cli3</li><li>create-react-app、roadhog、umi</li></ul></li></ul><h2 id="前端性能优化" tabindex="-1">前端性能优化 <a class="header-anchor" href="#前端性能优化" aria-label="Permalink to &quot;前端性能优化&quot;">​</a></h2><ul><li>性能瓶颈与性能分析 <ul><li>浏览器解析渲染文档流程，阻塞因素</li><li>数据量大小，长列表数据如何优化？</li></ul></li><li>提前请求资源 <ul><li>DNS预解析</li><li>preload、prefetch</li></ul></li><li>加载速度 <ul><li>静态资源多域名优化</li><li>缓存？强缓存与协商缓存？缓存相关头部？如何配置？</li><li>减少请求数量， <ul><li>资源合并、资源压缩、代码切割</li><li>webp、雪碧图、字体图标、base64图片</li></ul></li><li>压缩文件体积，uglifyJS、gzip</li><li>CDN原理，CNAME解析流程</li></ul></li><li>首屏效果 <ul><li>预加载、懒加载、按需加载</li><li>ssr</li><li>骨架屏</li></ul></li><li>代码优化 <ul><li>重绘和回流</li><li>选择器嵌套</li><li>React组件性能优化</li><li>Vue组件性能优化</li></ul></li></ul>',15),u=[o];function r(c,d,s,n,p,h){return e(),i("div",null,u)}const _=l(t,[["render",r]]);export{f as __pageData,_ as default};
