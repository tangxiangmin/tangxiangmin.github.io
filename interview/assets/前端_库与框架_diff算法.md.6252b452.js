import{_ as n,c as s,o as a,b as p}from"./app.2f94c7c4.js";const h='{"title":"diff\u7B97\u6CD5\u6982\u8FF0","description":"","frontmatter":{},"headers":[{"level":2,"title":"diff\u7B97\u6CD5\u6982\u8FF0","slug":"diff\u7B97\u6CD5\u6982\u8FF0"},{"level":2,"title":"\u9012\u5F52\u5B9E\u73B0diff","slug":"\u9012\u5F52\u5B9E\u73B0diff"},{"level":3,"title":"Vue diff","slug":"vue-diff"},{"level":3,"title":"\u7B80\u5355\u5B9E\u73B0","slug":"\u7B80\u5355\u5B9E\u73B0"},{"level":2,"title":"\u5FAA\u73AF\u5B9E\u73B0diff","slug":"\u5FAA\u73AF\u5B9E\u73B0diff"},{"level":3,"title":"React Fiber Reconciler","slug":"react-fiber-reconciler"},{"level":3,"title":"\u7B80\u5355\u5B9E\u73B0","slug":"\u7B80\u5355\u5B9E\u73B0-1"},{"level":2,"title":"key\u5728diff\u4E2D\u7684\u4F5C\u7528","slug":"key\u5728diff\u4E2D\u7684\u4F5C\u7528"},{"level":3,"title":"\u65E0key\u4E0E\u6709key\u7684\u533A\u522B","slug":"\u65E0key\u4E0E\u6709key\u7684\u533A\u522B"},{"level":3,"title":"\u5B9E\u73B0key","slug":"\u5B9E\u73B0key"},{"level":2,"title":"\u5C0F\u7ED3","slug":"\u5C0F\u7ED3"}],"relativePath":"\u524D\u7AEF/\u5E93\u4E0E\u6846\u67B6/diff\u7B97\u6CD5.md"}',t={},o=p(`<h1 id="\u7406\u89E3diff\u7B97\u6CD5" tabindex="-1">\u7406\u89E3diff\u7B97\u6CD5 <a class="header-anchor" href="#\u7406\u89E3diff\u7B97\u6CD5" aria-hidden="true">#</a></h1><p>\u672C\u6587\u5C06\u4ECEReact\u548CVue\u6E90\u7801\u4E2D\uFF0C\u7406\u89E3diff\u7B97\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406\u548C\u5B9E\u73B0\u65B9\u5F0F\u3002</p><p>\u53C2\u8003:</p><ul><li><a href="https://juejin.im/post/5c8e5e4951882545c109ae9c" target="_blank" rel="noopener noreferrer">\u8BA9\u865A\u62DFDOM\u548CDOM-diff\u4E0D\u518D\u6210\u4E3A\u4F60\u7684\u7ECA\u811A\u77F3</a></li><li><a href="https://segmentfault.com/a/1190000017039293" target="_blank" rel="noopener noreferrer">React \u6E90\u7801\u6DF1\u5EA6\u89E3\u8BFB\uFF08\u5341\uFF09\uFF1ADiff \u7B97\u6CD5\u8BE6\u89E3</a></li><li><a href="https://zhuanlan.zhihu.com/p/20346379" target="_blank" rel="noopener noreferrer">React \u6E90\u7801\u5256\u6790\u7CFB\u5217 \uFF0D \u4E0D\u53EF\u601D\u8BAE\u7684 react diff</a></li><li><a href="https://blog.csdn.net/baiyu753159/article/details/71545762" target="_blank" rel="noopener noreferrer">\u5F7B\u5E95\u7406\u89E3React\u5982\u4F55\u91CD\u65B0\u5904\u7406DOM(Diffing\u7B97\u6CD5)</a></li></ul><h2 id="diff\u7B97\u6CD5\u6982\u8FF0" tabindex="-1">diff\u7B97\u6CD5\u6982\u8FF0 <a class="header-anchor" href="#diff\u7B97\u6CD5\u6982\u8FF0" aria-hidden="true">#</a></h2><p>\u5F00\u95E8\u89C1\u5C71\uFF0C\u5B9A\u4E49diff\u7B97\u6CD5\uFF1A</p><blockquote><p>\u5728\u521D\u59CB\u5316\u6216\u66F4\u65B0\u65F6\uFF0C\u7EC4\u4EF6\u6811\u4ECE\u65E7\u72B6\u6001\u66F4\u65B0\u4E3A\u65B0\u72B6\u6001\uFF0C\u4F7F\u7528<strong>\u5148\u5E8F\u904D\u5386</strong>\uFF0C\u627E\u5230\u5C06\u65E7\u6811\u8F6C\u6362\u4E3A\u65B0\u6811\u6240\u9700\u7684\u6700\u5C11\u7684\u8F6C\u6362\u6B65\u9AA4</p></blockquote><p>diff\u7684\u4EFB\u52A1\u5C31\u662F\u6536\u96C6\u65B0\u7EC4\u4EF6\u6811\u4E2D\u6BCF\u4E2A\u8282\u70B9\u7684\u53D8\u52A8\uFF0C\u5728diff\u5B8C\u6210\u540E\u5C06\u6574\u4E2A\u6539\u52A8\u66F4\u65B0\u5230\u9875\u9762\u771F\u5B9EDOM\u4E0A\u3002\u4E3A\u4E86\u6027\u80FD\u8003\u8651\uFF0C\u5B9E\u73B0\u7684diff\u7B97\u6CD5\u9700\u8981\u6EE1\u8DB3\u4E0B\u9762\u6761\u4EF6</p><ul><li>\u5C3D\u91CF\u590D\u7528DOM\u8282\u70B9\uFF0C\u51CF\u5C11\u521B\u5EFA\u6216\u5220\u9664DOM\u7684\u6B21\u6570</li><li>\u65F6\u95F4\u590D\u6742\u5EA6\u8981\u4F4E\uFF0Cdiff\u64CD\u4F5C\u8981\u8DB3\u591F\u5FEB</li></ul><p>\u5C06\u65B0\u7EC4\u4EF6\u6811\u548C\u65E7\u7EC4\u4EF6\u6811\u4E0A\u540C\u4E00\u4E2A\u4F4D\u7F6E\u7684\u8282\u70B9\u8FDB\u884C\u5BF9\u6BD4\uFF0C\u53EF\u80FD\u5B58\u5728\u4EE5\u4E0B\u51E0\u79CD\u60C5\u51B5</p><ul><li>\u65E7\u8282\u70B9\u5B58\u5728\uFF0C\u65B0\u8282\u70B9\u4E3Anull\uFF0C\u8868\u793A\u65E7\u8282\u70B9\u88AB\u79FB\u9664</li><li>\u65B0\u8282\u70B9\u5B58\u5728\uFF0C\u65E7\u8282\u70B9\u4E3Anull\uFF0C\u8868\u793A\u65B0\u8282\u70B9\u4E3A\u65B0\u63D2\u5165</li><li>\u65B0\u65E7\u8282\u70B9\u90FD\u5B58\u5728 <ul><li>\u7C7B\u578B\u4E0D\u540C\uFF0C\u8868\u793A\u65E7\u8282\u70B9\u88AB\u79FB\u9664\uFF0C\u540C\u65F6\u5C06\u65B0\u8282\u70B9\u63D2\u5165\u8BE5\u4F4D\u7F6E\u5360\u4F4D</li><li>\u7C7B\u578B\u76F8\u540C\uFF0C\u8868\u793A\u65B0\u8282\u70B9<strong>\u53EF\u590D\u7528</strong>\u65E7\u8282\u70B9\u7684\u5B9E\u4F8B\uFF0C\u68C0\u6D4B\u65B0\u65E7\u8282\u70B9\u5C5E\u6027\u662F\u5426\u53D8\u5316 <ul><li>\u5C5E\u6027\u672A\u53D8\u5316\uFF0C\u65B0\u65E7\u8282\u70B9\u5B8C\u5168\u76F8\u540C\uFF0C\u65E0\u9700\u6539\u52A8</li><li>\u5C5E\u6027\u53D8\u5316\uFF0C\u9700\u4F7F\u7528\u65B0\u8282\u70B9\u76F8\u5173\u5C5E\u6027\u66FF\u6362\u65E7\u8282\u70B9\u5C5E\u6027</li></ul></li></ul></li></ul><p>\u5982\u679C\u4EC5\u4EC5\u662F\u6EE1\u8DB3diff\u7B97\u6CD5\u6761\u4EF6\u4E00\uFF0C\u8003\u8651\u4E0B\u9762\u8282\u70B9\u53D8\u5316</p><p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g609096qeoj30es08lweh.jpg" alt=""></p><p>\u7406\u60F3q\u60C5\u51B5\u4E0B\u6700\u4F18\u7684\u5904\u7406\u65B9\u5F0F\u662F\uFF1A\u5C06A\u79FB\u52A8\u5230D\u8282\u70B9\u4E0B\u65B9\uFF0C\u5B8C\u5168\u590D\u7528\u8282\u70B9\u3002\u4F46\u662F\u8FD9\u6837\u5904\u7406\u4F1A\u5BFC\u81F4\u65F6\u95F4\u590D\u6742\u5EA6\u9661\u5347\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5728\u904D\u5386\u65B0\u7EC4\u4EF6\u6811\uFF0C\u9047\u89C1D\u8282\u70B9\u65F6</p><ul><li>\u9996\u5148\u9700\u8981\u77E5\u9053\u5176\u5B50\u6811A\u662F\u4E00\u4E2A\u65B0\u63D2\u5165\u7684\u5B50\u6811</li><li>\u7136\u540E\u9700\u8981\u904D\u5386\u65E7\u7EC4\u4EF6\u6811\uFF0C\u627E\u5230\u4E00\u9897\u4E0EA\u76F8\u540C\u7684\u5B50\u6811\uFF0C\u4E14\u5176\u72B6\u6001\u4E3A\u5220\u9664\uFF0C</li><li>\u6700\u540E\u6211\u4EEC\u5C06\u65E7\u7EC4\u4EF6\u6811\u7684A\u5B50\u6811\u79FB\u52A8\u5230\u65B0\u7EC4\u4EF6\u7684\u7684D\u8282\u70B9\u4E0B\uFF0C\u7EE7\u7EED\u6BD4\u90A3\u91CC\u5176\u4F59\u8282\u70B9\u5E76\u8FDB\u884Cdiff\u64CD\u4F5C</li></ul><p>\u6574\u4E2A\u7B97\u6CD5\u5B9E\u73B0\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u975E\u5E38\u9AD8<code>O(n^3)</code> \uFF0C\u65E0\u6CD5\u6EE1\u8DB3\u7B2C\u4E8C\u4E2A\u6761\u4EF6\u3002\u56E0\u6B64React\u5728DOM\u6027\u80FD\u548C\u7B97\u6CD5\u6548\u7387\u4E4B\u95F4\u8FDB\u884C\u4E86\u53D6\u820D\uFF0C\u4F7F\u7528\u4E0B\u8FF0\u7B56\u7565\u8FDB\u884C\u65B0\u65E7\u7EC4\u4EF6\u6811\u7684diff\u64CD\u4F5C</p><p>React \u901A\u8FC7\u5236\u5B9A\u5927\u80C6\u7684\u7B56\u7565\uFF0C\u5C06 O(n^3) \u590D\u6742\u5EA6\u7684\u95EE\u9898\u8F6C\u6362\u6210 O(n) \u590D\u6742\u5EA6\u7684\u95EE\u9898\u3002</p><ul><li>Web UI \u4E2D DOM \u8282\u70B9\u8DE8\u5C42\u7EA7\u7684\u79FB\u52A8\u64CD\u4F5C\u7279\u522B\u5C11\uFF0C\u53EF\u4EE5\u5FFD\u7565\u4E0D\u8BA1\u3002 <ul><li>\u5F53\u8DE8\u7EA7\u79FB\u52A8\u65F6\uFF0C\u5BF9\u5E94\u7684\u5904\u7406\u65F6\u5220\u9664\u4E4B\u524D\u7684\u8282\u70B9\uFF0C\u7136\u540E\u5728\u79FB\u52A8\u4F4D\u7F6E\u65B0\u5EFA\u8282\u70B9</li><li>\u5728\u4E0A\u8FF0\u63D0\u5230\u7684\u95EE\u9898\u4E2D\uFF0CReact\u9996\u5148\u4F1A\u5220\u9664\u6389A\u8282\u70B9\uFF0C\u7136\u540E\u5728D\u8282\u70B9\u4E0B\u91CD\u65B0\u521B\u5EFAA\u8282\u70B9\u53CA\u5176\u5B50\u8282\u70B9\uFF0C\u91CD\u65B0\u63D2\u5165\uFF0C\u56E0\u6B64\u5EFA\u8BAE\u4E0D\u8981\u505A\u8FD9\u79CD\u8DE8\u7EA7\u7684\u79FB\u52A8\u64CD\u4F5C\uFF0C\u5BF9DOM\u6027\u80FD\u6D88\u8017\u662F\u6BD4\u8F83\u660E\u663E\u7684\u3002</li></ul></li><li>\u62E5\u6709\u76F8\u540C\u7C7B\u7684\u4E24\u4E2A\u7EC4\u4EF6\u5C06\u4F1A\u751F\u6210\u76F8\u4F3C\u7684\u6811\u5F62\u7ED3\u6784\uFF0C\u62E5\u6709\u4E0D\u540C\u7C7B\u7684\u4E24\u4E2A\u7EC4\u4EF6\u5C06\u4F1A\u751F\u6210\u4E0D\u540C\u7684\u6811\u5F62\u7ED3\u6784\u3002 <ul><li>\u5982\u679C\u662F\u540C\u4E00\u7C7B\u578B\u7684\u7EC4\u4EF6\uFF0C\u6309\u7167\u539F\u7B56\u7565\u7EE7\u7EED\u6BD4\u8F83 <code>virtual DOM tree</code></li><li>\u5982\u679C\u4E0D\u662F\uFF0C\u5219\u5C06\u8BE5\u7EC4\u4EF6\u5224\u65AD\u4E3A dirty component\uFF0C\u4ECE\u800C\u76F4\u63A5\u66FF\u6362\u6574\u4E2A\u7EC4\u4EF6\u4E0B\u7684\u6240\u6709\u5B50\u8282\u70B9\u3002</li></ul></li><li>\u5BF9\u4E8E\u540C\u4E00\u5C42\u7EA7\u7684\u4E00\u7EC4\u5B50\u8282\u70B9\uFF0C <ul><li>\u5BF9\u4E8E\u76F8\u540C\u4F4D\u7F6E\uFF08\u7D22\u5F15\u503C\uFF09\u7684\u8282\u70B9\uFF0C\u4F1A\u4EA7\u751F\u4E0A\u9762\u63D0\u5230\u7684\u51E0\u79CD\u60C5\u51B5\uFF1A\u5220\u9664\u3001\u63D2\u5165\u3001\u66FF\u6362\u3001\u66F4\u65B0</li><li>\u53EF\u4EE5\u6839\u636E\u552F\u4E00id\u5FEB\u901F\u627E\u5230\u65E7\u8282\u70B9\u4E2D\u7684\u67D0\u4E2A\u8282\u70B9\uFF0C\u6B64\u65F6\u53EA\u9700\u8981\u79FB\u52A8\u8282\u70B9\u5373\u53EF\uFF0C\u65E0\u9700\u91CD\u65B0\u521B\u5EFA\u540E\u9762\u7684\u8282\u70B9</li></ul></li></ul><p>\u901A\u8FC7\u4E0A\u8FF0\u7B56\u7565 \uFF0C\u6574\u4E2Adiff\u64CD\u4F5C\u7684\u590D\u6742\u5EA6\u4ECE <code>O(n^3)</code>\u8F6C\u6362\u6210\u4E86<code>O(n) </code>\u3002\u6B64\u5916React\u8FD8\u63D0\u4F9B\u4E86<code>shouldComponentUpdate</code>\u3001<code>PureComponent</code>\u7B49\u65B9\u6848\u51CF\u5C11diff\u64CD\u4F5C\uFF0C\u8FDB\u4E00\u6B65\u8282\u7701\u6027\u80FD\u3002\u4E86\u89E3\u4E86diff\u7B97\u6CD5\u7684\u57FA\u672C\u4EFB\u52A1\u548C\u7B56\u7565\u4E4B\u540E\uFF0C\u6211\u4EEC\u6765\u5C1D\u8BD5\u5B9E\u73B0diff\u7B97\u6CD5\u3002</p><h2 id="\u9012\u5F52\u5B9E\u73B0diff" tabindex="-1">\u9012\u5F52\u5B9E\u73B0diff <a class="header-anchor" href="#\u9012\u5F52\u5B9E\u73B0diff" aria-hidden="true">#</a></h2><p>\u904D\u5386\u6811\u6700\u5E38\u7528\u7684\u64CD\u4F5C\u5C31\u662F\u9012\u5F52\uFF0C\u8FD9Vue\u548CReact16\u524D\u7248\u672C\u4F7F\u7528\u7684<code>Statck Reconciler</code>\u6240\u91C7\u7528\u7684\u65B9\u6848\u3002</p><h3 id="vue-diff" tabindex="-1">Vue diff <a class="header-anchor" href="#vue-diff" aria-hidden="true">#</a></h3><p>Preact\u4E0Evue\u5B9E\u73B0\u57FA\u672C\u76F8\u540C</p><p>\u53C2\u8003\uFF1A<a href="https://github.com/aooy/blog/issues/2" target="_blank" rel="noopener noreferrer">\u89E3\u6790vue2.0\u7684diff\u7B97\u6CD5</a></p><h3 id="\u7B80\u5355\u5B9E\u73B0" tabindex="-1">\u7B80\u5355\u5B9E\u73B0 <a class="header-anchor" href="#\u7B80\u5355\u5B9E\u73B0" aria-hidden="true">#</a></h3><p>\u5177\u4F53\u601D\u8DEF\u4E3A\uFF0C\u4ECE\u7EC4\u4EF6\u6811\u6839\u8282\u70B9\u5F00\u59CB\uFF0C\u5BF9\u6BD4\u65B0\u65E7\u7EC4\u4EF6\u6811\u7684\u4E24\u4E2A\u8282\u70B9\uFF0C\u7136\u540E\u6536\u96C6\u66F4\u65B0\uFF0C\u9012\u5F52\u5BF9\u6BD4\u5B50\u8282\u70B9\u5217\u8868\u4E2D\u7684\u6BCF\u4E00\u4E2A\u8282\u70B9\uFF0C\u76F4\u81F3\u904D\u5386\u5B8C\u6210</p><div class="language-js"><pre><code><span class="token comment">// \u5B9A\u4E49\u8282\u70B9\u53EF\u80FD\u53D1\u751F\u7684\u53D8\u5316</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token constant">REMOVE</span><span class="token punctuation">,</span> <span class="token constant">REPLACE</span><span class="token punctuation">,</span> <span class="token constant">INSERT</span><span class="token punctuation">,</span> <span class="token constant">UPDATE</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter">oldNode<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> patch<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u65E7\u8282\u70B9\u53CA\u5176\u5B50\u8282\u70B9\u90FD\u5C06\u79FB\u9664</span>
        patch <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">REMOVE</span><span class="token punctuation">,</span> oldNode <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F53\u524D\u8282\u70B9\u4E0E\u5176\u5B50\u8282\u70B9\u90FD\u5C06\u63D2\u5165</span>
        patch <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">INSERT</span><span class="token punctuation">,</span> newNode <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C06\u6240\u6709\u5B50\u8282\u70B9\u4E5F\u6807\u8BB0\u4E3AINSERT\uFF0C\u8FD9\u4E00\u6B65\u53EF\u4EE5\u8FDB\u884C\u4F18\u5316\uFF0C</span>
      	<span class="token comment">// \u5373\u5F53\u7236\u8282\u70B9\u4E3AINSERT\u65F6\uFF0C\u6240\u6709\u5B50\u8282\u70B9\u5747\u81EA\u52A8\u6807\u8BB0\u4E3AINSERT\uFF0C\u6B64\u5904\u4E3A\u4E86\u4FBF\u4E8E\u7406\u89E3\uFF0C\u6682\u4E0D\u5904\u7406</span>
        <span class="token function">diffChildren</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newNode<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldNode<span class="token punctuation">.</span>type <span class="token operator">!==</span> newNode<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F7F\u7528\u65B0\u8282\u70B9\u66FF\u6362\u65E7\u8282\u70B9</span>
        patch <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">REPLACE</span><span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u68C0\u6D4B\u5982\u679C\u5B58\u5728\u6709\u53D8\u5316\u7684\u5C5E\u6027\uFF0C\u5219\u9700\u8981\u5C06\u65B0\u8282\u70B9\u7684\u5C5E\u6027\u66F4\u65B0\u5230\u65E7\u8282\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">diffAttr</span><span class="token punctuation">(</span>oldNode<span class="token punctuation">.</span>props<span class="token punctuation">,</span> newNode<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            patch <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">UPDATE</span><span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7EE7\u7EED\u6BD4\u8F83\u5B50\u8282\u70B9</span>
        <span class="token function">diffChildren</span><span class="token punctuation">(</span>oldNode<span class="token punctuation">.</span>children<span class="token punctuation">,</span> newNode<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06\u66F4\u65B0\u4FDD\u5B58\u5728\u8282\u70B9\u7684patches\u5C5E\u6027\u4E0A\uFF0C\u65E7\u8282\u70B9\u7684\u5220\u9664\u9700\u8981\u4FDD\u5B58\u5728\u65B0\u65E7\u8282\u70B9\u516C\u5171\u7236\u8282\u70B9\u4E0A</span>
    <span class="token keyword">let</span> node <span class="token operator">=</span> newNode <span class="token operator">||</span> oldNode<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>patches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span>patches <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    patch <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>patches<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>patch<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">diffChildren</span><span class="token punctuation">(</span><span class="token parameter">oldChildren<span class="token punctuation">,</span> newChildren</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count<span class="token punctuation">;</span>
    <span class="token comment">// \u4F9D\u6B21\u6BD4\u8F83\u65E7\u7684\u5B50\u8282\u70B9\u5217\u8868\u548C\u65B0\u7684\u5B50\u8282\u70B9\u5217\u8868</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldChildren <span class="token operator">&amp;&amp;</span> oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldChildren<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token function">diff</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> <span class="token punctuation">(</span>newChildren <span class="token operator">&amp;&amp;</span> newChildren<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u8FD8\u6709\u672A\u6BD4\u8F83\u7684\u65B0\u8282\u70B9\uFF0C\u7EE7\u7EED\u8FDB\u884Cdiff\u5C06\u5176\u6807\u8BB0\u4E3AINSERT</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newChildren <span class="token operator">&amp;&amp;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> count <span class="token operator">&lt;</span> newChildren<span class="token punctuation">;</span> count<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">diff</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u6837\uFF0C\u5C31\u53EF\u4EE5\u5B8C\u6210\u65B0\u65E7\u7EC4\u4EF6\u6811\u7684diff\u64CD\u4F5C\uFF0C\u5E76\u5C06\u9700\u8981\u5904\u7406\u7684\u66F4\u65B0\u6302\u8F7D\u5230<code>node.patches</code>\u5C5E\u6027\u4E0A\uFF0C\u5728\u540E\u7EED\u7684patch\u9636\u6BB5\uFF0C\u4F1A\u6839\u636Ediff\u65F6\u6536\u96C6\u7684<code>type</code>\u505A\u5BF9\u5E94\u7684\u5904\u7406\u3002</p><p>\u4E3A\u4E86\u8FDB\u4E00\u6B65\u7406\u89E3diff\u7684\u4F5C\u7528\uFF0C\u4E0B\u9762\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u7684<code>patch</code>\u65B9\u6CD5\uFF0C\u7528\u4E8E\u67E5\u770Bdiff\u8FC7\u7A0B\u4E2D\u6536\u96C6\u5230\u7684\u53D8\u5316\u662F\u5982\u4F55\u66F4\u65B0\u5230\u9875\u9762\u4E0A\u7684\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token comment">// \u4ECE\u6839\u8282\u70B9\u5F00\u59CB\u6267\u884Cpatch\u64CD\u4F5C</span>
    <span class="token function">doPatch</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>

    node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">patch</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">doPatch</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> patches <span class="token operator">=</span> node<span class="token punctuation">.</span>patches<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>patches <span class="token operator">||</span> <span class="token operator">!</span>patches<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> handlers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token constant">REMOVE</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>oldNode<span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token constant">REPLACE</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">replaceChild</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> parent <span class="token operator">=</span> oldNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>$el<span class="token punctuation">;</span>
            <span class="token keyword">let</span> target <span class="token operator">=</span> oldNode<span class="token punctuation">.</span>$el<span class="token punctuation">;</span>

            newNode<span class="token punctuation">.</span>$el <span class="token operator">=</span> <span class="token function">createDOM</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>

            parent<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>$el<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token constant">UPDATE</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">updateNode</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> props <span class="token operator">=</span> newNode<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
            <span class="token comment">// todo \u8FD9\u91CC\u5E94\u8BE5\u53EA\u5904\u7406\u9700\u8981\u66F4\u65B0\u7684\u5C5E\u6027</span>
            Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                newNode<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token constant">INSERT</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newNode<span class="token punctuation">.</span>$el <span class="token operator">=</span> <span class="token function">createDOM</span><span class="token punctuation">(</span>newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>

            newNode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    patches<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">patch</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>type<span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode<span class="token punctuation">}</span> <span class="token operator">=</span> patch
        <span class="token keyword">let</span> handler <span class="token operator">=</span> handlers<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6839\u8282\u70B9\u7684\u7236\u8282\u70B9\u5176$el\u5C31\u662F\u9875\u9762\u6302\u8F7D\u5BB9\u5668</span>
        handler <span class="token operator">&amp;&amp;</span> <span class="token function">handler</span><span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>parent<span class="token punctuation">,</span> oldNode<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">createDOM</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u901A\u8FC7<code>patch</code>\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FDB\u4E00\u6B65\u4E86\u89E3diff\u7684\u4F5C\u7528\uFF1A\u5BF9\u6BD4\u65B0\u65E7\u8282\u70B9\uFF0C\u6536\u96C6\u8282\u70B9\u53D8\u5316\u7684\u7C7B\u578B\u662F\u5220\u9664\u3001\u63D2\u5165\u3001\u66FF\u6362\u3001\u66F4\u65B0\u4E2D\u7684\u67D0\u4E00\u79CD\uFF0C\u7136\u540E\u8C03\u7528DOM\u65B9\u6CD5\u5B8C\u6210\u9875\u9762\u89C6\u56FE\u7684\u66F4\u65B0\u3002</p><p>\u4E0A\u9762\u7684diff\u548Cpatch\u4E2D\uFF0C\u5E76\u6CA1\u6709\u5C55\u793A\u53D8\u5316\u7C7B\u578B\u4E3A<strong>\u79FB\u52A8</strong>\u7684\u8282\u70B9\uFF0C\u6211\u5C06\u5176\u653E\u5728\u4E86\u540E\u6587\u7684&quot;key\u5728diff\u4E2D\u7684\u4F5C\u7528&quot;\u8FD9\u4E00\u5C0F\u8282\u4E86\u3002</p><h2 id="\u5FAA\u73AF\u5B9E\u73B0diff" tabindex="-1">\u5FAA\u73AF\u5B9E\u73B0diff <a class="header-anchor" href="#\u5FAA\u73AF\u5B9E\u73B0diff" aria-hidden="true">#</a></h2><h3 id="react-fiber-reconciler" tabindex="-1">React Fiber Reconciler <a class="header-anchor" href="#react-fiber-reconciler" aria-hidden="true">#</a></h3><p>\u9012\u5F52\u5B9E\u73B0diff\u7684\u4E00\u4E2A\u95EE\u9898\u662F\uFF1A\u9012\u5F52\u5F88\u96BE\u88AB\u4E34\u65F6\u4E2D\u65AD\uFF0C\u5728\u67D0\u4E2A\u65F6\u523B\u53C8\u6062\u590D\u81F3\u539F\u6765\u8C03\u7528\u7684\u5730\u65B9\u3002\u56E0\u6B64\uFF0C\u9012\u5F52diff\u5FC5\u7136\u662F\u540C\u6B65\u8FDB\u884C\u7684\uFF0C\u5982\u679C\u7EC4\u4EF6\u6811\u5341\u5206\u5E9E\u5927\uFF0C\u9700\u8981\u8FDB\u884C\u7684diff\u64CD\u4F5C\u592A\u591A\uFF0C\u5C31\u4F1A\u5BFC\u81F4\u6D4F\u89C8\u5668\u5904\u4E8E\u5361\u6B7B\u7684\u72B6\u6001\u3002</p><p>\u57FA\u4E8E\u8FD9\u4E2A\u95EE\u9898\uFF0CReact\u5C06\u6574\u4E2Adiff\u8FC7\u7A0B\u91CD\u6784\u4E3A<code>Fiber Reconciler</code>\uFF0C\u901A\u8FC7fiber\u5C06\u7EC4\u4EF6\u6811\u4ECE\u6811\u7684\u7ED3\u6784\u8C03\u6574\u4E3A\u94FE\u8868\u7ED3\u6784\uFF0C\u5229\u7528\u94FE\u8868\u7684\u5FAA\u73AF\u548C<code>workInProgress</code>\u6E38\u6807\u5B9E\u73B0\u5F02\u6B65\u7684diff\u64CD\u4F5C\u3002</p><h3 id="\u7B80\u5355\u5B9E\u73B0-1" tabindex="-1">\u7B80\u5355\u5B9E\u73B0 <a class="header-anchor" href="#\u7B80\u5355\u5B9E\u73B0-1" aria-hidden="true">#</a></h3><p><code>Fiber Reconciler</code>\u5F15\u5165\u4E86<code>Fiber</code>\u6570\u636E\u7ED3\u6784\uFF0C\u7528\u4E8E\u5C06\u6574\u4E2A\u5E94\u7528\u4ECE\u6811\u7ED3\u6784\u4FEE\u6539\u4E3A\u94FE\u8868\u7ED3\u6784\uFF0C\u5BF9\u4E8E\u5355\u4E2Afiber\u8282\u70B9\u800C\u8A00\uFF0C\u6709\u4E0B\u9762\u51E0\u4E2A\u6BD4\u8F83\u91CD\u8981\u7684\u5C5E\u6027</p><ul><li><code>return</code>\u7236\u8282\u70B9</li><li><code>child</code>\u7B2C\u4E00\u4E2A\u5B50\u8282\u70B9</li><li><code>sibling</code>\u4E0B\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9</li></ul><p>\u6839\u636E\u4E0A\u9762\u8FD9\u4E09\u4E2A\u5C5E\u6027\uFF0C\u5C31\u53EF\u4EE5\u4ECE\u6839\u8282\u70B9\u901A\u8FC7\u5FAA\u73AF\u7684\u65B9\u5F0F\u5B8C\u6210\u6574\u4E2A\u7EC4\u4EF6\u6811\u7684\u904D\u5386\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u5927\u81F4\u5C55\u793A\u4E86\u5982\u4F55\u901A\u8FC7\u5FAA\u73AF\u94FE\u8868\u5B9E\u73B0diff\u7B97\u6CD5</p><div class="language-js"><pre><code><span class="token keyword">let</span> workInProgress<span class="token punctuation">,</span> currentWorkRoot
<span class="token keyword">function</span> <span class="token function">scheduleWork</span><span class="token punctuation">(</span><span class="token parameter">fiberRoot</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    workInProgress <span class="token operator">=</span> fiberRoot<span class="token punctuation">;</span>
    currentWorkRoot <span class="token operator">=</span> fiberRoot<span class="token punctuation">;</span>

    <span class="token comment">// \u6D4F\u89C8\u5668\u5728\u7A7A\u95F2\u671F\u95F4\u4F1A\u6301\u7EED\u8C03\u7528workLoop\uFF0C\u4ECEworkInProgress\u5F00\u59CB\u7EE7\u7EEDdiff</span>
    <span class="token function">requestHostCallback</span><span class="token punctuation">(</span>workLoop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">workLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>workInProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u5F53\u524D\u5E27\u662F\u5426\u5B8C\u6210\uFF0C\u6BCF\u5B8C\u6210\u4E00\u4E2A\u8282\u70B9\u7684diff\uFF0C\u5C31\u5C06\u63A7\u5236\u6743\u4EA4\u7ED9\u6D4F\u89C8\u5668\uFF0C\u68C0\u6D4B</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldYield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token comment">// \u5F53\u524D\u65F6\u95F4\u5207\u7247\u5DF2\u7528\u5149\uFF0C\u4F46diff\u6D41\u7A0B\u672A\u7ED3\u675F\uFF0C\u6D4F\u89C8\u5668\u4F1A\u5728\u5408\u9002\u7684\u5B9E\u9645\u7EE7\u7EED\u8C03\u7528workInProgress</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53EF\u4EE5\u7EE7\u7EED\u8FDB\u884C\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684diff</span>
            workInProgress <span class="token operator">=</span> <span class="token function">performUnitWork</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">performUnitWork</span><span class="token punctuation">(</span><span class="token parameter">fiber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newChildren <span class="token operator">=</span> <span class="token function">getFiberNewChildren</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u83B7\u5F97\u66F4\u65B0\u540E\u7684newChildren</span>
    <span class="token function">diff</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> newChildren<span class="token punctuation">,</span> oldChildren<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5982\u679C\u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u5219\u66F4\u65B0workInProgress</span>
   
  	<span class="token comment">// \u8FD4\u56DEworkLoop\uFF0C\u7EE7\u7EED\u904D\u5386</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>child<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> fiber<span class="token punctuation">.</span>child
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7136\u540E\u904D\u5386\u5144\u5F1F\u8282\u70B9\uFF0C\u5B8C\u6210\u5144\u5F1F\u8282\u70B9\u7684diff\u64CD\u4F5C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>sibling<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> fiber<span class="token punctuation">.</span>sibling<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u56DE\u5230\u7236\u8282\u70B9</span>
        fiber <span class="token operator">=</span> fiber<span class="token punctuation">.</span>return<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentWorkRoot <span class="token operator">===</span> fiber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u627E\u5230\u65E7\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">getFiberChildren</span><span class="token punctuation">(</span><span class="token parameter">fiber</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> child <span class="token operator">=</span> fiber<span class="token punctuation">.</span>child
    <span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
        child <span class="token operator">=</span> child<span class="token punctuation">.</span>sibling
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> children
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter">parentFiber<span class="token punctuation">,</span> newChildren</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> prevFiber <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	  <span class="token keyword">let</span> oldChildren <span class="token operator">=</span> <span class="token function">getFiberChildren</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u65E7\u7684\u5B50\u8282\u70B9\u5217\u8868</span>
    <span class="token keyword">let</span> i<span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u8282\u70B9\u4E0E\u65E7\u8282\u70B9\u5BF9\u6BD4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> newNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> oldFiber <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> newFiber<span class="token punctuation">;</span>
      	<span class="token comment">// \u6B64\u5904\u4E0E\u524D\u9762\u9012\u5F52\u5B9E\u73B0\u7684\u6BD4\u8F83\u903B\u8F91\u57FA\u672C\u76F8\u540C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7C7B\u578B\u76F8\u540C\uFF0C\u8868\u793A\u8282\u70B9\u5B9E\u4F8B\u53EF\u590D\u7528</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">diffAttr</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u5C5E\u6027\u4E0D\u540C\uFF0C\u6807\u8BB0\u4E3A\u66F4\u65B0</span>
                    newFiber <span class="token operator">=</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> <span class="token constant">UPDATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    newFiber<span class="token punctuation">.</span>alternate <span class="token operator">=</span> oldFiber<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5C5E\u6027\u76F8\u540C\uFF0C\u53EF\u4EE5\u5B8C\u5168\u590D\u7528</span>
                    newFiber <span class="token operator">=</span> oldFiber
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u7C7B\u578B\u4E0D\u540C\uFF0C\u6807\u8BB0\u4E3A\u66FF\u6362</span>
                newFiber <span class="token operator">=</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> <span class="token constant">REPLACE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            newFiber<span class="token punctuation">.</span>alternate <span class="token operator">=</span> oldFiber<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u524D\u4F4D\u7F6E\u4E0D\u5B58\u5728\u65E7\u8282\u70B9\uFF0C\u8868\u793A\u65B0\u589E</span>
            newFiber <span class="token operator">=</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> <span class="token constant">INSERT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8C03\u6574fiber\u4E4B\u95F4\u7684\u5F15\u7528\uFF0C\u6784\u5EFA\u65B0\u7684fiber\u6811</span>
        newFiber<span class="token punctuation">.</span>return <span class="token operator">=</span> parentFiber<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevFiber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            prevFiber<span class="token punctuation">.</span>sibling <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u66F4\u65B0\u7236\u5143\u7D20\u7684\u5B50\u8282\u70B9</span>
            parentFiber<span class="token punctuation">.</span>child <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        prevFiber <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u79FB\u9664\u5269\u4F59\u672A\u88AB\u6BD4\u8F83\u7684\u65E7\u8282\u70B9</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> oldFiber <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        oldFiber<span class="token punctuation">.</span>patchTag <span class="token operator">=</span> <span class="token constant">REMOVE</span><span class="token punctuation">;</span>
        <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>parentFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7531\u4E8E\u88AB\u5220\u9664\u7684\u8282\u70B9\u4E0D\u5B58\u5728fiber\u6811\u4E2D\uFF0C\u56E0\u6B64\u4EA4\u7ED9\u7236\u8282\u70B9\u6258\u7BA1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u540C\u6837\u5730\uFF0C\u8FD9\u91CC\u5C06\u8282\u70B9\u7684\u53D8\u5316\u6536\u96C6\u5728<code>patchTag</code>\u4E0A\uFF0C\u5728diff\u6D41\u7A0B\u7ED3\u675F\u4EE5\u540E\uFF0C\u4F1A\u7EDF\u4E00\u63D0\u4EA4\u53D8\u5316\uFF0C\u5B8C\u6210\u89C6\u56FE\u7684\u66F4\u65B0\u3002</p><h2 id="key\u5728diff\u4E2D\u7684\u4F5C\u7528" tabindex="-1">key\u5728diff\u4E2D\u7684\u4F5C\u7528 <a class="header-anchor" href="#key\u5728diff\u4E2D\u7684\u4F5C\u7528" aria-hidden="true">#</a></h2><blockquote><p>\u5728\u6E32\u67D3\u5217\u8868\u8282\u70B9\u4E2D\uFF0C \u901A\u8FC7key\u53EF\u4EE5\u5728\u540E\u7EEDdiff\u65F6\u79FB\u52A8\u8282\u70B9\uFF0C\u800C\u4E0D\u662F\u66F4\u65B0\u8282\u70B9\uFF0C</p></blockquote><p>\u53C2\u8003</p><ul><li><a href="https://juejin.im/post/5aae19aa6fb9a028d4445d1a" target="_blank" rel="noopener noreferrer">\u4E3A\u4EC0\u4E48\u4F7F\u7528v-for\u65F6\u5FC5\u987B\u6DFB\u52A0\u552F\u4E00\u7684key?</a></li><li><a href="https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/1" target="_blank" rel="noopener noreferrer">\u5199 React / Vue \u9879\u76EE\u65F6\u4E3A\u4EC0\u4E48\u8981\u5728\u5217\u8868\u7EC4\u4EF6\u4E2D\u5199 key\uFF0C\u5176\u4F5C\u7528\u662F\u4EC0\u4E48</a></li></ul><h3 id="\u65E0key\u4E0E\u6709key\u7684\u533A\u522B" tabindex="-1">\u65E0key\u4E0E\u6709key\u7684\u533A\u522B <a class="header-anchor" href="#\u65E0key\u4E0E\u6709key\u7684\u533A\u522B" aria-hidden="true">#</a></h3><p>\u5F53\u65E7\u7EC4\u4EF6\u7684\u6E32\u67D3\u5217\u8868\u4E3A<code>[1,2,3]</code>\u65F6\uFF0C\u8003\u8651\u4EE5\u4E0B\u573A\u666F</p><p>\u5217\u8868\u5143\u7D20\u987A\u5E8F\u53D1\u751F\u53D8\u5316\uFF0C\u66F4\u65B0\u540E\u5217\u8868\u4E3A<code>[2,1,3]</code></p><ul><li>\u4E0D\u5E26key,\u65B0\u65E7\u8282\u70B9\u5BF9\u6BD4 2-&gt;1 , 1-&gt;2 \uFF0C3-&gt;3\uFF0C\u9700\u8981\u66F4\u65B0\u4E24\u4E2A\u8282\u70B9\uFF0C\u4E0D\u9700\u8981\u8C03\u6362\u4F4D\u7F6E</li><li>\u5E26key\uFF0Ckey\u503C\u4E3Aitem\uFF0C\u65B0\u65E7\u8282\u70B9\u5BF9\u6BD4,1-&gt;1\uFF0C2-&gt;2\uFF0C3-&gt;3 \u4E0D\u9700\u8981\u66F4\u65B0DOM\u8282\u70B9\uFF0C\u9700\u8981\u8C03\u6362\u4F4D\u7F6E1\u548C2\u8282\u70B9\u7684\u4F4D\u7F6E</li></ul><p>\u5217\u8868\u8FDB\u884C\u589E\u52A0\u64CD\u4F5C\uFF0C\u66F4\u65B0\u540E\u5217\u8868\u4E3A<code>[1,4,2,3]</code></p><ul><li>\u4E0D\u5E26key\uFF0C1-&gt;1,2-&gt;4,3-&gt;2\uFF0Cnull-&gt;3\uFF0C\u7B2C\u4E8C\u3001\u4E09\u4E2A\u8282\u70B9\u9700\u8981\u66F4\u65B0\uFF0C\u7B2C\u56DB\u4E2A\u8282\u70B9\u9700\u8981\u63D2\u5165</li><li>\u5E26key\uFF0C1-&gt;1\uFF0C2-&gt;2\uFF0C3-&gt;3,null-&gt;4\uFF0C\u53EA\u9700\u8981\u5C06\u8282\u70B9\u63D2\u5165\u5230\u7B2C\u4E8C\u4E2A\u8282\u70B9\u7684\u524D\u65B9</li></ul><p>\u5217\u8868\u8FDB\u884C\u5220\u9664\u64CD\u4F5C\uFF0C\u66F4\u65B0\u540E\u5217\u8868\u4E3A<code>[1,3]</code></p><ul><li>\u4E0D\u5E26key\uFF0C1-&gt;1,2-&gt;3,3-&gt;null\uFF0C\u9700\u8981\u66F4\u65B0\u7B2C\u4E8C\u4E2A\u8282\u70B9\uFF0C\u540C\u65F6\u5C06\u7B2C\u4E09\u4E2A\u8282\u70B9\u5220\u9664</li><li>\u5E26key\uFF0C1-&gt;1,2-&gt;null,3-&gt;3\uFF0C\u9700\u8981\u5C06\u7B2C\u4E8C\u4E2A\u8282\u70B9\u79FB\u9664</li></ul><p>\u56E0\u6B64\u5728\u6E32\u67D3\u5217\u8868\u65F6\uFF0C\u5229\u7528key\u53EF\u4EE5diff\u8FC7\u7A0B\u4E2D\u5FEB\u901F\u627E\u5230\u540Ckey\u7684\u65E7\u8282\u70B9\uFF0C\u5C3D\u53EF\u80FD\u5730\u590D\u7528\u4E4B\u524D\u7684DOM\u8282\u70B9\uFF0C\u800C\u4E0D\u662F\u201D\u5C31\u5730\u590D\u7528\u201C\u53BB\u66F4\u65B0\u65E7\u8282\u70B9\u7684\u5185\u5BB9\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u4F7F\u7528key\u5E76\u4E0D\u4E00\u5B9A\u80FD\u5E26\u6765DOM\u6027\u80FD\u4E0A\u7684\u4F18\u5316\uFF0C\u6BD4\u5982\u5217\u8868\u6E32\u67D3\u7B80\u5355\u7684\u6587\u672C\u8282\u70B9\uFF0C\u76F4\u63A5\u66F4\u65B0\u6587\u672C\u8282\u70B9\u7684\u5185\u5BB9\uFF0C\u6BD4\u4EA4\u6362DOM\u4F4D\u7F6E\u7684\u6027\u80FD\u5E94\u8BE5\u66F4\u4F18\u3002</p><p>\u7EFC\u4E0A\u7406\u89E3\uFF0Ckey\u7684\u4F5C\u7528\u5728\u4E8E\uFF1A<strong>\u5728\u6570\u636E\u53D8\u5316\u65F6\u5F3A\u5236\u66F4\u65B0\u7EC4\u4EF6\uFF0C\u907F\u514D\u5C31\u5730\u590D\u7528\u5E26\u6765\u7684\u526F\u4F5C\u7528</strong>\u3002</p><h3 id="\u5B9E\u73B0key" tabindex="-1">\u5B9E\u73B0key <a class="header-anchor" href="#\u5B9E\u73B0key" aria-hidden="true">#</a></h3><p>\u5728\u524D\u9762\u672A\u5E26key\u7684diff\u5B9E\u73B0\u91CC\u9762\uFF0C\u6309\u7167\u6570\u7EC4\u7D22\u5F15\u503C\u67E5\u627E\u65E7\u8282\u70B9\uFF0C\u7136\u540E\u8FDB\u884C\u5BF9\u6BD4\uFF1B\u518D\u6DFB\u52A0\u4E86key\u4E4B\u540E\uFF0C\u5219\u5E94\u8BE5\u6309\u7167key\u67E5\u627E\u65E7\u8282\u70B9\uFF0C\u7136\u540E\u8FDB\u884C\u5BF9\u6BD4\u3002\u56E0\u6B64\u6211\u4EEC\u9700\u8981\u4FEE\u6539<code>getFiberChildren</code>\u65B9\u6CD5\u7684\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token comment">// \u627E\u5230\u4E4B\u524D\u7684\u65E7\u8282\u70B9\uFF0C\u4EE5 key=&gt;fiber \u5F62\u5F0F\u8FD4\u56DE</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getExistingChildren</span><span class="token punctuation">(</span><span class="token parameter">fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> Map<span class="token operator">&lt;</span>string <span class="token operator">|</span> number<span class="token punctuation">,</span> Fiber<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">existingChildren</span><span class="token operator">:</span> Map<span class="token operator">&lt;</span>string <span class="token operator">|</span> number<span class="token punctuation">,</span> Fiber<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token literal-property property">child</span><span class="token operator">:</span> Fiber <span class="token operator">=</span> fiber<span class="token punctuation">.</span>child
    <span class="token keyword">let</span> <span class="token literal-property property">count</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> vnode <span class="token operator">=</span> child<span class="token punctuation">.</span>vnode
        <span class="token keyword">let</span> key <span class="token operator">=</span> vnode<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> count <span class="token operator">:</span> vnode<span class="token punctuation">.</span>key
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>existingChildren<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            existingChildren<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> child<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5217\u8868\u8282\u70B9\u4E2Dkey\u5FC5\u987B\u662F\u552F\u4E00\u7684</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        child <span class="token operator">=</span> child<span class="token punctuation">.</span>sibling
        count<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> existingChildren
<span class="token punctuation">}</span>
<span class="token comment">// \u6BD4\u8F83\u65B0\u65E7fiber\u7684\u5B50\u8282\u70B9\uFF0C\u5E76\u5C06\u53EF\u7528\u7684fiber\u8282\u70B9\u8F6C\u6362\u4E3Afiber</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">parentFiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span> <span class="token literal-property property">newChildren</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> prevFiber <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> parentFiber<span class="token punctuation">.</span>alternate
    <span class="token comment">// \u7531key\u5C5E\u6027\u7EC4\u6210\u7684\u8282\u70B9\u6620\u5C04\uFF0C\u901A\u8FC7\u79FB\u52A8\u76F4\u63A5\u590D\u7528</span>
    <span class="token keyword">const</span> existingChildren <span class="token operator">=</span> <span class="token function">getExistingChildren</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
    <span class="token keyword">let</span> insertCount <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// \u65B0\u65E7\u8282\u70B9\u9010\u4E2Adiff</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> newNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">let</span> <span class="token literal-property property">newFiber</span><span class="token operator">:</span> Fiber
        <span class="token keyword">let</span> <span class="token literal-property property">oldFiber</span><span class="token operator">:</span> Fiber
        
        <span class="token comment">// \u6839\u636Ekey\u627E\u5230\u65E7\u8282\u70B9</span>
        <span class="token keyword">let</span> key <span class="token operator">=</span> newNode<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> i <span class="token operator">:</span> newNode<span class="token punctuation">.</span>key
        oldFiber <span class="token operator">=</span> existingChildren<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5224\u65AD\u4F4D\u7F6E\u662F\u5426\u76F8\u540C\uFF0C\u9700\u8981\u6392\u9664\u65B0\u63D2\u5165\u7684\u8282\u70B9</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber<span class="token punctuation">.</span>index <span class="token operator">===</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> insertCount<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  	<span class="token comment">// \u5224\u65ADprops\u5C5E\u6027\u662F\u5426\u53D8\u5316\u51B3\u5B9A\u662F\u5426\u6807\u8BB0\u4E3AUPDATE</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                  	<span class="token comment">// \u4E0E\u4E4B\u524D\u7684\u7D22\u5F15\u503C\u4E0D\u4E00\u81F4\uFF0C\u6807\u8BB0\u4E3AMOVE</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u7C7B\u578B\u4E0D\u540C\uFF0C\u5219\u9700\u8981\u5220\u9664\u5BF9\u5E94\u4F4D\u7F6E\u7684\u65E7\u8282\u70B9\uFF0C\u7136\u540E\u63D2\u5165\u65B0\u7684\u8282\u70B9\uFF0C\u6807\u8BB0\u4E3AREPLACE</span>
            <span class="token punctuation">}</span>
            existingChildren<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            insertCount<span class="token operator">++</span>
            <span class="token comment">// \u5F53\u524D\u4F4D\u7F6E\u4E0D\u5B58\u5728\u65E7\u8282\u70B9\uFF0C\u8868\u793A\u65B0\u589EADD</span>
            newFiber <span class="token operator">=</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> PatchTag<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        newFiber<span class="token punctuation">.</span>index <span class="token operator">=</span> i
      	<span class="token comment">// \u7701\u7565:\u8C03\u6574newFiber.return \u3001 prevFiber.sibling \u3001 parentFiber.child\u7684\u66F4\u65B0</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7701\u7565:\u79FB\u9664\u5269\u4F59\u672A\u88AB\u6BD4\u8F83\u7684\u65E7\u8282\u70B9</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\u5728patch\u7684\u65F6\u5019\uFF0C\u68C0\u6D4B\u5230<code>PatchTag.MOVE</code>\u7684\u53D8\u52A8\uFF0C\u5C31\u4F1A\u5C06\u65E7\u8282\u70B9\u79FB\u52A8\u5230\u65B0\u8282\u70B9\u7684\u6307\u5B9A\u4F4D\u7F6E\u3002</p><p>\u4ECE\u4E0A\u9762\u7684\u5B9E\u73B0\u53EF\u4EE5\u770B\u51FA\uFF0C\u5982\u679C\u5728\u6E32\u67D3\u5217\u8868\u65F6\u7528index\u4F5C\u4E3Akey\u503C\uFF0C\u5B9E\u9645\u4E0A\u5E76\u4E0D\u662F\u4E00\u4E2A\u5F88\u597D\u7684\u9009\u62E9\uFF0C\u56E0\u4E3Aindex\u4F5C\u4E3Akey\u503C\u4E0E\u524D\u9762\u65E0key\u503C\u67E5\u627E\u65E7\u8282\u70B9\u7684\u65B9\u5F0F\u5C31\u662F\u4E00\u6837\u7684\u4E86\uFF0C\u65E0\u6CD5\u907F\u514D\u5C31\u5730\u590D\u7528\u7684\u95EE\u9898\u3002</p><p>\u6B64\u5916\uFF0C<code>key</code>\u5C5E\u6027\u5E94\u8BE5\u662F\u7A33\u5B9A\uFF0C\u53EF\u9884\u6D4B\u548C\u552F\u4E00\u7684\u3002 \u4E0D\u7A33\u5B9A\u7684key(\u5982\u4F7F\u7528<code>Math.random()</code>\u751F\u7684<code>key</code>)\u5C06\u5BFC\u81F4\u8BB8\u591A\u7EC4\u4EF6\u5B9E\u4F8B\u548CDOM\u8282\u70B9\u8FDB\u884C\u4E0D\u5FC5\u8981\u5730\u91CD\u590D\u521B\u5EFA\uFF0C\u8FD9\u53EF\u80FD\u5BFC\u81F4\u5B50\u7EC4\u4EF6\u4E2D\u7684\u6027\u80FD\u964D\u4F4E\u548C<code>state</code>\u4E22\u5931</p><h2 id="\u5C0F\u7ED3" tabindex="-1">\u5C0F\u7ED3 <a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a></h2><p>\u672C\u6587\u6574\u7406\u4E86\u4E0B\u9762\u51E0\u4E2A\u65B9\u9762\u7684\u5185\u5BB9</p><ul><li>\u9996\u5148\u4ECEdiff\u7B97\u6CD5\u7684\u6982\u5FF5\u5165\u624B\uFF0C\u6574\u7406\u4E86diff\u7B97\u6CD5\u539F\u7406\uFF1A\u5373\u4F9D\u6B21\u5BF9\u6BD4\u65B0\u65E7\u8282\u70B9\uFF0C\u5E76\u6536\u96C6\u8282\u70B9\u7684\u53D8\u5316\u3002</li><li>\u7136\u540E\u7ED9\u51FA\u4E86\u9012\u5F52\u548C\u5FAA\u73AF\u4E24\u79CDdiff\u7B97\u6CD5\u7684\u5B9E\u73B0\u3002</li><li>\u6700\u540E\u8BA8\u8BBA\u4E86key\u5728diff\u7B97\u6CD5\u4E2D\u7684\u4F5C\u7528\uFF1A\u5C06\u6309\u7167\u7D22\u5F15\u503C\u67E5\u627E\u65E7\u8282\u70B9\u7684\u65B9\u5F0F\uFF0C\u4FEE\u6539\u4E3A\u6309\u7167key\u67E5\u627E\u65E7\u8282\u70B9</li></ul><p>\u901A\u8FC7\u624B\u52A8\u7F16\u5199\u4EE3\u7801\uFF0C\u53EF\u4EE5\u8FDB\u4E00\u6B65\u4E86\u89E3diff\u7B97\u6CD5\u7684\u539F\u7406\u548C\u4F7F\u7528\u3002</p>`,67),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var y=n(t,[["render",c]]);export{h as __pageData,y as default};
